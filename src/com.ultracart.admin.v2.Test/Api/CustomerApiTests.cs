/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.ultracart.admin.v2.Client;
using com.ultracart.admin.v2.Api;
using com.ultracart.admin.v2.Model;

namespace com.ultracart.admin.v2.Test
{
    /// <summary>
    ///  Class for testing CustomerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CustomerApiTests
    {
        private CustomerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomerApi
            //Assert.IsInstanceOfType(typeof(CustomerApi), instance, "instance is a CustomerApi");
        }

        
        /// <summary>
        /// Test CustomerCustomersCustomerProfileOidGet
        /// </summary>
        [Test]
        public void CustomerCustomersCustomerProfileOidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerProfileOid = null;
            //string expand = null;
            //var response = instance.CustomerCustomersCustomerProfileOidGet(customerProfileOid, expand);
            //Assert.IsInstanceOf<CustomerResponse> (response, "response is CustomerResponse");
        }
        
        /// <summary>
        /// Test CustomerCustomersCustomerProfileOidPut
        /// </summary>
        [Test]
        public void CustomerCustomersCustomerProfileOidPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Customer customer = null;
            //int? customerProfileOid = null;
            //var response = instance.CustomerCustomersCustomerProfileOidPut(customer, customerProfileOid);
            //Assert.IsInstanceOf<CustomerResponse> (response, "response is CustomerResponse");
        }
        
        /// <summary>
        /// Test CustomerCustomersGet
        /// </summary>
        [Test]
        public void CustomerCustomersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //string qbClass = null;
            //string quickbooksCode = null;
            //string lastModifiedDtsStart = null;
            //string lastModifiedDtsEnd = null;
            //string signupDtsStart = null;
            //string signupDtsEnd = null;
            //string billingFirstName = null;
            //string billingLastName = null;
            //string billingCompany = null;
            //string billingCity = null;
            //string billingState = null;
            //string billingPostalCode = null;
            //string billingCountryCode = null;
            //string billingDayPhone = null;
            //string billingEveningPhone = null;
            //string shippingFirstName = null;
            //string shippingLastName = null;
            //string shippingCompany = null;
            //string shippingCity = null;
            //string shippingState = null;
            //string shippingPostalCode = null;
            //string shippingCountryCode = null;
            //string shippingDayPhone = null;
            //string shippingEveningPhone = null;
            //int? pricingTierOid = null;
            //string pricingTierName = null;
            //int? limit = null;
            //int? offset = null;
            //string since = null;
            //string sort = null;
            //string expand = null;
            //var response = instance.CustomerCustomersGet(email, qbClass, quickbooksCode, lastModifiedDtsStart, lastModifiedDtsEnd, signupDtsStart, signupDtsEnd, billingFirstName, billingLastName, billingCompany, billingCity, billingState, billingPostalCode, billingCountryCode, billingDayPhone, billingEveningPhone, shippingFirstName, shippingLastName, shippingCompany, shippingCity, shippingState, shippingPostalCode, shippingCountryCode, shippingDayPhone, shippingEveningPhone, pricingTierOid, pricingTierName, limit, offset, since, sort, expand);
            //Assert.IsInstanceOf<CustomersResponse> (response, "response is CustomersResponse");
        }
        
    }

}
