/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.ultracart.admin.v2.Client;
using com.ultracart.admin.v2.Api;
using com.ultracart.admin.v2.Model;

namespace com.ultracart.admin.v2.Test
{
    /// <summary>
    ///  Class for testing OrderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrderApiTests
    {
        private OrderApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrderApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrderApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrderApi
            //Assert.IsInstanceOfType(typeof(OrderApi), instance, "instance is a OrderApi");
        }

        
        /// <summary>
        /// Test OrderOrdersGet
        /// </summary>
        [Test]
        public void OrderOrdersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //string paymentMethod = null;
            //string company = null;
            //string firstName = null;
            //string lastName = null;
            //string city = null;
            //string stateRegion = null;
            //string postalCode = null;
            //string countryCode = null;
            //string phone = null;
            //string email = null;
            //string ccEmail = null;
            //decimal? total = null;
            //string screenBrandingThemeCode = null;
            //string storefrontHostName = null;
            //string creationDateBegin = null;
            //string creationDateEnd = null;
            //string paymentDateBegin = null;
            //string paymentDateEnd = null;
            //string shipmentDateBegin = null;
            //string shipmentDateEnd = null;
            //string rma = null;
            //string purchaseOrderNumber = null;
            //string itemId = null;
            //string currentStage = null;
            //string channelPartnerCode = null;
            //string channelPartnerOrderId = null;
            //int? limit = null;
            //int? offset = null;
            //string sort = null;
            //string expand = null;
            //var response = instance.OrderOrdersGet(orderId, paymentMethod, company, firstName, lastName, city, stateRegion, postalCode, countryCode, phone, email, ccEmail, total, screenBrandingThemeCode, storefrontHostName, creationDateBegin, creationDateEnd, paymentDateBegin, paymentDateEnd, shipmentDateBegin, shipmentDateEnd, rma, purchaseOrderNumber, itemId, currentStage, channelPartnerCode, channelPartnerOrderId, limit, offset, sort, expand);
            //Assert.IsInstanceOf<OrdersResponse> (response, "response is OrdersResponse");
        }
        
        /// <summary>
        /// Test OrderOrdersOrderIdCancelPost
        /// </summary>
        [Test]
        public void OrderOrdersOrderIdCancelPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //var response = instance.OrderOrdersOrderIdCancelPost(orderId);
            //Assert.IsInstanceOf<BaseResponse> (response, "response is BaseResponse");
        }
        
        /// <summary>
        /// Test OrderOrdersOrderIdDelete
        /// </summary>
        [Test]
        public void OrderOrdersOrderIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //instance.OrderOrdersOrderIdDelete(orderId);
            
        }
        
        /// <summary>
        /// Test OrderOrdersOrderIdGet
        /// </summary>
        [Test]
        public void OrderOrdersOrderIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //string expand = null;
            //var response = instance.OrderOrdersOrderIdGet(orderId, expand);
            //Assert.IsInstanceOf<OrderResponse> (response, "response is OrderResponse");
        }
        
        /// <summary>
        /// Test OrderOrdersOrderIdPut
        /// </summary>
        [Test]
        public void OrderOrdersOrderIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Order order = null;
            //string orderId = null;
            //var response = instance.OrderOrdersOrderIdPut(order, orderId);
            //Assert.IsInstanceOf<OrderResponse> (response, "response is OrderResponse");
        }
        
        /// <summary>
        /// Test OrderOrdersOrderIdResendReceiptPost
        /// </summary>
        [Test]
        public void OrderOrdersOrderIdResendReceiptPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //var response = instance.OrderOrdersOrderIdResendReceiptPost(orderId);
            //Assert.IsInstanceOf<BaseResponse> (response, "response is BaseResponse");
        }
        
        /// <summary>
        /// Test OrderOrdersOrderIdResendShipmentConfirmationPost
        /// </summary>
        [Test]
        public void OrderOrdersOrderIdResendShipmentConfirmationPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //var response = instance.OrderOrdersOrderIdResendShipmentConfirmationPost(orderId);
            //Assert.IsInstanceOf<BaseResponse> (response, "response is BaseResponse");
        }
        
    }

}
