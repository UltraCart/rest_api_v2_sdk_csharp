/*
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.ultracart.admin.v2.Client.OpenAPIDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// AccountsReceivableRetryDayActivity
    /// </summary>
    [DataContract]
    public partial class AccountsReceivableRetryDayActivity :  IEquatable<AccountsReceivableRetryDayActivity>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountsReceivableRetryDayActivity" /> class.
        /// </summary>
        /// <param name="charge">True if a charge attempt should be made on this day.  False means the order should be rejected on this day..</param>
        /// <param name="couponCode">The coupon code that should be applied to this order..</param>
        /// <param name="day">The number of days since the order placed in Accounts Receivable.</param>
        public AccountsReceivableRetryDayActivity(bool charge = default(bool), string couponCode = default(string), int day = default(int))
        {
            this.Charge = charge;
            this.CouponCode = couponCode;
            this.Day = day;
        }

        /// <summary>
        /// True if a charge attempt should be made on this day.  False means the order should be rejected on this day.
        /// </summary>
        /// <value>True if a charge attempt should be made on this day.  False means the order should be rejected on this day.</value>
        [DataMember(Name="charge", EmitDefaultValue=false)]
        public bool Charge { get; set; }

        /// <summary>
        /// The coupon code that should be applied to this order.
        /// </summary>
        /// <value>The coupon code that should be applied to this order.</value>
        [DataMember(Name="coupon_code", EmitDefaultValue=false)]
        public string CouponCode { get; set; }

        /// <summary>
        /// The number of days since the order placed in Accounts Receivable
        /// </summary>
        /// <value>The number of days since the order placed in Accounts Receivable</value>
        [DataMember(Name="day", EmitDefaultValue=false)]
        public int Day { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AccountsReceivableRetryDayActivity {\n");
            sb.Append("  Charge: ").Append(Charge).Append("\n");
            sb.Append("  CouponCode: ").Append(CouponCode).Append("\n");
            sb.Append("  Day: ").Append(Day).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccountsReceivableRetryDayActivity);
        }

        /// <summary>
        /// Returns true if AccountsReceivableRetryDayActivity instances are equal
        /// </summary>
        /// <param name="input">Instance of AccountsReceivableRetryDayActivity to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountsReceivableRetryDayActivity input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Charge == input.Charge ||
                    (this.Charge != null &&
                    this.Charge.Equals(input.Charge))
                ) && 
                (
                    this.CouponCode == input.CouponCode ||
                    (this.CouponCode != null &&
                    this.CouponCode.Equals(input.CouponCode))
                ) && 
                (
                    this.Day == input.Day ||
                    (this.Day != null &&
                    this.Day.Equals(input.Day))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Charge != null)
                    hashCode = hashCode * 59 + this.Charge.GetHashCode();
                if (this.CouponCode != null)
                    hashCode = hashCode * 59 + this.CouponCode.GetHashCode();
                if (this.Day != null)
                    hashCode = hashCode * 59 + this.Day.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
