/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// AccountsReceivableRetryStatsResponse
    /// </summary>
    [DataContract]
    public partial class AccountsReceivableRetryStatsResponse :  IEquatable<AccountsReceivableRetryStatsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountsReceivableRetryStatsResponse" /> class.
        /// </summary>
        /// <param name="Error">Error.</param>
        /// <param name="LinkedAccounts">LinkedAccounts.</param>
        /// <param name="Metadata">Metadata.</param>
        /// <param name="Overall">Overall.</param>
        /// <param name="Success">Indicates if API call was successful.</param>
        public AccountsReceivableRetryStatsResponse(Error Error = default(Error), List<AccountsReceivableRetryStatAccount> LinkedAccounts = default(List<AccountsReceivableRetryStatAccount>), ResponseMetadata Metadata = default(ResponseMetadata), AccountsReceivableRetryStatAccount Overall = default(AccountsReceivableRetryStatAccount), bool? Success = default(bool?))
        {
            this.Error = Error;
            this.LinkedAccounts = LinkedAccounts;
            this.Metadata = Metadata;
            this.Overall = Overall;
            this.Success = Success;
        }
        
        /// <summary>
        /// Gets or Sets Error
        /// </summary>
        [DataMember(Name="error", EmitDefaultValue=false)]
        public Error Error { get; set; }

        /// <summary>
        /// Gets or Sets LinkedAccounts
        /// </summary>
        [DataMember(Name="linked_accounts", EmitDefaultValue=false)]
        public List<AccountsReceivableRetryStatAccount> LinkedAccounts { get; set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public ResponseMetadata Metadata { get; set; }

        /// <summary>
        /// Gets or Sets Overall
        /// </summary>
        [DataMember(Name="overall", EmitDefaultValue=false)]
        public AccountsReceivableRetryStatAccount Overall { get; set; }

        /// <summary>
        /// Indicates if API call was successful
        /// </summary>
        /// <value>Indicates if API call was successful</value>
        [DataMember(Name="success", EmitDefaultValue=false)]
        public bool? Success { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AccountsReceivableRetryStatsResponse {\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  LinkedAccounts: ").Append(LinkedAccounts).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  Overall: ").Append(Overall).Append("\n");
            sb.Append("  Success: ").Append(Success).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccountsReceivableRetryStatsResponse);
        }

        /// <summary>
        /// Returns true if AccountsReceivableRetryStatsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of AccountsReceivableRetryStatsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountsReceivableRetryStatsResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Error == input.Error ||
                    (this.Error != null &&
                    this.Error.Equals(input.Error))
                ) && 
                (
                    this.LinkedAccounts == input.LinkedAccounts ||
                    this.LinkedAccounts != null &&
                    this.LinkedAccounts.SequenceEqual(input.LinkedAccounts)
                ) && 
                (
                    this.Metadata == input.Metadata ||
                    (this.Metadata != null &&
                    this.Metadata.Equals(input.Metadata))
                ) && 
                (
                    this.Overall == input.Overall ||
                    (this.Overall != null &&
                    this.Overall.Equals(input.Overall))
                ) && 
                (
                    this.Success == input.Success ||
                    (this.Success != null &&
                    this.Success.Equals(input.Success))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Error != null)
                    hashCode = hashCode * 59 + this.Error.GetHashCode();
                if (this.LinkedAccounts != null)
                    hashCode = hashCode * 59 + this.LinkedAccounts.GetHashCode();
                if (this.Metadata != null)
                    hashCode = hashCode * 59 + this.Metadata.GetHashCode();
                if (this.Overall != null)
                    hashCode = hashCode * 59 + this.Overall.GetHashCode();
                if (this.Success != null)
                    hashCode = hashCode * 59 + this.Success.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
