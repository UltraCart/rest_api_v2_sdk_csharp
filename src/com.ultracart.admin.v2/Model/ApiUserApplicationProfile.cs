/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ApiUserApplicationProfile
    /// </summary>
    [DataContract]
    public partial class ApiUserApplicationProfile :  IEquatable<ApiUserApplicationProfile>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiUserApplicationProfile" /> class.
        /// </summary>
        /// <param name="ApiApplicationLogoUrl">ApiApplicationLogoUrl.</param>
        /// <param name="ApplicationDescription">ApplicationDescription.</param>
        /// <param name="ApplicationName">ApplicationName.</param>
        /// <param name="DeveloperName">DeveloperName.</param>
        /// <param name="DeveloperWebsite">DeveloperWebsite.</param>
        public ApiUserApplicationProfile(string ApiApplicationLogoUrl = null, string ApplicationDescription = null, string ApplicationName = null, string DeveloperName = null, string DeveloperWebsite = null)
        {
            this.ApiApplicationLogoUrl = ApiApplicationLogoUrl;
            this.ApplicationDescription = ApplicationDescription;
            this.ApplicationName = ApplicationName;
            this.DeveloperName = DeveloperName;
            this.DeveloperWebsite = DeveloperWebsite;
        }
        
        /// <summary>
        /// Gets or Sets ApiApplicationLogoUrl
        /// </summary>
        [DataMember(Name="api_application_logo_url", EmitDefaultValue=false)]
        public string ApiApplicationLogoUrl { get; set; }
        /// <summary>
        /// Gets or Sets ApplicationDescription
        /// </summary>
        [DataMember(Name="application_description", EmitDefaultValue=false)]
        public string ApplicationDescription { get; set; }
        /// <summary>
        /// Gets or Sets ApplicationName
        /// </summary>
        [DataMember(Name="application_name", EmitDefaultValue=false)]
        public string ApplicationName { get; set; }
        /// <summary>
        /// Gets or Sets DeveloperName
        /// </summary>
        [DataMember(Name="developer_name", EmitDefaultValue=false)]
        public string DeveloperName { get; set; }
        /// <summary>
        /// Gets or Sets DeveloperWebsite
        /// </summary>
        [DataMember(Name="developer_website", EmitDefaultValue=false)]
        public string DeveloperWebsite { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiUserApplicationProfile {\n");
            sb.Append("  ApiApplicationLogoUrl: ").Append(ApiApplicationLogoUrl).Append("\n");
            sb.Append("  ApplicationDescription: ").Append(ApplicationDescription).Append("\n");
            sb.Append("  ApplicationName: ").Append(ApplicationName).Append("\n");
            sb.Append("  DeveloperName: ").Append(DeveloperName).Append("\n");
            sb.Append("  DeveloperWebsite: ").Append(DeveloperWebsite).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ApiUserApplicationProfile);
        }

        /// <summary>
        /// Returns true if ApiUserApplicationProfile instances are equal
        /// </summary>
        /// <param name="other">Instance of ApiUserApplicationProfile to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiUserApplicationProfile other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ApiApplicationLogoUrl == other.ApiApplicationLogoUrl ||
                    this.ApiApplicationLogoUrl != null &&
                    this.ApiApplicationLogoUrl.Equals(other.ApiApplicationLogoUrl)
                ) && 
                (
                    this.ApplicationDescription == other.ApplicationDescription ||
                    this.ApplicationDescription != null &&
                    this.ApplicationDescription.Equals(other.ApplicationDescription)
                ) && 
                (
                    this.ApplicationName == other.ApplicationName ||
                    this.ApplicationName != null &&
                    this.ApplicationName.Equals(other.ApplicationName)
                ) && 
                (
                    this.DeveloperName == other.DeveloperName ||
                    this.DeveloperName != null &&
                    this.DeveloperName.Equals(other.DeveloperName)
                ) && 
                (
                    this.DeveloperWebsite == other.DeveloperWebsite ||
                    this.DeveloperWebsite != null &&
                    this.DeveloperWebsite.Equals(other.DeveloperWebsite)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ApiApplicationLogoUrl != null)
                    hash = hash * 59 + this.ApiApplicationLogoUrl.GetHashCode();
                if (this.ApplicationDescription != null)
                    hash = hash * 59 + this.ApplicationDescription.GetHashCode();
                if (this.ApplicationName != null)
                    hash = hash * 59 + this.ApplicationName.GetHashCode();
                if (this.DeveloperName != null)
                    hash = hash * 59 + this.DeveloperName.GetHashCode();
                if (this.DeveloperWebsite != null)
                    hash = hash * 59 + this.DeveloperWebsite.GetHashCode();
                return hash;
            }
        }
    }

}
