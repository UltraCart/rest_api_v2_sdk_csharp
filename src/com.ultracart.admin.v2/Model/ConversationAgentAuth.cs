/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ConversationAgentAuth
    /// </summary>
    [DataContract]
    public partial class ConversationAgentAuth :  IEquatable<ConversationAgentAuth>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversationAgentAuth" /> class.
        /// </summary>
        /// <param name="conversationParticipantArn">conversationParticipantArn.</param>
        /// <param name="conversationParticipantName">conversationParticipantName.</param>
        /// <param name="groupIds">UltraCart Groups this user belongs to.</param>
        /// <param name="jwt">jwt.</param>
        /// <param name="merchantId">merchantId.</param>
        /// <param name="pbxAdmin">pbxAdmin.</param>
        /// <param name="pbxJwt">pbxJwt.</param>
        /// <param name="pbxSupervisor">pbxSupervisor.</param>
        /// <param name="pbxUser">pbxUser.</param>
        /// <param name="pbxVoiceIdentity">pbxVoiceIdentity.</param>
        /// <param name="pbxVoiceToken">pbxVoiceToken.</param>
        /// <param name="pbxWorkerToken">pbxWorkerToken.</param>
        /// <param name="twilioAccounts">twilioAccounts.</param>
        /// <param name="userId">UltraCart User ID.</param>
        /// <param name="websocketUrl">websocketUrl.</param>
        public ConversationAgentAuth(string conversationParticipantArn = default(string), string conversationParticipantName = default(string), List<int?> groupIds = default(List<int?>), string jwt = default(string), string merchantId = default(string), bool? pbxAdmin = default(bool?), string pbxJwt = default(string), bool? pbxSupervisor = default(bool?), bool? pbxUser = default(bool?), string pbxVoiceIdentity = default(string), string pbxVoiceToken = default(string), string pbxWorkerToken = default(string), List<ConversationTwilioAccount> twilioAccounts = default(List<ConversationTwilioAccount>), int? userId = default(int?), string websocketUrl = default(string))
        {
            this.ConversationParticipantArn = conversationParticipantArn;
            this.ConversationParticipantName = conversationParticipantName;
            this.GroupIds = groupIds;
            this.Jwt = jwt;
            this.MerchantId = merchantId;
            this.PbxAdmin = pbxAdmin;
            this.PbxJwt = pbxJwt;
            this.PbxSupervisor = pbxSupervisor;
            this.PbxUser = pbxUser;
            this.PbxVoiceIdentity = pbxVoiceIdentity;
            this.PbxVoiceToken = pbxVoiceToken;
            this.PbxWorkerToken = pbxWorkerToken;
            this.TwilioAccounts = twilioAccounts;
            this.UserId = userId;
            this.WebsocketUrl = websocketUrl;
        }
        
        /// <summary>
        /// Gets or Sets ConversationParticipantArn
        /// </summary>
        [DataMember(Name="conversation_participant_arn", EmitDefaultValue=false)]
        public string ConversationParticipantArn { get; set; }

        /// <summary>
        /// Gets or Sets ConversationParticipantName
        /// </summary>
        [DataMember(Name="conversation_participant_name", EmitDefaultValue=false)]
        public string ConversationParticipantName { get; set; }

        /// <summary>
        /// UltraCart Groups this user belongs to
        /// </summary>
        /// <value>UltraCart Groups this user belongs to</value>
        [DataMember(Name="group_ids", EmitDefaultValue=false)]
        public List<int?> GroupIds { get; set; }

        /// <summary>
        /// Gets or Sets Jwt
        /// </summary>
        [DataMember(Name="jwt", EmitDefaultValue=false)]
        public string Jwt { get; set; }

        /// <summary>
        /// Gets or Sets MerchantId
        /// </summary>
        [DataMember(Name="merchant_id", EmitDefaultValue=false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// Gets or Sets PbxAdmin
        /// </summary>
        [DataMember(Name="pbx_admin", EmitDefaultValue=false)]
        public bool? PbxAdmin { get; set; }

        /// <summary>
        /// Gets or Sets PbxJwt
        /// </summary>
        [DataMember(Name="pbx_jwt", EmitDefaultValue=false)]
        public string PbxJwt { get; set; }

        /// <summary>
        /// Gets or Sets PbxSupervisor
        /// </summary>
        [DataMember(Name="pbx_supervisor", EmitDefaultValue=false)]
        public bool? PbxSupervisor { get; set; }

        /// <summary>
        /// Gets or Sets PbxUser
        /// </summary>
        [DataMember(Name="pbx_user", EmitDefaultValue=false)]
        public bool? PbxUser { get; set; }

        /// <summary>
        /// Gets or Sets PbxVoiceIdentity
        /// </summary>
        [DataMember(Name="pbx_voice_identity", EmitDefaultValue=false)]
        public string PbxVoiceIdentity { get; set; }

        /// <summary>
        /// Gets or Sets PbxVoiceToken
        /// </summary>
        [DataMember(Name="pbx_voice_token", EmitDefaultValue=false)]
        public string PbxVoiceToken { get; set; }

        /// <summary>
        /// Gets or Sets PbxWorkerToken
        /// </summary>
        [DataMember(Name="pbx_worker_token", EmitDefaultValue=false)]
        public string PbxWorkerToken { get; set; }

        /// <summary>
        /// Gets or Sets TwilioAccounts
        /// </summary>
        [DataMember(Name="twilio_accounts", EmitDefaultValue=false)]
        public List<ConversationTwilioAccount> TwilioAccounts { get; set; }

        /// <summary>
        /// UltraCart User ID
        /// </summary>
        /// <value>UltraCart User ID</value>
        [DataMember(Name="user_id", EmitDefaultValue=false)]
        public int? UserId { get; set; }

        /// <summary>
        /// Gets or Sets WebsocketUrl
        /// </summary>
        [DataMember(Name="websocket_url", EmitDefaultValue=false)]
        public string WebsocketUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ConversationAgentAuth {\n");
            sb.Append("  ConversationParticipantArn: ").Append(ConversationParticipantArn).Append("\n");
            sb.Append("  ConversationParticipantName: ").Append(ConversationParticipantName).Append("\n");
            sb.Append("  GroupIds: ").Append(GroupIds).Append("\n");
            sb.Append("  Jwt: ").Append(Jwt).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  PbxAdmin: ").Append(PbxAdmin).Append("\n");
            sb.Append("  PbxJwt: ").Append(PbxJwt).Append("\n");
            sb.Append("  PbxSupervisor: ").Append(PbxSupervisor).Append("\n");
            sb.Append("  PbxUser: ").Append(PbxUser).Append("\n");
            sb.Append("  PbxVoiceIdentity: ").Append(PbxVoiceIdentity).Append("\n");
            sb.Append("  PbxVoiceToken: ").Append(PbxVoiceToken).Append("\n");
            sb.Append("  PbxWorkerToken: ").Append(PbxWorkerToken).Append("\n");
            sb.Append("  TwilioAccounts: ").Append(TwilioAccounts).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  WebsocketUrl: ").Append(WebsocketUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ConversationAgentAuth);
        }

        /// <summary>
        /// Returns true if ConversationAgentAuth instances are equal
        /// </summary>
        /// <param name="input">Instance of ConversationAgentAuth to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConversationAgentAuth input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConversationParticipantArn == input.ConversationParticipantArn ||
                    (this.ConversationParticipantArn != null &&
                    this.ConversationParticipantArn.Equals(input.ConversationParticipantArn))
                ) && 
                (
                    this.ConversationParticipantName == input.ConversationParticipantName ||
                    (this.ConversationParticipantName != null &&
                    this.ConversationParticipantName.Equals(input.ConversationParticipantName))
                ) && 
                (
                    this.GroupIds == input.GroupIds ||
                    this.GroupIds != null &&
                    this.GroupIds.SequenceEqual(input.GroupIds)
                ) && 
                (
                    this.Jwt == input.Jwt ||
                    (this.Jwt != null &&
                    this.Jwt.Equals(input.Jwt))
                ) && 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.PbxAdmin == input.PbxAdmin ||
                    (this.PbxAdmin != null &&
                    this.PbxAdmin.Equals(input.PbxAdmin))
                ) && 
                (
                    this.PbxJwt == input.PbxJwt ||
                    (this.PbxJwt != null &&
                    this.PbxJwt.Equals(input.PbxJwt))
                ) && 
                (
                    this.PbxSupervisor == input.PbxSupervisor ||
                    (this.PbxSupervisor != null &&
                    this.PbxSupervisor.Equals(input.PbxSupervisor))
                ) && 
                (
                    this.PbxUser == input.PbxUser ||
                    (this.PbxUser != null &&
                    this.PbxUser.Equals(input.PbxUser))
                ) && 
                (
                    this.PbxVoiceIdentity == input.PbxVoiceIdentity ||
                    (this.PbxVoiceIdentity != null &&
                    this.PbxVoiceIdentity.Equals(input.PbxVoiceIdentity))
                ) && 
                (
                    this.PbxVoiceToken == input.PbxVoiceToken ||
                    (this.PbxVoiceToken != null &&
                    this.PbxVoiceToken.Equals(input.PbxVoiceToken))
                ) && 
                (
                    this.PbxWorkerToken == input.PbxWorkerToken ||
                    (this.PbxWorkerToken != null &&
                    this.PbxWorkerToken.Equals(input.PbxWorkerToken))
                ) && 
                (
                    this.TwilioAccounts == input.TwilioAccounts ||
                    this.TwilioAccounts != null &&
                    this.TwilioAccounts.SequenceEqual(input.TwilioAccounts)
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this.WebsocketUrl == input.WebsocketUrl ||
                    (this.WebsocketUrl != null &&
                    this.WebsocketUrl.Equals(input.WebsocketUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConversationParticipantArn != null)
                    hashCode = hashCode * 59 + this.ConversationParticipantArn.GetHashCode();
                if (this.ConversationParticipantName != null)
                    hashCode = hashCode * 59 + this.ConversationParticipantName.GetHashCode();
                if (this.GroupIds != null)
                    hashCode = hashCode * 59 + this.GroupIds.GetHashCode();
                if (this.Jwt != null)
                    hashCode = hashCode * 59 + this.Jwt.GetHashCode();
                if (this.MerchantId != null)
                    hashCode = hashCode * 59 + this.MerchantId.GetHashCode();
                if (this.PbxAdmin != null)
                    hashCode = hashCode * 59 + this.PbxAdmin.GetHashCode();
                if (this.PbxJwt != null)
                    hashCode = hashCode * 59 + this.PbxJwt.GetHashCode();
                if (this.PbxSupervisor != null)
                    hashCode = hashCode * 59 + this.PbxSupervisor.GetHashCode();
                if (this.PbxUser != null)
                    hashCode = hashCode * 59 + this.PbxUser.GetHashCode();
                if (this.PbxVoiceIdentity != null)
                    hashCode = hashCode * 59 + this.PbxVoiceIdentity.GetHashCode();
                if (this.PbxVoiceToken != null)
                    hashCode = hashCode * 59 + this.PbxVoiceToken.GetHashCode();
                if (this.PbxWorkerToken != null)
                    hashCode = hashCode * 59 + this.PbxWorkerToken.GetHashCode();
                if (this.TwilioAccounts != null)
                    hashCode = hashCode * 59 + this.TwilioAccounts.GetHashCode();
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                if (this.WebsocketUrl != null)
                    hashCode = hashCode * 59 + this.WebsocketUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
