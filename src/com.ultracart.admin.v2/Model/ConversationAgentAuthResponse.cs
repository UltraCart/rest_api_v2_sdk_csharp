/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ConversationAgentAuthResponse
    /// </summary>
    [DataContract]
    public partial class ConversationAgentAuthResponse :  IEquatable<ConversationAgentAuthResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversationAgentAuthResponse" /> class.
        /// </summary>
        /// <param name="conversationParticipantArn">conversationParticipantArn.</param>
        /// <param name="conversationParticipantName">conversationParticipantName.</param>
        /// <param name="jwt">jwt.</param>
        /// <param name="merchantId">merchantId.</param>
        /// <param name="twilioPhoneNumbers">twilioPhoneNumbers.</param>
        /// <param name="websocketUrl">websocketUrl.</param>
        public ConversationAgentAuthResponse(string conversationParticipantArn = default(string), string conversationParticipantName = default(string), string jwt = default(string), string merchantId = default(string), List<string> twilioPhoneNumbers = default(List<string>), string websocketUrl = default(string))
        {
            this.ConversationParticipantArn = conversationParticipantArn;
            this.ConversationParticipantName = conversationParticipantName;
            this.Jwt = jwt;
            this.MerchantId = merchantId;
            this.TwilioPhoneNumbers = twilioPhoneNumbers;
            this.WebsocketUrl = websocketUrl;
        }
        
        /// <summary>
        /// Gets or Sets ConversationParticipantArn
        /// </summary>
        [DataMember(Name="conversation_participant_arn", EmitDefaultValue=false)]
        public string ConversationParticipantArn { get; set; }

        /// <summary>
        /// Gets or Sets ConversationParticipantName
        /// </summary>
        [DataMember(Name="conversation_participant_name", EmitDefaultValue=false)]
        public string ConversationParticipantName { get; set; }

        /// <summary>
        /// Gets or Sets Jwt
        /// </summary>
        [DataMember(Name="jwt", EmitDefaultValue=false)]
        public string Jwt { get; set; }

        /// <summary>
        /// Gets or Sets MerchantId
        /// </summary>
        [DataMember(Name="merchant_id", EmitDefaultValue=false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// Gets or Sets TwilioPhoneNumbers
        /// </summary>
        [DataMember(Name="twilio_phone_numbers", EmitDefaultValue=false)]
        public List<string> TwilioPhoneNumbers { get; set; }

        /// <summary>
        /// Gets or Sets WebsocketUrl
        /// </summary>
        [DataMember(Name="websocket_url", EmitDefaultValue=false)]
        public string WebsocketUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ConversationAgentAuthResponse {\n");
            sb.Append("  ConversationParticipantArn: ").Append(ConversationParticipantArn).Append("\n");
            sb.Append("  ConversationParticipantName: ").Append(ConversationParticipantName).Append("\n");
            sb.Append("  Jwt: ").Append(Jwt).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  TwilioPhoneNumbers: ").Append(TwilioPhoneNumbers).Append("\n");
            sb.Append("  WebsocketUrl: ").Append(WebsocketUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ConversationAgentAuthResponse);
        }

        /// <summary>
        /// Returns true if ConversationAgentAuthResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ConversationAgentAuthResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConversationAgentAuthResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConversationParticipantArn == input.ConversationParticipantArn ||
                    (this.ConversationParticipantArn != null &&
                    this.ConversationParticipantArn.Equals(input.ConversationParticipantArn))
                ) && 
                (
                    this.ConversationParticipantName == input.ConversationParticipantName ||
                    (this.ConversationParticipantName != null &&
                    this.ConversationParticipantName.Equals(input.ConversationParticipantName))
                ) && 
                (
                    this.Jwt == input.Jwt ||
                    (this.Jwt != null &&
                    this.Jwt.Equals(input.Jwt))
                ) && 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.TwilioPhoneNumbers == input.TwilioPhoneNumbers ||
                    this.TwilioPhoneNumbers != null &&
                    this.TwilioPhoneNumbers.SequenceEqual(input.TwilioPhoneNumbers)
                ) && 
                (
                    this.WebsocketUrl == input.WebsocketUrl ||
                    (this.WebsocketUrl != null &&
                    this.WebsocketUrl.Equals(input.WebsocketUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConversationParticipantArn != null)
                    hashCode = hashCode * 59 + this.ConversationParticipantArn.GetHashCode();
                if (this.ConversationParticipantName != null)
                    hashCode = hashCode * 59 + this.ConversationParticipantName.GetHashCode();
                if (this.Jwt != null)
                    hashCode = hashCode * 59 + this.Jwt.GetHashCode();
                if (this.MerchantId != null)
                    hashCode = hashCode * 59 + this.MerchantId.GetHashCode();
                if (this.TwilioPhoneNumbers != null)
                    hashCode = hashCode * 59 + this.TwilioPhoneNumbers.GetHashCode();
                if (this.WebsocketUrl != null)
                    hashCode = hashCode * 59 + this.WebsocketUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
