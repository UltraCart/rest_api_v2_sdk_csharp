/*
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.ultracart.admin.v2.Client.OpenAPIDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ConversationPbxQueue
    /// </summary>
    [DataContract]
    public partial class ConversationPbxQueue :  IEquatable<ConversationPbxQueue>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversationPbxQueue" /> class.
        /// </summary>
        /// <param name="announceQueuePosition">If true, the customer is told their queue position upon entering the queue.</param>
        /// <param name="conversationPbxQueueUuid">Conversation Pbx Queue unique identifier.</param>
        /// <param name="conversationVoicemailMailboxUuid">The voicemail mailbox associated with this queue.</param>
        /// <param name="holdConversationPbxAudioUuid">The audio to play while holding in a queue.</param>
        /// <param name="maxHoldSeconds">The maximum number of seconds for a customer to hold in a queue.</param>
        /// <param name="members">members.</param>
        /// <param name="merchantId">Merchant Id.</param>
        /// <param name="name">Name of queue.</param>
        /// <param name="noAgentAvailablePlayAudioUuid">When no agent is available after the max_hold_seconds, say this.</param>
        /// <param name="noAgentAvailableSay">When no agent is available after the max_hold_seconds, say this.</param>
        /// <param name="noAgentAvailableSayVoice">The type of voice used to say text when no agent is available.</param>
        /// <param name="playAudioUuid">Audio played when customer enters a queue.</param>
        /// <param name="recordCall">If true, any calls in this queue are recorded.</param>
        /// <param name="say">Say text when a customer enters queue.</param>
        /// <param name="sayVoice">The type of voice to use when say text is spoken.</param>
        /// <param name="twilioTaskrouterWorkflowSid">Twilio taskrouter workflow sid.</param>
        /// <param name="twilioWorkspaceQueueSid">Twilio workspace queue sid.</param>
        /// <param name="voicemail">If true, this queue has a voicemail associated with it.</param>
        public ConversationPbxQueue(bool announceQueuePosition = default(bool), string conversationPbxQueueUuid = default(string), string conversationVoicemailMailboxUuid = default(string), string holdConversationPbxAudioUuid = default(string), int maxHoldSeconds = default(int), ConversationPbxQueueMembers members = default(ConversationPbxQueueMembers), string merchantId = default(string), string name = default(string), string noAgentAvailablePlayAudioUuid = default(string), string noAgentAvailableSay = default(string), string noAgentAvailableSayVoice = default(string), string playAudioUuid = default(string), bool recordCall = default(bool), string say = default(string), string sayVoice = default(string), string twilioTaskrouterWorkflowSid = default(string), string twilioWorkspaceQueueSid = default(string), bool voicemail = default(bool))
        {
            this.AnnounceQueuePosition = announceQueuePosition;
            this.ConversationPbxQueueUuid = conversationPbxQueueUuid;
            this.ConversationVoicemailMailboxUuid = conversationVoicemailMailboxUuid;
            this.HoldConversationPbxAudioUuid = holdConversationPbxAudioUuid;
            this.MaxHoldSeconds = maxHoldSeconds;
            this.Members = members;
            this.MerchantId = merchantId;
            this.Name = name;
            this.NoAgentAvailablePlayAudioUuid = noAgentAvailablePlayAudioUuid;
            this.NoAgentAvailableSay = noAgentAvailableSay;
            this.NoAgentAvailableSayVoice = noAgentAvailableSayVoice;
            this.PlayAudioUuid = playAudioUuid;
            this.RecordCall = recordCall;
            this.Say = say;
            this.SayVoice = sayVoice;
            this.TwilioTaskrouterWorkflowSid = twilioTaskrouterWorkflowSid;
            this.TwilioWorkspaceQueueSid = twilioWorkspaceQueueSid;
            this.Voicemail = voicemail;
        }

        /// <summary>
        /// If true, the customer is told their queue position upon entering the queue
        /// </summary>
        /// <value>If true, the customer is told their queue position upon entering the queue</value>
        [DataMember(Name="announce_queue_position", EmitDefaultValue=false)]
        public bool AnnounceQueuePosition { get; set; }

        /// <summary>
        /// Conversation Pbx Queue unique identifier
        /// </summary>
        /// <value>Conversation Pbx Queue unique identifier</value>
        [DataMember(Name="conversation_pbx_queue_uuid", EmitDefaultValue=false)]
        public string ConversationPbxQueueUuid { get; set; }

        /// <summary>
        /// The voicemail mailbox associated with this queue
        /// </summary>
        /// <value>The voicemail mailbox associated with this queue</value>
        [DataMember(Name="conversation_voicemail_mailbox_uuid", EmitDefaultValue=false)]
        public string ConversationVoicemailMailboxUuid { get; set; }

        /// <summary>
        /// The audio to play while holding in a queue
        /// </summary>
        /// <value>The audio to play while holding in a queue</value>
        [DataMember(Name="hold_conversation_pbx_audio_uuid", EmitDefaultValue=false)]
        public string HoldConversationPbxAudioUuid { get; set; }

        /// <summary>
        /// The maximum number of seconds for a customer to hold in a queue
        /// </summary>
        /// <value>The maximum number of seconds for a customer to hold in a queue</value>
        [DataMember(Name="max_hold_seconds", EmitDefaultValue=false)]
        public int MaxHoldSeconds { get; set; }

        /// <summary>
        /// Gets or Sets Members
        /// </summary>
        [DataMember(Name="members", EmitDefaultValue=false)]
        public ConversationPbxQueueMembers Members { get; set; }

        /// <summary>
        /// Merchant Id
        /// </summary>
        /// <value>Merchant Id</value>
        [DataMember(Name="merchant_id", EmitDefaultValue=false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// Name of queue
        /// </summary>
        /// <value>Name of queue</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// When no agent is available after the max_hold_seconds, say this
        /// </summary>
        /// <value>When no agent is available after the max_hold_seconds, say this</value>
        [DataMember(Name="no_agent_available_play_audio_uuid", EmitDefaultValue=false)]
        public string NoAgentAvailablePlayAudioUuid { get; set; }

        /// <summary>
        /// When no agent is available after the max_hold_seconds, say this
        /// </summary>
        /// <value>When no agent is available after the max_hold_seconds, say this</value>
        [DataMember(Name="no_agent_available_say", EmitDefaultValue=false)]
        public string NoAgentAvailableSay { get; set; }

        /// <summary>
        /// The type of voice used to say text when no agent is available
        /// </summary>
        /// <value>The type of voice used to say text when no agent is available</value>
        [DataMember(Name="no_agent_available_say_voice", EmitDefaultValue=false)]
        public string NoAgentAvailableSayVoice { get; set; }

        /// <summary>
        /// Audio played when customer enters a queue
        /// </summary>
        /// <value>Audio played when customer enters a queue</value>
        [DataMember(Name="play_audio_uuid", EmitDefaultValue=false)]
        public string PlayAudioUuid { get; set; }

        /// <summary>
        /// If true, any calls in this queue are recorded
        /// </summary>
        /// <value>If true, any calls in this queue are recorded</value>
        [DataMember(Name="record_call", EmitDefaultValue=false)]
        public bool RecordCall { get; set; }

        /// <summary>
        /// Say text when a customer enters queue
        /// </summary>
        /// <value>Say text when a customer enters queue</value>
        [DataMember(Name="say", EmitDefaultValue=false)]
        public string Say { get; set; }

        /// <summary>
        /// The type of voice to use when say text is spoken
        /// </summary>
        /// <value>The type of voice to use when say text is spoken</value>
        [DataMember(Name="say_voice", EmitDefaultValue=false)]
        public string SayVoice { get; set; }

        /// <summary>
        /// Twilio taskrouter workflow sid
        /// </summary>
        /// <value>Twilio taskrouter workflow sid</value>
        [DataMember(Name="twilio_taskrouter_workflow_sid", EmitDefaultValue=false)]
        public string TwilioTaskrouterWorkflowSid { get; set; }

        /// <summary>
        /// Twilio workspace queue sid
        /// </summary>
        /// <value>Twilio workspace queue sid</value>
        [DataMember(Name="twilio_workspace_queue_sid", EmitDefaultValue=false)]
        public string TwilioWorkspaceQueueSid { get; set; }

        /// <summary>
        /// If true, this queue has a voicemail associated with it
        /// </summary>
        /// <value>If true, this queue has a voicemail associated with it</value>
        [DataMember(Name="voicemail", EmitDefaultValue=false)]
        public bool Voicemail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ConversationPbxQueue {\n");
            sb.Append("  AnnounceQueuePosition: ").Append(AnnounceQueuePosition).Append("\n");
            sb.Append("  ConversationPbxQueueUuid: ").Append(ConversationPbxQueueUuid).Append("\n");
            sb.Append("  ConversationVoicemailMailboxUuid: ").Append(ConversationVoicemailMailboxUuid).Append("\n");
            sb.Append("  HoldConversationPbxAudioUuid: ").Append(HoldConversationPbxAudioUuid).Append("\n");
            sb.Append("  MaxHoldSeconds: ").Append(MaxHoldSeconds).Append("\n");
            sb.Append("  Members: ").Append(Members).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  NoAgentAvailablePlayAudioUuid: ").Append(NoAgentAvailablePlayAudioUuid).Append("\n");
            sb.Append("  NoAgentAvailableSay: ").Append(NoAgentAvailableSay).Append("\n");
            sb.Append("  NoAgentAvailableSayVoice: ").Append(NoAgentAvailableSayVoice).Append("\n");
            sb.Append("  PlayAudioUuid: ").Append(PlayAudioUuid).Append("\n");
            sb.Append("  RecordCall: ").Append(RecordCall).Append("\n");
            sb.Append("  Say: ").Append(Say).Append("\n");
            sb.Append("  SayVoice: ").Append(SayVoice).Append("\n");
            sb.Append("  TwilioTaskrouterWorkflowSid: ").Append(TwilioTaskrouterWorkflowSid).Append("\n");
            sb.Append("  TwilioWorkspaceQueueSid: ").Append(TwilioWorkspaceQueueSid).Append("\n");
            sb.Append("  Voicemail: ").Append(Voicemail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ConversationPbxQueue);
        }

        /// <summary>
        /// Returns true if ConversationPbxQueue instances are equal
        /// </summary>
        /// <param name="input">Instance of ConversationPbxQueue to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConversationPbxQueue input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AnnounceQueuePosition == input.AnnounceQueuePosition ||
                    (this.AnnounceQueuePosition != null &&
                    this.AnnounceQueuePosition.Equals(input.AnnounceQueuePosition))
                ) && 
                (
                    this.ConversationPbxQueueUuid == input.ConversationPbxQueueUuid ||
                    (this.ConversationPbxQueueUuid != null &&
                    this.ConversationPbxQueueUuid.Equals(input.ConversationPbxQueueUuid))
                ) && 
                (
                    this.ConversationVoicemailMailboxUuid == input.ConversationVoicemailMailboxUuid ||
                    (this.ConversationVoicemailMailboxUuid != null &&
                    this.ConversationVoicemailMailboxUuid.Equals(input.ConversationVoicemailMailboxUuid))
                ) && 
                (
                    this.HoldConversationPbxAudioUuid == input.HoldConversationPbxAudioUuid ||
                    (this.HoldConversationPbxAudioUuid != null &&
                    this.HoldConversationPbxAudioUuid.Equals(input.HoldConversationPbxAudioUuid))
                ) && 
                (
                    this.MaxHoldSeconds == input.MaxHoldSeconds ||
                    (this.MaxHoldSeconds != null &&
                    this.MaxHoldSeconds.Equals(input.MaxHoldSeconds))
                ) && 
                (
                    this.Members == input.Members ||
                    (this.Members != null &&
                    this.Members.Equals(input.Members))
                ) && 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.NoAgentAvailablePlayAudioUuid == input.NoAgentAvailablePlayAudioUuid ||
                    (this.NoAgentAvailablePlayAudioUuid != null &&
                    this.NoAgentAvailablePlayAudioUuid.Equals(input.NoAgentAvailablePlayAudioUuid))
                ) && 
                (
                    this.NoAgentAvailableSay == input.NoAgentAvailableSay ||
                    (this.NoAgentAvailableSay != null &&
                    this.NoAgentAvailableSay.Equals(input.NoAgentAvailableSay))
                ) && 
                (
                    this.NoAgentAvailableSayVoice == input.NoAgentAvailableSayVoice ||
                    (this.NoAgentAvailableSayVoice != null &&
                    this.NoAgentAvailableSayVoice.Equals(input.NoAgentAvailableSayVoice))
                ) && 
                (
                    this.PlayAudioUuid == input.PlayAudioUuid ||
                    (this.PlayAudioUuid != null &&
                    this.PlayAudioUuid.Equals(input.PlayAudioUuid))
                ) && 
                (
                    this.RecordCall == input.RecordCall ||
                    (this.RecordCall != null &&
                    this.RecordCall.Equals(input.RecordCall))
                ) && 
                (
                    this.Say == input.Say ||
                    (this.Say != null &&
                    this.Say.Equals(input.Say))
                ) && 
                (
                    this.SayVoice == input.SayVoice ||
                    (this.SayVoice != null &&
                    this.SayVoice.Equals(input.SayVoice))
                ) && 
                (
                    this.TwilioTaskrouterWorkflowSid == input.TwilioTaskrouterWorkflowSid ||
                    (this.TwilioTaskrouterWorkflowSid != null &&
                    this.TwilioTaskrouterWorkflowSid.Equals(input.TwilioTaskrouterWorkflowSid))
                ) && 
                (
                    this.TwilioWorkspaceQueueSid == input.TwilioWorkspaceQueueSid ||
                    (this.TwilioWorkspaceQueueSid != null &&
                    this.TwilioWorkspaceQueueSid.Equals(input.TwilioWorkspaceQueueSid))
                ) && 
                (
                    this.Voicemail == input.Voicemail ||
                    (this.Voicemail != null &&
                    this.Voicemail.Equals(input.Voicemail))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AnnounceQueuePosition != null)
                    hashCode = hashCode * 59 + this.AnnounceQueuePosition.GetHashCode();
                if (this.ConversationPbxQueueUuid != null)
                    hashCode = hashCode * 59 + this.ConversationPbxQueueUuid.GetHashCode();
                if (this.ConversationVoicemailMailboxUuid != null)
                    hashCode = hashCode * 59 + this.ConversationVoicemailMailboxUuid.GetHashCode();
                if (this.HoldConversationPbxAudioUuid != null)
                    hashCode = hashCode * 59 + this.HoldConversationPbxAudioUuid.GetHashCode();
                if (this.MaxHoldSeconds != null)
                    hashCode = hashCode * 59 + this.MaxHoldSeconds.GetHashCode();
                if (this.Members != null)
                    hashCode = hashCode * 59 + this.Members.GetHashCode();
                if (this.MerchantId != null)
                    hashCode = hashCode * 59 + this.MerchantId.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.NoAgentAvailablePlayAudioUuid != null)
                    hashCode = hashCode * 59 + this.NoAgentAvailablePlayAudioUuid.GetHashCode();
                if (this.NoAgentAvailableSay != null)
                    hashCode = hashCode * 59 + this.NoAgentAvailableSay.GetHashCode();
                if (this.NoAgentAvailableSayVoice != null)
                    hashCode = hashCode * 59 + this.NoAgentAvailableSayVoice.GetHashCode();
                if (this.PlayAudioUuid != null)
                    hashCode = hashCode * 59 + this.PlayAudioUuid.GetHashCode();
                if (this.RecordCall != null)
                    hashCode = hashCode * 59 + this.RecordCall.GetHashCode();
                if (this.Say != null)
                    hashCode = hashCode * 59 + this.Say.GetHashCode();
                if (this.SayVoice != null)
                    hashCode = hashCode * 59 + this.SayVoice.GetHashCode();
                if (this.TwilioTaskrouterWorkflowSid != null)
                    hashCode = hashCode * 59 + this.TwilioTaskrouterWorkflowSid.GetHashCode();
                if (this.TwilioWorkspaceQueueSid != null)
                    hashCode = hashCode * 59 + this.TwilioWorkspaceQueueSid.GetHashCode();
                if (this.Voicemail != null)
                    hashCode = hashCode * 59 + this.Voicemail.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ConversationVoicemailMailboxUuid (string) maxLength
            if(this.ConversationVoicemailMailboxUuid != null && this.ConversationVoicemailMailboxUuid.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ConversationVoicemailMailboxUuid, length must be less than 50.", new [] { "ConversationVoicemailMailboxUuid" });
            }


            // HoldConversationPbxAudioUuid (string) maxLength
            if(this.HoldConversationPbxAudioUuid != null && this.HoldConversationPbxAudioUuid.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for HoldConversationPbxAudioUuid, length must be less than 50.", new [] { "HoldConversationPbxAudioUuid" });
            }


            // MerchantId (string) maxLength
            if(this.MerchantId != null && this.MerchantId.Length > 5)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for MerchantId, length must be less than 5.", new [] { "MerchantId" });
            }


            // Name (string) maxLength
            if(this.Name != null && this.Name.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Name, length must be less than 50.", new [] { "Name" });
            }


            // NoAgentAvailablePlayAudioUuid (string) maxLength
            if(this.NoAgentAvailablePlayAudioUuid != null && this.NoAgentAvailablePlayAudioUuid.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NoAgentAvailablePlayAudioUuid, length must be less than 50.", new [] { "NoAgentAvailablePlayAudioUuid" });
            }


            // NoAgentAvailableSayVoice (string) maxLength
            if(this.NoAgentAvailableSayVoice != null && this.NoAgentAvailableSayVoice.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NoAgentAvailableSayVoice, length must be less than 50.", new [] { "NoAgentAvailableSayVoice" });
            }


            // PlayAudioUuid (string) maxLength
            if(this.PlayAudioUuid != null && this.PlayAudioUuid.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PlayAudioUuid, length must be less than 50.", new [] { "PlayAudioUuid" });
            }


            // SayVoice (string) maxLength
            if(this.SayVoice != null && this.SayVoice.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SayVoice, length must be less than 50.", new [] { "SayVoice" });
            }


            // TwilioTaskrouterWorkflowSid (string) maxLength
            if(this.TwilioTaskrouterWorkflowSid != null && this.TwilioTaskrouterWorkflowSid.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TwilioTaskrouterWorkflowSid, length must be less than 100.", new [] { "TwilioTaskrouterWorkflowSid" });
            }


            // TwilioWorkspaceQueueSid (string) maxLength
            if(this.TwilioWorkspaceQueueSid != null && this.TwilioWorkspaceQueueSid.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TwilioWorkspaceQueueSid, length must be less than 50.", new [] { "TwilioWorkspaceQueueSid" });
            }


            yield break;
        }
    }

}
