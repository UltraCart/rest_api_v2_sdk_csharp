/*
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.ultracart.admin.v2.Client.OpenAPIDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ConversationPbxVoicemailMailbox
    /// </summary>
    [DataContract]
    public partial class ConversationPbxVoicemailMailbox :  IEquatable<ConversationPbxVoicemailMailbox>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversationPbxVoicemailMailbox" /> class.
        /// </summary>
        /// <param name="conversationPbxVoicemailMailboxUuid">Conversation Pbx Voicemail Mailbox UUID.</param>
        /// <param name="merchantId">Merchant Id.</param>
        /// <param name="sendNoticesToEmail">Send notices to email.</param>
        /// <param name="userId">User Id.</param>
        /// <param name="voicemailFollowPlayAudioUuid">Voicemail follow play audio UUID.</param>
        /// <param name="voicemailFollowupSay">Voicemail followup say.</param>
        /// <param name="voicemailMailboxId">Voicemail mailbox id.</param>
        /// <param name="voicemailMailboxType">Voicemail mailbox type.</param>
        /// <param name="voicemailPromptPlayAudioUuid">Voicemail prompt play audio UUID.</param>
        /// <param name="voicemailPromptSay">Voicemail prompt say.</param>
        /// <param name="voicemailSayVoice">Voicemail say voice.</param>
        public ConversationPbxVoicemailMailbox(string conversationPbxVoicemailMailboxUuid = default(string), string merchantId = default(string), string sendNoticesToEmail = default(string), int userId = default(int), string voicemailFollowPlayAudioUuid = default(string), string voicemailFollowupSay = default(string), string voicemailMailboxId = default(string), string voicemailMailboxType = default(string), string voicemailPromptPlayAudioUuid = default(string), string voicemailPromptSay = default(string), string voicemailSayVoice = default(string))
        {
            this.ConversationPbxVoicemailMailboxUuid = conversationPbxVoicemailMailboxUuid;
            this.MerchantId = merchantId;
            this.SendNoticesToEmail = sendNoticesToEmail;
            this.UserId = userId;
            this.VoicemailFollowPlayAudioUuid = voicemailFollowPlayAudioUuid;
            this.VoicemailFollowupSay = voicemailFollowupSay;
            this.VoicemailMailboxId = voicemailMailboxId;
            this.VoicemailMailboxType = voicemailMailboxType;
            this.VoicemailPromptPlayAudioUuid = voicemailPromptPlayAudioUuid;
            this.VoicemailPromptSay = voicemailPromptSay;
            this.VoicemailSayVoice = voicemailSayVoice;
        }

        /// <summary>
        /// Conversation Pbx Voicemail Mailbox UUID
        /// </summary>
        /// <value>Conversation Pbx Voicemail Mailbox UUID</value>
        [DataMember(Name="conversation_pbx_voicemail_mailbox_uuid", EmitDefaultValue=false)]
        public string ConversationPbxVoicemailMailboxUuid { get; set; }

        /// <summary>
        /// Merchant Id
        /// </summary>
        /// <value>Merchant Id</value>
        [DataMember(Name="merchant_id", EmitDefaultValue=false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// Send notices to email
        /// </summary>
        /// <value>Send notices to email</value>
        [DataMember(Name="send_notices_to_email", EmitDefaultValue=false)]
        public string SendNoticesToEmail { get; set; }

        /// <summary>
        /// User Id
        /// </summary>
        /// <value>User Id</value>
        [DataMember(Name="user_id", EmitDefaultValue=false)]
        public int UserId { get; set; }

        /// <summary>
        /// Voicemail follow play audio UUID
        /// </summary>
        /// <value>Voicemail follow play audio UUID</value>
        [DataMember(Name="voicemail_follow_play_audio_uuid", EmitDefaultValue=false)]
        public string VoicemailFollowPlayAudioUuid { get; set; }

        /// <summary>
        /// Voicemail followup say
        /// </summary>
        /// <value>Voicemail followup say</value>
        [DataMember(Name="voicemail_followup_say", EmitDefaultValue=false)]
        public string VoicemailFollowupSay { get; set; }

        /// <summary>
        /// Voicemail mailbox id
        /// </summary>
        /// <value>Voicemail mailbox id</value>
        [DataMember(Name="voicemail_mailbox_id", EmitDefaultValue=false)]
        public string VoicemailMailboxId { get; set; }

        /// <summary>
        /// Voicemail mailbox type
        /// </summary>
        /// <value>Voicemail mailbox type</value>
        [DataMember(Name="voicemail_mailbox_type", EmitDefaultValue=false)]
        public string VoicemailMailboxType { get; set; }

        /// <summary>
        /// Voicemail prompt play audio UUID
        /// </summary>
        /// <value>Voicemail prompt play audio UUID</value>
        [DataMember(Name="voicemail_prompt_play_audio_uuid", EmitDefaultValue=false)]
        public string VoicemailPromptPlayAudioUuid { get; set; }

        /// <summary>
        /// Voicemail prompt say
        /// </summary>
        /// <value>Voicemail prompt say</value>
        [DataMember(Name="voicemail_prompt_say", EmitDefaultValue=false)]
        public string VoicemailPromptSay { get; set; }

        /// <summary>
        /// Voicemail say voice
        /// </summary>
        /// <value>Voicemail say voice</value>
        [DataMember(Name="voicemail_say_voice", EmitDefaultValue=false)]
        public string VoicemailSayVoice { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ConversationPbxVoicemailMailbox {\n");
            sb.Append("  ConversationPbxVoicemailMailboxUuid: ").Append(ConversationPbxVoicemailMailboxUuid).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  SendNoticesToEmail: ").Append(SendNoticesToEmail).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  VoicemailFollowPlayAudioUuid: ").Append(VoicemailFollowPlayAudioUuid).Append("\n");
            sb.Append("  VoicemailFollowupSay: ").Append(VoicemailFollowupSay).Append("\n");
            sb.Append("  VoicemailMailboxId: ").Append(VoicemailMailboxId).Append("\n");
            sb.Append("  VoicemailMailboxType: ").Append(VoicemailMailboxType).Append("\n");
            sb.Append("  VoicemailPromptPlayAudioUuid: ").Append(VoicemailPromptPlayAudioUuid).Append("\n");
            sb.Append("  VoicemailPromptSay: ").Append(VoicemailPromptSay).Append("\n");
            sb.Append("  VoicemailSayVoice: ").Append(VoicemailSayVoice).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ConversationPbxVoicemailMailbox);
        }

        /// <summary>
        /// Returns true if ConversationPbxVoicemailMailbox instances are equal
        /// </summary>
        /// <param name="input">Instance of ConversationPbxVoicemailMailbox to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConversationPbxVoicemailMailbox input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConversationPbxVoicemailMailboxUuid == input.ConversationPbxVoicemailMailboxUuid ||
                    (this.ConversationPbxVoicemailMailboxUuid != null &&
                    this.ConversationPbxVoicemailMailboxUuid.Equals(input.ConversationPbxVoicemailMailboxUuid))
                ) && 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.SendNoticesToEmail == input.SendNoticesToEmail ||
                    (this.SendNoticesToEmail != null &&
                    this.SendNoticesToEmail.Equals(input.SendNoticesToEmail))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this.VoicemailFollowPlayAudioUuid == input.VoicemailFollowPlayAudioUuid ||
                    (this.VoicemailFollowPlayAudioUuid != null &&
                    this.VoicemailFollowPlayAudioUuid.Equals(input.VoicemailFollowPlayAudioUuid))
                ) && 
                (
                    this.VoicemailFollowupSay == input.VoicemailFollowupSay ||
                    (this.VoicemailFollowupSay != null &&
                    this.VoicemailFollowupSay.Equals(input.VoicemailFollowupSay))
                ) && 
                (
                    this.VoicemailMailboxId == input.VoicemailMailboxId ||
                    (this.VoicemailMailboxId != null &&
                    this.VoicemailMailboxId.Equals(input.VoicemailMailboxId))
                ) && 
                (
                    this.VoicemailMailboxType == input.VoicemailMailboxType ||
                    (this.VoicemailMailboxType != null &&
                    this.VoicemailMailboxType.Equals(input.VoicemailMailboxType))
                ) && 
                (
                    this.VoicemailPromptPlayAudioUuid == input.VoicemailPromptPlayAudioUuid ||
                    (this.VoicemailPromptPlayAudioUuid != null &&
                    this.VoicemailPromptPlayAudioUuid.Equals(input.VoicemailPromptPlayAudioUuid))
                ) && 
                (
                    this.VoicemailPromptSay == input.VoicemailPromptSay ||
                    (this.VoicemailPromptSay != null &&
                    this.VoicemailPromptSay.Equals(input.VoicemailPromptSay))
                ) && 
                (
                    this.VoicemailSayVoice == input.VoicemailSayVoice ||
                    (this.VoicemailSayVoice != null &&
                    this.VoicemailSayVoice.Equals(input.VoicemailSayVoice))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConversationPbxVoicemailMailboxUuid != null)
                    hashCode = hashCode * 59 + this.ConversationPbxVoicemailMailboxUuid.GetHashCode();
                if (this.MerchantId != null)
                    hashCode = hashCode * 59 + this.MerchantId.GetHashCode();
                if (this.SendNoticesToEmail != null)
                    hashCode = hashCode * 59 + this.SendNoticesToEmail.GetHashCode();
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                if (this.VoicemailFollowPlayAudioUuid != null)
                    hashCode = hashCode * 59 + this.VoicemailFollowPlayAudioUuid.GetHashCode();
                if (this.VoicemailFollowupSay != null)
                    hashCode = hashCode * 59 + this.VoicemailFollowupSay.GetHashCode();
                if (this.VoicemailMailboxId != null)
                    hashCode = hashCode * 59 + this.VoicemailMailboxId.GetHashCode();
                if (this.VoicemailMailboxType != null)
                    hashCode = hashCode * 59 + this.VoicemailMailboxType.GetHashCode();
                if (this.VoicemailPromptPlayAudioUuid != null)
                    hashCode = hashCode * 59 + this.VoicemailPromptPlayAudioUuid.GetHashCode();
                if (this.VoicemailPromptSay != null)
                    hashCode = hashCode * 59 + this.VoicemailPromptSay.GetHashCode();
                if (this.VoicemailSayVoice != null)
                    hashCode = hashCode * 59 + this.VoicemailSayVoice.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ConversationPbxVoicemailMailboxUuid (string) maxLength
            if(this.ConversationPbxVoicemailMailboxUuid != null && this.ConversationPbxVoicemailMailboxUuid.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ConversationPbxVoicemailMailboxUuid, length must be less than 50.", new [] { "ConversationPbxVoicemailMailboxUuid" });
            }


            // MerchantId (string) maxLength
            if(this.MerchantId != null && this.MerchantId.Length > 5)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for MerchantId, length must be less than 5.", new [] { "MerchantId" });
            }


            // SendNoticesToEmail (string) maxLength
            if(this.SendNoticesToEmail != null && this.SendNoticesToEmail.Length > 250)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SendNoticesToEmail, length must be less than 250.", new [] { "SendNoticesToEmail" });
            }


            // VoicemailFollowPlayAudioUuid (string) maxLength
            if(this.VoicemailFollowPlayAudioUuid != null && this.VoicemailFollowPlayAudioUuid.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for VoicemailFollowPlayAudioUuid, length must be less than 50.", new [] { "VoicemailFollowPlayAudioUuid" });
            }


            // VoicemailMailboxId (string) maxLength
            if(this.VoicemailMailboxId != null && this.VoicemailMailboxId.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for VoicemailMailboxId, length must be less than 50.", new [] { "VoicemailMailboxId" });
            }


            // VoicemailMailboxType (string) maxLength
            if(this.VoicemailMailboxType != null && this.VoicemailMailboxType.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for VoicemailMailboxType, length must be less than 50.", new [] { "VoicemailMailboxType" });
            }


            // VoicemailPromptPlayAudioUuid (string) maxLength
            if(this.VoicemailPromptPlayAudioUuid != null && this.VoicemailPromptPlayAudioUuid.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for VoicemailPromptPlayAudioUuid, length must be less than 50.", new [] { "VoicemailPromptPlayAudioUuid" });
            }


            // VoicemailSayVoice (string) maxLength
            if(this.VoicemailSayVoice != null && this.VoicemailSayVoice.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for VoicemailSayVoice, length must be less than 50.", new [] { "VoicemailSayVoice" });
            }


            yield break;
        }
    }

}
