/*
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.ultracart.admin.v2.Client.OpenAPIDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// CustomReportsExecutionReportData
    /// </summary>
    [DataContract]
    public partial class CustomReportsExecutionReportData :  IEquatable<CustomReportsExecutionReportData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomReportsExecutionReportData" /> class.
        /// </summary>
        /// <param name="dataWarehouseReportConfigOid">dataWarehouseReportConfigOid.</param>
        /// <param name="errorMessage">errorMessage.</param>
        /// <param name="resultUrl">resultUrl.</param>
        public CustomReportsExecutionReportData(int dataWarehouseReportConfigOid = default(int), string errorMessage = default(string), string resultUrl = default(string))
        {
            this.DataWarehouseReportConfigOid = dataWarehouseReportConfigOid;
            this.ErrorMessage = errorMessage;
            this.ResultUrl = resultUrl;
        }

        /// <summary>
        /// Gets or Sets DataWarehouseReportConfigOid
        /// </summary>
        [DataMember(Name="data_warehouse_report_config_oid", EmitDefaultValue=false)]
        public int DataWarehouseReportConfigOid { get; set; }

        /// <summary>
        /// Gets or Sets ErrorMessage
        /// </summary>
        [DataMember(Name="error_message", EmitDefaultValue=false)]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Gets or Sets ResultUrl
        /// </summary>
        [DataMember(Name="result_url", EmitDefaultValue=false)]
        public string ResultUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomReportsExecutionReportData {\n");
            sb.Append("  DataWarehouseReportConfigOid: ").Append(DataWarehouseReportConfigOid).Append("\n");
            sb.Append("  ErrorMessage: ").Append(ErrorMessage).Append("\n");
            sb.Append("  ResultUrl: ").Append(ResultUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomReportsExecutionReportData);
        }

        /// <summary>
        /// Returns true if CustomReportsExecutionReportData instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomReportsExecutionReportData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomReportsExecutionReportData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DataWarehouseReportConfigOid == input.DataWarehouseReportConfigOid ||
                    (this.DataWarehouseReportConfigOid != null &&
                    this.DataWarehouseReportConfigOid.Equals(input.DataWarehouseReportConfigOid))
                ) && 
                (
                    this.ErrorMessage == input.ErrorMessage ||
                    (this.ErrorMessage != null &&
                    this.ErrorMessage.Equals(input.ErrorMessage))
                ) && 
                (
                    this.ResultUrl == input.ResultUrl ||
                    (this.ResultUrl != null &&
                    this.ResultUrl.Equals(input.ResultUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DataWarehouseReportConfigOid != null)
                    hashCode = hashCode * 59 + this.DataWarehouseReportConfigOid.GetHashCode();
                if (this.ErrorMessage != null)
                    hashCode = hashCode * 59 + this.ErrorMessage.GetHashCode();
                if (this.ResultUrl != null)
                    hashCode = hashCode * 59 + this.ResultUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
