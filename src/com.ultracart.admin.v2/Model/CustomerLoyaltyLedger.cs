/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// CustomerLoyaltyLedger
    /// </summary>
    [DataContract]
    public partial class CustomerLoyaltyLedger :  IEquatable<CustomerLoyaltyLedger>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerLoyaltyLedger" /> class.
        /// </summary>
        /// <param name="CreatedBy">Created By.</param>
        /// <param name="CreatedDts">Created date.</param>
        /// <param name="Description">Description.</param>
        /// <param name="Email">Email.</param>
        /// <param name="ItemId">Item Id.</param>
        /// <param name="ItemIndex">Item Index.</param>
        /// <param name="LedgerDts">Ledger date.</param>
        /// <param name="LoyaltyCampaignOid">Loyalty campaign oid.</param>
        /// <param name="LoyaltyLedgerOid">Loyalty ledger oid.</param>
        /// <param name="LoyaltyPoints">Loyalty points.</param>
        /// <param name="ModifiedBy">Modified By.</param>
        /// <param name="ModifiedDts">Modified date.</param>
        /// <param name="OrderId">Order Id.</param>
        /// <param name="Quantity">Quantity.</param>
        /// <param name="VestingDts">Vesting date.</param>
        public CustomerLoyaltyLedger(string CreatedBy = default(string), string CreatedDts = default(string), string Description = default(string), string Email = default(string), string ItemId = default(string), int? ItemIndex = default(int?), string LedgerDts = default(string), int? LoyaltyCampaignOid = default(int?), int? LoyaltyLedgerOid = default(int?), int? LoyaltyPoints = default(int?), string ModifiedBy = default(string), string ModifiedDts = default(string), string OrderId = default(string), int? Quantity = default(int?), string VestingDts = default(string))
        {
            this.CreatedBy = CreatedBy;
            this.CreatedDts = CreatedDts;
            this.Description = Description;
            this.Email = Email;
            this.ItemId = ItemId;
            this.ItemIndex = ItemIndex;
            this.LedgerDts = LedgerDts;
            this.LoyaltyCampaignOid = LoyaltyCampaignOid;
            this.LoyaltyLedgerOid = LoyaltyLedgerOid;
            this.LoyaltyPoints = LoyaltyPoints;
            this.ModifiedBy = ModifiedBy;
            this.ModifiedDts = ModifiedDts;
            this.OrderId = OrderId;
            this.Quantity = Quantity;
            this.VestingDts = VestingDts;
        }
        
        /// <summary>
        /// Created By
        /// </summary>
        /// <value>Created By</value>
        [DataMember(Name="created_by", EmitDefaultValue=false)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Created date
        /// </summary>
        /// <value>Created date</value>
        [DataMember(Name="created_dts", EmitDefaultValue=false)]
        public string CreatedDts { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        /// <value>Description</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Email
        /// </summary>
        /// <value>Email</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Item Id
        /// </summary>
        /// <value>Item Id</value>
        [DataMember(Name="item_id", EmitDefaultValue=false)]
        public string ItemId { get; set; }

        /// <summary>
        /// Item Index
        /// </summary>
        /// <value>Item Index</value>
        [DataMember(Name="item_index", EmitDefaultValue=false)]
        public int? ItemIndex { get; set; }

        /// <summary>
        /// Ledger date
        /// </summary>
        /// <value>Ledger date</value>
        [DataMember(Name="ledger_dts", EmitDefaultValue=false)]
        public string LedgerDts { get; set; }

        /// <summary>
        /// Loyalty campaign oid
        /// </summary>
        /// <value>Loyalty campaign oid</value>
        [DataMember(Name="loyalty_campaign_oid", EmitDefaultValue=false)]
        public int? LoyaltyCampaignOid { get; set; }

        /// <summary>
        /// Loyalty ledger oid
        /// </summary>
        /// <value>Loyalty ledger oid</value>
        [DataMember(Name="loyalty_ledger_oid", EmitDefaultValue=false)]
        public int? LoyaltyLedgerOid { get; set; }

        /// <summary>
        /// Loyalty points
        /// </summary>
        /// <value>Loyalty points</value>
        [DataMember(Name="loyalty_points", EmitDefaultValue=false)]
        public int? LoyaltyPoints { get; set; }

        /// <summary>
        /// Modified By
        /// </summary>
        /// <value>Modified By</value>
        [DataMember(Name="modified_by", EmitDefaultValue=false)]
        public string ModifiedBy { get; set; }

        /// <summary>
        /// Modified date
        /// </summary>
        /// <value>Modified date</value>
        [DataMember(Name="modified_dts", EmitDefaultValue=false)]
        public string ModifiedDts { get; set; }

        /// <summary>
        /// Order Id
        /// </summary>
        /// <value>Order Id</value>
        [DataMember(Name="order_id", EmitDefaultValue=false)]
        public string OrderId { get; set; }

        /// <summary>
        /// Quantity
        /// </summary>
        /// <value>Quantity</value>
        [DataMember(Name="quantity", EmitDefaultValue=false)]
        public int? Quantity { get; set; }

        /// <summary>
        /// Vesting date
        /// </summary>
        /// <value>Vesting date</value>
        [DataMember(Name="vesting_dts", EmitDefaultValue=false)]
        public string VestingDts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomerLoyaltyLedger {\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  CreatedDts: ").Append(CreatedDts).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  ItemIndex: ").Append(ItemIndex).Append("\n");
            sb.Append("  LedgerDts: ").Append(LedgerDts).Append("\n");
            sb.Append("  LoyaltyCampaignOid: ").Append(LoyaltyCampaignOid).Append("\n");
            sb.Append("  LoyaltyLedgerOid: ").Append(LoyaltyLedgerOid).Append("\n");
            sb.Append("  LoyaltyPoints: ").Append(LoyaltyPoints).Append("\n");
            sb.Append("  ModifiedBy: ").Append(ModifiedBy).Append("\n");
            sb.Append("  ModifiedDts: ").Append(ModifiedDts).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  VestingDts: ").Append(VestingDts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomerLoyaltyLedger);
        }

        /// <summary>
        /// Returns true if CustomerLoyaltyLedger instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomerLoyaltyLedger to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomerLoyaltyLedger input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.CreatedDts == input.CreatedDts ||
                    (this.CreatedDts != null &&
                    this.CreatedDts.Equals(input.CreatedDts))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.ItemIndex == input.ItemIndex ||
                    (this.ItemIndex != null &&
                    this.ItemIndex.Equals(input.ItemIndex))
                ) && 
                (
                    this.LedgerDts == input.LedgerDts ||
                    (this.LedgerDts != null &&
                    this.LedgerDts.Equals(input.LedgerDts))
                ) && 
                (
                    this.LoyaltyCampaignOid == input.LoyaltyCampaignOid ||
                    (this.LoyaltyCampaignOid != null &&
                    this.LoyaltyCampaignOid.Equals(input.LoyaltyCampaignOid))
                ) && 
                (
                    this.LoyaltyLedgerOid == input.LoyaltyLedgerOid ||
                    (this.LoyaltyLedgerOid != null &&
                    this.LoyaltyLedgerOid.Equals(input.LoyaltyLedgerOid))
                ) && 
                (
                    this.LoyaltyPoints == input.LoyaltyPoints ||
                    (this.LoyaltyPoints != null &&
                    this.LoyaltyPoints.Equals(input.LoyaltyPoints))
                ) && 
                (
                    this.ModifiedBy == input.ModifiedBy ||
                    (this.ModifiedBy != null &&
                    this.ModifiedBy.Equals(input.ModifiedBy))
                ) && 
                (
                    this.ModifiedDts == input.ModifiedDts ||
                    (this.ModifiedDts != null &&
                    this.ModifiedDts.Equals(input.ModifiedDts))
                ) && 
                (
                    this.OrderId == input.OrderId ||
                    (this.OrderId != null &&
                    this.OrderId.Equals(input.OrderId))
                ) && 
                (
                    this.Quantity == input.Quantity ||
                    (this.Quantity != null &&
                    this.Quantity.Equals(input.Quantity))
                ) && 
                (
                    this.VestingDts == input.VestingDts ||
                    (this.VestingDts != null &&
                    this.VestingDts.Equals(input.VestingDts))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CreatedBy != null)
                    hashCode = hashCode * 59 + this.CreatedBy.GetHashCode();
                if (this.CreatedDts != null)
                    hashCode = hashCode * 59 + this.CreatedDts.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.ItemId != null)
                    hashCode = hashCode * 59 + this.ItemId.GetHashCode();
                if (this.ItemIndex != null)
                    hashCode = hashCode * 59 + this.ItemIndex.GetHashCode();
                if (this.LedgerDts != null)
                    hashCode = hashCode * 59 + this.LedgerDts.GetHashCode();
                if (this.LoyaltyCampaignOid != null)
                    hashCode = hashCode * 59 + this.LoyaltyCampaignOid.GetHashCode();
                if (this.LoyaltyLedgerOid != null)
                    hashCode = hashCode * 59 + this.LoyaltyLedgerOid.GetHashCode();
                if (this.LoyaltyPoints != null)
                    hashCode = hashCode * 59 + this.LoyaltyPoints.GetHashCode();
                if (this.ModifiedBy != null)
                    hashCode = hashCode * 59 + this.ModifiedBy.GetHashCode();
                if (this.ModifiedDts != null)
                    hashCode = hashCode * 59 + this.ModifiedDts.GetHashCode();
                if (this.OrderId != null)
                    hashCode = hashCode * 59 + this.OrderId.GetHashCode();
                if (this.Quantity != null)
                    hashCode = hashCode * 59 + this.Quantity.GetHashCode();
                if (this.VestingDts != null)
                    hashCode = hashCode * 59 + this.VestingDts.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
