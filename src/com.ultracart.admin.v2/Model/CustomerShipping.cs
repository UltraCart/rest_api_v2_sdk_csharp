/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// CustomerShipping
    /// </summary>
    [DataContract]
    public partial class CustomerShipping :  IEquatable<CustomerShipping>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerShipping" /> class.
        /// </summary>
        /// <param name="Address1">Address line 1.</param>
        /// <param name="Address2">Address line 2.</param>
        /// <param name="City">City.</param>
        /// <param name="Company">Company.</param>
        /// <param name="CountryCode">ISO-3166 two letter country code.</param>
        /// <param name="CustomerProfileOid">Customer profile object identifier.</param>
        /// <param name="CustomerShippingOid">Customer profile shipping object identifier.</param>
        /// <param name="DayPhone">Day phone.</param>
        /// <param name="DefaultShipping">Default shipping.</param>
        /// <param name="EveningPhone">Evening phone.</param>
        /// <param name="FirstName">First name.</param>
        /// <param name="LastName">Last name.</param>
        /// <param name="LastUsedDts">Last used date.</param>
        /// <param name="PostalCode">Postal code.</param>
        /// <param name="StateRegion">State for United States otherwise region or province for other countries.</param>
        /// <param name="TaxCounty">Tax County.</param>
        /// <param name="Title">Title.</param>
        public CustomerShipping(string Address1 = null, string Address2 = null, string City = null, string Company = null, string CountryCode = null, int? CustomerProfileOid = null, int? CustomerShippingOid = null, string DayPhone = null, bool? DefaultShipping = null, string EveningPhone = null, string FirstName = null, string LastName = null, string LastUsedDts = null, string PostalCode = null, string StateRegion = null, string TaxCounty = null, string Title = null)
        {
            this.Address1 = Address1;
            this.Address2 = Address2;
            this.City = City;
            this.Company = Company;
            this.CountryCode = CountryCode;
            this.CustomerProfileOid = CustomerProfileOid;
            this.CustomerShippingOid = CustomerShippingOid;
            this.DayPhone = DayPhone;
            this.DefaultShipping = DefaultShipping;
            this.EveningPhone = EveningPhone;
            this.FirstName = FirstName;
            this.LastName = LastName;
            this.LastUsedDts = LastUsedDts;
            this.PostalCode = PostalCode;
            this.StateRegion = StateRegion;
            this.TaxCounty = TaxCounty;
            this.Title = Title;
        }
        
        /// <summary>
        /// Address line 1
        /// </summary>
        /// <value>Address line 1</value>
        [DataMember(Name="address1", EmitDefaultValue=false)]
        public string Address1 { get; set; }
        /// <summary>
        /// Address line 2
        /// </summary>
        /// <value>Address line 2</value>
        [DataMember(Name="address2", EmitDefaultValue=false)]
        public string Address2 { get; set; }
        /// <summary>
        /// City
        /// </summary>
        /// <value>City</value>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }
        /// <summary>
        /// Company
        /// </summary>
        /// <value>Company</value>
        [DataMember(Name="company", EmitDefaultValue=false)]
        public string Company { get; set; }
        /// <summary>
        /// ISO-3166 two letter country code
        /// </summary>
        /// <value>ISO-3166 two letter country code</value>
        [DataMember(Name="country_code", EmitDefaultValue=false)]
        public string CountryCode { get; set; }
        /// <summary>
        /// Customer profile object identifier
        /// </summary>
        /// <value>Customer profile object identifier</value>
        [DataMember(Name="customer_profile_oid", EmitDefaultValue=false)]
        public int? CustomerProfileOid { get; set; }
        /// <summary>
        /// Customer profile shipping object identifier
        /// </summary>
        /// <value>Customer profile shipping object identifier</value>
        [DataMember(Name="customer_shipping_oid", EmitDefaultValue=false)]
        public int? CustomerShippingOid { get; set; }
        /// <summary>
        /// Day phone
        /// </summary>
        /// <value>Day phone</value>
        [DataMember(Name="day_phone", EmitDefaultValue=false)]
        public string DayPhone { get; set; }
        /// <summary>
        /// Default shipping
        /// </summary>
        /// <value>Default shipping</value>
        [DataMember(Name="default_shipping", EmitDefaultValue=false)]
        public bool? DefaultShipping { get; set; }
        /// <summary>
        /// Evening phone
        /// </summary>
        /// <value>Evening phone</value>
        [DataMember(Name="evening_phone", EmitDefaultValue=false)]
        public string EveningPhone { get; set; }
        /// <summary>
        /// First name
        /// </summary>
        /// <value>First name</value>
        [DataMember(Name="first_name", EmitDefaultValue=false)]
        public string FirstName { get; set; }
        /// <summary>
        /// Last name
        /// </summary>
        /// <value>Last name</value>
        [DataMember(Name="last_name", EmitDefaultValue=false)]
        public string LastName { get; set; }
        /// <summary>
        /// Last used date
        /// </summary>
        /// <value>Last used date</value>
        [DataMember(Name="last_used_dts", EmitDefaultValue=false)]
        public string LastUsedDts { get; set; }
        /// <summary>
        /// Postal code
        /// </summary>
        /// <value>Postal code</value>
        [DataMember(Name="postal_code", EmitDefaultValue=false)]
        public string PostalCode { get; set; }
        /// <summary>
        /// State for United States otherwise region or province for other countries
        /// </summary>
        /// <value>State for United States otherwise region or province for other countries</value>
        [DataMember(Name="state_region", EmitDefaultValue=false)]
        public string StateRegion { get; set; }
        /// <summary>
        /// Tax County
        /// </summary>
        /// <value>Tax County</value>
        [DataMember(Name="tax_county", EmitDefaultValue=false)]
        public string TaxCounty { get; set; }
        /// <summary>
        /// Title
        /// </summary>
        /// <value>Title</value>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomerShipping {\n");
            sb.Append("  Address1: ").Append(Address1).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  CountryCode: ").Append(CountryCode).Append("\n");
            sb.Append("  CustomerProfileOid: ").Append(CustomerProfileOid).Append("\n");
            sb.Append("  CustomerShippingOid: ").Append(CustomerShippingOid).Append("\n");
            sb.Append("  DayPhone: ").Append(DayPhone).Append("\n");
            sb.Append("  DefaultShipping: ").Append(DefaultShipping).Append("\n");
            sb.Append("  EveningPhone: ").Append(EveningPhone).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  LastUsedDts: ").Append(LastUsedDts).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  StateRegion: ").Append(StateRegion).Append("\n");
            sb.Append("  TaxCounty: ").Append(TaxCounty).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as CustomerShipping);
        }

        /// <summary>
        /// Returns true if CustomerShipping instances are equal
        /// </summary>
        /// <param name="other">Instance of CustomerShipping to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomerShipping other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Address1 == other.Address1 ||
                    this.Address1 != null &&
                    this.Address1.Equals(other.Address1)
                ) && 
                (
                    this.Address2 == other.Address2 ||
                    this.Address2 != null &&
                    this.Address2.Equals(other.Address2)
                ) && 
                (
                    this.City == other.City ||
                    this.City != null &&
                    this.City.Equals(other.City)
                ) && 
                (
                    this.Company == other.Company ||
                    this.Company != null &&
                    this.Company.Equals(other.Company)
                ) && 
                (
                    this.CountryCode == other.CountryCode ||
                    this.CountryCode != null &&
                    this.CountryCode.Equals(other.CountryCode)
                ) && 
                (
                    this.CustomerProfileOid == other.CustomerProfileOid ||
                    this.CustomerProfileOid != null &&
                    this.CustomerProfileOid.Equals(other.CustomerProfileOid)
                ) && 
                (
                    this.CustomerShippingOid == other.CustomerShippingOid ||
                    this.CustomerShippingOid != null &&
                    this.CustomerShippingOid.Equals(other.CustomerShippingOid)
                ) && 
                (
                    this.DayPhone == other.DayPhone ||
                    this.DayPhone != null &&
                    this.DayPhone.Equals(other.DayPhone)
                ) && 
                (
                    this.DefaultShipping == other.DefaultShipping ||
                    this.DefaultShipping != null &&
                    this.DefaultShipping.Equals(other.DefaultShipping)
                ) && 
                (
                    this.EveningPhone == other.EveningPhone ||
                    this.EveningPhone != null &&
                    this.EveningPhone.Equals(other.EveningPhone)
                ) && 
                (
                    this.FirstName == other.FirstName ||
                    this.FirstName != null &&
                    this.FirstName.Equals(other.FirstName)
                ) && 
                (
                    this.LastName == other.LastName ||
                    this.LastName != null &&
                    this.LastName.Equals(other.LastName)
                ) && 
                (
                    this.LastUsedDts == other.LastUsedDts ||
                    this.LastUsedDts != null &&
                    this.LastUsedDts.Equals(other.LastUsedDts)
                ) && 
                (
                    this.PostalCode == other.PostalCode ||
                    this.PostalCode != null &&
                    this.PostalCode.Equals(other.PostalCode)
                ) && 
                (
                    this.StateRegion == other.StateRegion ||
                    this.StateRegion != null &&
                    this.StateRegion.Equals(other.StateRegion)
                ) && 
                (
                    this.TaxCounty == other.TaxCounty ||
                    this.TaxCounty != null &&
                    this.TaxCounty.Equals(other.TaxCounty)
                ) && 
                (
                    this.Title == other.Title ||
                    this.Title != null &&
                    this.Title.Equals(other.Title)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Address1 != null)
                    hash = hash * 59 + this.Address1.GetHashCode();
                if (this.Address2 != null)
                    hash = hash * 59 + this.Address2.GetHashCode();
                if (this.City != null)
                    hash = hash * 59 + this.City.GetHashCode();
                if (this.Company != null)
                    hash = hash * 59 + this.Company.GetHashCode();
                if (this.CountryCode != null)
                    hash = hash * 59 + this.CountryCode.GetHashCode();
                if (this.CustomerProfileOid != null)
                    hash = hash * 59 + this.CustomerProfileOid.GetHashCode();
                if (this.CustomerShippingOid != null)
                    hash = hash * 59 + this.CustomerShippingOid.GetHashCode();
                if (this.DayPhone != null)
                    hash = hash * 59 + this.DayPhone.GetHashCode();
                if (this.DefaultShipping != null)
                    hash = hash * 59 + this.DefaultShipping.GetHashCode();
                if (this.EveningPhone != null)
                    hash = hash * 59 + this.EveningPhone.GetHashCode();
                if (this.FirstName != null)
                    hash = hash * 59 + this.FirstName.GetHashCode();
                if (this.LastName != null)
                    hash = hash * 59 + this.LastName.GetHashCode();
                if (this.LastUsedDts != null)
                    hash = hash * 59 + this.LastUsedDts.GetHashCode();
                if (this.PostalCode != null)
                    hash = hash * 59 + this.PostalCode.GetHashCode();
                if (this.StateRegion != null)
                    hash = hash * 59 + this.StateRegion.GetHashCode();
                if (this.TaxCounty != null)
                    hash = hash * 59 + this.TaxCounty.GetHashCode();
                if (this.Title != null)
                    hash = hash * 59 + this.Title.GetHashCode();
                return hash;
            }
        }
    }

}
