/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// CustomerSoftwareEntitlement
    /// </summary>
    [DataContract]
    public partial class CustomerSoftwareEntitlement :  IEquatable<CustomerSoftwareEntitlement>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerSoftwareEntitlement" /> class.
        /// </summary>
        /// <param name="ActivationCode">Activation Code Associated with the software.</param>
        /// <param name="ActivationDts">Date/time when the activation code was created.</param>
        /// <param name="CustomerSoftwareEntitlementOid">Customer profile software entitlement object identifier.</param>
        /// <param name="ExpirationDts">Date/time when the activation code will expire.</param>
        /// <param name="PurchasedViaItemDescription">Item description used to purchase this software..</param>
        /// <param name="PurchasedViaItemId">Item ID used to purchase this software..</param>
        /// <param name="PurchasedViaOrderId">Order ID used to purchase this software..</param>
        /// <param name="SoftwareSku">SKU of the software.</param>
        public CustomerSoftwareEntitlement(string ActivationCode = default(string), string ActivationDts = default(string), int? CustomerSoftwareEntitlementOid = default(int?), string ExpirationDts = default(string), string PurchasedViaItemDescription = default(string), string PurchasedViaItemId = default(string), string PurchasedViaOrderId = default(string), string SoftwareSku = default(string))
        {
            this.ActivationCode = ActivationCode;
            this.ActivationDts = ActivationDts;
            this.CustomerSoftwareEntitlementOid = CustomerSoftwareEntitlementOid;
            this.ExpirationDts = ExpirationDts;
            this.PurchasedViaItemDescription = PurchasedViaItemDescription;
            this.PurchasedViaItemId = PurchasedViaItemId;
            this.PurchasedViaOrderId = PurchasedViaOrderId;
            this.SoftwareSku = SoftwareSku;
        }
        
        /// <summary>
        /// Activation Code Associated with the software
        /// </summary>
        /// <value>Activation Code Associated with the software</value>
        [DataMember(Name="activation_code", EmitDefaultValue=false)]
        public string ActivationCode { get; set; }

        /// <summary>
        /// Date/time when the activation code was created
        /// </summary>
        /// <value>Date/time when the activation code was created</value>
        [DataMember(Name="activation_dts", EmitDefaultValue=false)]
        public string ActivationDts { get; set; }

        /// <summary>
        /// Customer profile software entitlement object identifier
        /// </summary>
        /// <value>Customer profile software entitlement object identifier</value>
        [DataMember(Name="customer_software_entitlement_oid", EmitDefaultValue=false)]
        public int? CustomerSoftwareEntitlementOid { get; set; }

        /// <summary>
        /// Date/time when the activation code will expire
        /// </summary>
        /// <value>Date/time when the activation code will expire</value>
        [DataMember(Name="expiration_dts", EmitDefaultValue=false)]
        public string ExpirationDts { get; set; }

        /// <summary>
        /// Item description used to purchase this software.
        /// </summary>
        /// <value>Item description used to purchase this software.</value>
        [DataMember(Name="purchased_via_item_description", EmitDefaultValue=false)]
        public string PurchasedViaItemDescription { get; set; }

        /// <summary>
        /// Item ID used to purchase this software.
        /// </summary>
        /// <value>Item ID used to purchase this software.</value>
        [DataMember(Name="purchased_via_item_id", EmitDefaultValue=false)]
        public string PurchasedViaItemId { get; set; }

        /// <summary>
        /// Order ID used to purchase this software.
        /// </summary>
        /// <value>Order ID used to purchase this software.</value>
        [DataMember(Name="purchased_via_order_id", EmitDefaultValue=false)]
        public string PurchasedViaOrderId { get; set; }

        /// <summary>
        /// SKU of the software
        /// </summary>
        /// <value>SKU of the software</value>
        [DataMember(Name="software_sku", EmitDefaultValue=false)]
        public string SoftwareSku { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomerSoftwareEntitlement {\n");
            sb.Append("  ActivationCode: ").Append(ActivationCode).Append("\n");
            sb.Append("  ActivationDts: ").Append(ActivationDts).Append("\n");
            sb.Append("  CustomerSoftwareEntitlementOid: ").Append(CustomerSoftwareEntitlementOid).Append("\n");
            sb.Append("  ExpirationDts: ").Append(ExpirationDts).Append("\n");
            sb.Append("  PurchasedViaItemDescription: ").Append(PurchasedViaItemDescription).Append("\n");
            sb.Append("  PurchasedViaItemId: ").Append(PurchasedViaItemId).Append("\n");
            sb.Append("  PurchasedViaOrderId: ").Append(PurchasedViaOrderId).Append("\n");
            sb.Append("  SoftwareSku: ").Append(SoftwareSku).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomerSoftwareEntitlement);
        }

        /// <summary>
        /// Returns true if CustomerSoftwareEntitlement instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomerSoftwareEntitlement to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomerSoftwareEntitlement input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ActivationCode == input.ActivationCode ||
                    (this.ActivationCode != null &&
                    this.ActivationCode.Equals(input.ActivationCode))
                ) && 
                (
                    this.ActivationDts == input.ActivationDts ||
                    (this.ActivationDts != null &&
                    this.ActivationDts.Equals(input.ActivationDts))
                ) && 
                (
                    this.CustomerSoftwareEntitlementOid == input.CustomerSoftwareEntitlementOid ||
                    (this.CustomerSoftwareEntitlementOid != null &&
                    this.CustomerSoftwareEntitlementOid.Equals(input.CustomerSoftwareEntitlementOid))
                ) && 
                (
                    this.ExpirationDts == input.ExpirationDts ||
                    (this.ExpirationDts != null &&
                    this.ExpirationDts.Equals(input.ExpirationDts))
                ) && 
                (
                    this.PurchasedViaItemDescription == input.PurchasedViaItemDescription ||
                    (this.PurchasedViaItemDescription != null &&
                    this.PurchasedViaItemDescription.Equals(input.PurchasedViaItemDescription))
                ) && 
                (
                    this.PurchasedViaItemId == input.PurchasedViaItemId ||
                    (this.PurchasedViaItemId != null &&
                    this.PurchasedViaItemId.Equals(input.PurchasedViaItemId))
                ) && 
                (
                    this.PurchasedViaOrderId == input.PurchasedViaOrderId ||
                    (this.PurchasedViaOrderId != null &&
                    this.PurchasedViaOrderId.Equals(input.PurchasedViaOrderId))
                ) && 
                (
                    this.SoftwareSku == input.SoftwareSku ||
                    (this.SoftwareSku != null &&
                    this.SoftwareSku.Equals(input.SoftwareSku))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActivationCode != null)
                    hashCode = hashCode * 59 + this.ActivationCode.GetHashCode();
                if (this.ActivationDts != null)
                    hashCode = hashCode * 59 + this.ActivationDts.GetHashCode();
                if (this.CustomerSoftwareEntitlementOid != null)
                    hashCode = hashCode * 59 + this.CustomerSoftwareEntitlementOid.GetHashCode();
                if (this.ExpirationDts != null)
                    hashCode = hashCode * 59 + this.ExpirationDts.GetHashCode();
                if (this.PurchasedViaItemDescription != null)
                    hashCode = hashCode * 59 + this.PurchasedViaItemDescription.GetHashCode();
                if (this.PurchasedViaItemId != null)
                    hashCode = hashCode * 59 + this.PurchasedViaItemId.GetHashCode();
                if (this.PurchasedViaOrderId != null)
                    hashCode = hashCode * 59 + this.PurchasedViaOrderId.GetHashCode();
                if (this.SoftwareSku != null)
                    hashCode = hashCode * 59 + this.SoftwareSku.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ActivationCode (string) maxLength
            if(this.ActivationCode != null && this.ActivationCode.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ActivationCode, length must be less than 50.", new [] { "ActivationCode" });
            }

            // PurchasedViaItemDescription (string) maxLength
            if(this.PurchasedViaItemDescription != null && this.PurchasedViaItemDescription.Length > 512)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PurchasedViaItemDescription, length must be less than 512.", new [] { "PurchasedViaItemDescription" });
            }

            // PurchasedViaItemId (string) maxLength
            if(this.PurchasedViaItemId != null && this.PurchasedViaItemId.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PurchasedViaItemId, length must be less than 20.", new [] { "PurchasedViaItemId" });
            }

            // PurchasedViaOrderId (string) maxLength
            if(this.PurchasedViaOrderId != null && this.PurchasedViaOrderId.Length > 30)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PurchasedViaOrderId, length must be less than 30.", new [] { "PurchasedViaOrderId" });
            }

            // SoftwareSku (string) maxLength
            if(this.SoftwareSku != null && this.SoftwareSku.Length > 30)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SoftwareSku, length must be less than 30.", new [] { "SoftwareSku" });
            }

            yield break;
        }
    }

}
