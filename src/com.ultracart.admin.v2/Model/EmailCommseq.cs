/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// EmailCommseq
    /// </summary>
    [DataContract]
    public partial class EmailCommseq :  IEquatable<EmailCommseq>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EmailCommseq" /> class.
        /// </summary>
        /// <param name="EmailCommunicationSequenceSteps">Array of steps.</param>
        /// <param name="EmailCommunicationSequenceUuid">Email commseq UUID.</param>
        /// <param name="MerchantId">Merchant ID.</param>
        /// <param name="StorefrontOid">Storefront oid.</param>
        public EmailCommseq(List<EmailCommseqStep> EmailCommunicationSequenceSteps = default(List<EmailCommseqStep>), string EmailCommunicationSequenceUuid = default(string), string MerchantId = default(string), int? StorefrontOid = default(int?))
        {
            this.EmailCommunicationSequenceSteps = EmailCommunicationSequenceSteps;
            this.EmailCommunicationSequenceUuid = EmailCommunicationSequenceUuid;
            this.MerchantId = MerchantId;
            this.StorefrontOid = StorefrontOid;
        }
        
        /// <summary>
        /// Array of steps
        /// </summary>
        /// <value>Array of steps</value>
        [DataMember(Name="email_communication_sequence_steps", EmitDefaultValue=false)]
        public List<EmailCommseqStep> EmailCommunicationSequenceSteps { get; set; }

        /// <summary>
        /// Email commseq UUID
        /// </summary>
        /// <value>Email commseq UUID</value>
        [DataMember(Name="email_communication_sequence_uuid", EmitDefaultValue=false)]
        public string EmailCommunicationSequenceUuid { get; set; }

        /// <summary>
        /// Merchant ID
        /// </summary>
        /// <value>Merchant ID</value>
        [DataMember(Name="merchant_id", EmitDefaultValue=false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// Storefront oid
        /// </summary>
        /// <value>Storefront oid</value>
        [DataMember(Name="storefront_oid", EmitDefaultValue=false)]
        public int? StorefrontOid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmailCommseq {\n");
            sb.Append("  EmailCommunicationSequenceSteps: ").Append(EmailCommunicationSequenceSteps).Append("\n");
            sb.Append("  EmailCommunicationSequenceUuid: ").Append(EmailCommunicationSequenceUuid).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  StorefrontOid: ").Append(StorefrontOid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EmailCommseq);
        }

        /// <summary>
        /// Returns true if EmailCommseq instances are equal
        /// </summary>
        /// <param name="input">Instance of EmailCommseq to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmailCommseq input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EmailCommunicationSequenceSteps == input.EmailCommunicationSequenceSteps ||
                    this.EmailCommunicationSequenceSteps != null &&
                    this.EmailCommunicationSequenceSteps.SequenceEqual(input.EmailCommunicationSequenceSteps)
                ) && 
                (
                    this.EmailCommunicationSequenceUuid == input.EmailCommunicationSequenceUuid ||
                    (this.EmailCommunicationSequenceUuid != null &&
                    this.EmailCommunicationSequenceUuid.Equals(input.EmailCommunicationSequenceUuid))
                ) && 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.StorefrontOid == input.StorefrontOid ||
                    (this.StorefrontOid != null &&
                    this.StorefrontOid.Equals(input.StorefrontOid))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EmailCommunicationSequenceSteps != null)
                    hashCode = hashCode * 59 + this.EmailCommunicationSequenceSteps.GetHashCode();
                if (this.EmailCommunicationSequenceUuid != null)
                    hashCode = hashCode * 59 + this.EmailCommunicationSequenceUuid.GetHashCode();
                if (this.MerchantId != null)
                    hashCode = hashCode * 59 + this.MerchantId.GetHashCode();
                if (this.StorefrontOid != null)
                    hashCode = hashCode * 59 + this.StorefrontOid.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
