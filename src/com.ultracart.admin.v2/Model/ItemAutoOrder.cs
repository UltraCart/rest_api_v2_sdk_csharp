/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ItemAutoOrder
    /// </summary>
    [DataContract]
    public partial class ItemAutoOrder :  IEquatable<ItemAutoOrder>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemAutoOrder" /> class.
        /// </summary>
        /// <param name="AuthFutureAmount">AuthFutureAmount.</param>
        /// <param name="AuthTestAmount">AuthTestAmount.</param>
        /// <param name="AutoOrderCancelItemOid">AutoOrderCancelItemOid.</param>
        /// <param name="AutoOrderDowngradeItems">AutoOrderDowngradeItems.</param>
        /// <param name="AutoOrderPaused">AutoOrderPaused.</param>
        /// <param name="AutoOrderSchedules">AutoOrderSchedules.</param>
        /// <param name="AutoOrderUpgradeItems">AutoOrderUpgradeItems.</param>
        /// <param name="AutoOrderUpsell">AutoOrderUpsell.</param>
        /// <param name="AutoOrderUpsellDelay">AutoOrderUpsellDelay.</param>
        /// <param name="AutoOrderUpsellMerchantItemOid">AutoOrderUpsellMerchantItemOid.</param>
        /// <param name="AutoOrderUpsellNoEasyCancel">AutoOrderUpsellNoEasyCancel.</param>
        /// <param name="AutoOrderUpsellOnePerCustomer">AutoOrderUpsellOnePerCustomer.</param>
        /// <param name="AutoOrderUpsellRepeatCount">AutoOrderUpsellRepeatCount.</param>
        /// <param name="AutoOrderUpsellSchedule">AutoOrderUpsellSchedule.</param>
        /// <param name="AutoOrderable">AutoOrderable.</param>
        /// <param name="CancelOtherAutoOrders">CancelOtherAutoOrders.</param>
        /// <param name="FreeShippingAutoOrder">FreeShippingAutoOrder.</param>
        /// <param name="Steps">Steps.</param>
        public ItemAutoOrder(double? AuthFutureAmount = null, double? AuthTestAmount = null, int? AutoOrderCancelItemOid = null, string AutoOrderDowngradeItems = null, bool? AutoOrderPaused = null, int? AutoOrderSchedules = null, string AutoOrderUpgradeItems = null, bool? AutoOrderUpsell = null, int? AutoOrderUpsellDelay = null, int? AutoOrderUpsellMerchantItemOid = null, bool? AutoOrderUpsellNoEasyCancel = null, bool? AutoOrderUpsellOnePerCustomer = null, int? AutoOrderUpsellRepeatCount = null, string AutoOrderUpsellSchedule = null, bool? AutoOrderable = null, bool? CancelOtherAutoOrders = null, bool? FreeShippingAutoOrder = null, List<ItemAutoOrderStep> Steps = null)
        {
            this.AuthFutureAmount = AuthFutureAmount;
            this.AuthTestAmount = AuthTestAmount;
            this.AutoOrderCancelItemOid = AutoOrderCancelItemOid;
            this.AutoOrderDowngradeItems = AutoOrderDowngradeItems;
            this.AutoOrderPaused = AutoOrderPaused;
            this.AutoOrderSchedules = AutoOrderSchedules;
            this.AutoOrderUpgradeItems = AutoOrderUpgradeItems;
            this.AutoOrderUpsell = AutoOrderUpsell;
            this.AutoOrderUpsellDelay = AutoOrderUpsellDelay;
            this.AutoOrderUpsellMerchantItemOid = AutoOrderUpsellMerchantItemOid;
            this.AutoOrderUpsellNoEasyCancel = AutoOrderUpsellNoEasyCancel;
            this.AutoOrderUpsellOnePerCustomer = AutoOrderUpsellOnePerCustomer;
            this.AutoOrderUpsellRepeatCount = AutoOrderUpsellRepeatCount;
            this.AutoOrderUpsellSchedule = AutoOrderUpsellSchedule;
            this.AutoOrderable = AutoOrderable;
            this.CancelOtherAutoOrders = CancelOtherAutoOrders;
            this.FreeShippingAutoOrder = FreeShippingAutoOrder;
            this.Steps = Steps;
        }
        
        /// <summary>
        /// Gets or Sets AuthFutureAmount
        /// </summary>
        [DataMember(Name="auth_future_amount", EmitDefaultValue=false)]
        public double? AuthFutureAmount { get; set; }
        /// <summary>
        /// Gets or Sets AuthTestAmount
        /// </summary>
        [DataMember(Name="auth_test_amount", EmitDefaultValue=false)]
        public double? AuthTestAmount { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderCancelItemOid
        /// </summary>
        [DataMember(Name="auto_order_cancel_item_oid", EmitDefaultValue=false)]
        public int? AutoOrderCancelItemOid { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderDowngradeItems
        /// </summary>
        [DataMember(Name="auto_order_downgrade_items", EmitDefaultValue=false)]
        public string AutoOrderDowngradeItems { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderPaused
        /// </summary>
        [DataMember(Name="auto_order_paused", EmitDefaultValue=false)]
        public bool? AutoOrderPaused { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderSchedules
        /// </summary>
        [DataMember(Name="auto_order_schedules", EmitDefaultValue=false)]
        public int? AutoOrderSchedules { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderUpgradeItems
        /// </summary>
        [DataMember(Name="auto_order_upgrade_items", EmitDefaultValue=false)]
        public string AutoOrderUpgradeItems { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderUpsell
        /// </summary>
        [DataMember(Name="auto_order_upsell", EmitDefaultValue=false)]
        public bool? AutoOrderUpsell { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderUpsellDelay
        /// </summary>
        [DataMember(Name="auto_order_upsell_delay", EmitDefaultValue=false)]
        public int? AutoOrderUpsellDelay { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderUpsellMerchantItemOid
        /// </summary>
        [DataMember(Name="auto_order_upsell_merchant_item_oid", EmitDefaultValue=false)]
        public int? AutoOrderUpsellMerchantItemOid { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderUpsellNoEasyCancel
        /// </summary>
        [DataMember(Name="auto_order_upsell_no_easy_cancel", EmitDefaultValue=false)]
        public bool? AutoOrderUpsellNoEasyCancel { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderUpsellOnePerCustomer
        /// </summary>
        [DataMember(Name="auto_order_upsell_one_per_customer", EmitDefaultValue=false)]
        public bool? AutoOrderUpsellOnePerCustomer { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderUpsellRepeatCount
        /// </summary>
        [DataMember(Name="auto_order_upsell_repeat_count", EmitDefaultValue=false)]
        public int? AutoOrderUpsellRepeatCount { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderUpsellSchedule
        /// </summary>
        [DataMember(Name="auto_order_upsell_schedule", EmitDefaultValue=false)]
        public string AutoOrderUpsellSchedule { get; set; }
        /// <summary>
        /// Gets or Sets AutoOrderable
        /// </summary>
        [DataMember(Name="auto_orderable", EmitDefaultValue=false)]
        public bool? AutoOrderable { get; set; }
        /// <summary>
        /// Gets or Sets CancelOtherAutoOrders
        /// </summary>
        [DataMember(Name="cancel_other_auto_orders", EmitDefaultValue=false)]
        public bool? CancelOtherAutoOrders { get; set; }
        /// <summary>
        /// Gets or Sets FreeShippingAutoOrder
        /// </summary>
        [DataMember(Name="free_shipping_auto_order", EmitDefaultValue=false)]
        public bool? FreeShippingAutoOrder { get; set; }
        /// <summary>
        /// Gets or Sets Steps
        /// </summary>
        [DataMember(Name="steps", EmitDefaultValue=false)]
        public List<ItemAutoOrderStep> Steps { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemAutoOrder {\n");
            sb.Append("  AuthFutureAmount: ").Append(AuthFutureAmount).Append("\n");
            sb.Append("  AuthTestAmount: ").Append(AuthTestAmount).Append("\n");
            sb.Append("  AutoOrderCancelItemOid: ").Append(AutoOrderCancelItemOid).Append("\n");
            sb.Append("  AutoOrderDowngradeItems: ").Append(AutoOrderDowngradeItems).Append("\n");
            sb.Append("  AutoOrderPaused: ").Append(AutoOrderPaused).Append("\n");
            sb.Append("  AutoOrderSchedules: ").Append(AutoOrderSchedules).Append("\n");
            sb.Append("  AutoOrderUpgradeItems: ").Append(AutoOrderUpgradeItems).Append("\n");
            sb.Append("  AutoOrderUpsell: ").Append(AutoOrderUpsell).Append("\n");
            sb.Append("  AutoOrderUpsellDelay: ").Append(AutoOrderUpsellDelay).Append("\n");
            sb.Append("  AutoOrderUpsellMerchantItemOid: ").Append(AutoOrderUpsellMerchantItemOid).Append("\n");
            sb.Append("  AutoOrderUpsellNoEasyCancel: ").Append(AutoOrderUpsellNoEasyCancel).Append("\n");
            sb.Append("  AutoOrderUpsellOnePerCustomer: ").Append(AutoOrderUpsellOnePerCustomer).Append("\n");
            sb.Append("  AutoOrderUpsellRepeatCount: ").Append(AutoOrderUpsellRepeatCount).Append("\n");
            sb.Append("  AutoOrderUpsellSchedule: ").Append(AutoOrderUpsellSchedule).Append("\n");
            sb.Append("  AutoOrderable: ").Append(AutoOrderable).Append("\n");
            sb.Append("  CancelOtherAutoOrders: ").Append(CancelOtherAutoOrders).Append("\n");
            sb.Append("  FreeShippingAutoOrder: ").Append(FreeShippingAutoOrder).Append("\n");
            sb.Append("  Steps: ").Append(Steps).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ItemAutoOrder);
        }

        /// <summary>
        /// Returns true if ItemAutoOrder instances are equal
        /// </summary>
        /// <param name="other">Instance of ItemAutoOrder to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemAutoOrder other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AuthFutureAmount == other.AuthFutureAmount ||
                    this.AuthFutureAmount != null &&
                    this.AuthFutureAmount.Equals(other.AuthFutureAmount)
                ) && 
                (
                    this.AuthTestAmount == other.AuthTestAmount ||
                    this.AuthTestAmount != null &&
                    this.AuthTestAmount.Equals(other.AuthTestAmount)
                ) && 
                (
                    this.AutoOrderCancelItemOid == other.AutoOrderCancelItemOid ||
                    this.AutoOrderCancelItemOid != null &&
                    this.AutoOrderCancelItemOid.Equals(other.AutoOrderCancelItemOid)
                ) && 
                (
                    this.AutoOrderDowngradeItems == other.AutoOrderDowngradeItems ||
                    this.AutoOrderDowngradeItems != null &&
                    this.AutoOrderDowngradeItems.Equals(other.AutoOrderDowngradeItems)
                ) && 
                (
                    this.AutoOrderPaused == other.AutoOrderPaused ||
                    this.AutoOrderPaused != null &&
                    this.AutoOrderPaused.Equals(other.AutoOrderPaused)
                ) && 
                (
                    this.AutoOrderSchedules == other.AutoOrderSchedules ||
                    this.AutoOrderSchedules != null &&
                    this.AutoOrderSchedules.Equals(other.AutoOrderSchedules)
                ) && 
                (
                    this.AutoOrderUpgradeItems == other.AutoOrderUpgradeItems ||
                    this.AutoOrderUpgradeItems != null &&
                    this.AutoOrderUpgradeItems.Equals(other.AutoOrderUpgradeItems)
                ) && 
                (
                    this.AutoOrderUpsell == other.AutoOrderUpsell ||
                    this.AutoOrderUpsell != null &&
                    this.AutoOrderUpsell.Equals(other.AutoOrderUpsell)
                ) && 
                (
                    this.AutoOrderUpsellDelay == other.AutoOrderUpsellDelay ||
                    this.AutoOrderUpsellDelay != null &&
                    this.AutoOrderUpsellDelay.Equals(other.AutoOrderUpsellDelay)
                ) && 
                (
                    this.AutoOrderUpsellMerchantItemOid == other.AutoOrderUpsellMerchantItemOid ||
                    this.AutoOrderUpsellMerchantItemOid != null &&
                    this.AutoOrderUpsellMerchantItemOid.Equals(other.AutoOrderUpsellMerchantItemOid)
                ) && 
                (
                    this.AutoOrderUpsellNoEasyCancel == other.AutoOrderUpsellNoEasyCancel ||
                    this.AutoOrderUpsellNoEasyCancel != null &&
                    this.AutoOrderUpsellNoEasyCancel.Equals(other.AutoOrderUpsellNoEasyCancel)
                ) && 
                (
                    this.AutoOrderUpsellOnePerCustomer == other.AutoOrderUpsellOnePerCustomer ||
                    this.AutoOrderUpsellOnePerCustomer != null &&
                    this.AutoOrderUpsellOnePerCustomer.Equals(other.AutoOrderUpsellOnePerCustomer)
                ) && 
                (
                    this.AutoOrderUpsellRepeatCount == other.AutoOrderUpsellRepeatCount ||
                    this.AutoOrderUpsellRepeatCount != null &&
                    this.AutoOrderUpsellRepeatCount.Equals(other.AutoOrderUpsellRepeatCount)
                ) && 
                (
                    this.AutoOrderUpsellSchedule == other.AutoOrderUpsellSchedule ||
                    this.AutoOrderUpsellSchedule != null &&
                    this.AutoOrderUpsellSchedule.Equals(other.AutoOrderUpsellSchedule)
                ) && 
                (
                    this.AutoOrderable == other.AutoOrderable ||
                    this.AutoOrderable != null &&
                    this.AutoOrderable.Equals(other.AutoOrderable)
                ) && 
                (
                    this.CancelOtherAutoOrders == other.CancelOtherAutoOrders ||
                    this.CancelOtherAutoOrders != null &&
                    this.CancelOtherAutoOrders.Equals(other.CancelOtherAutoOrders)
                ) && 
                (
                    this.FreeShippingAutoOrder == other.FreeShippingAutoOrder ||
                    this.FreeShippingAutoOrder != null &&
                    this.FreeShippingAutoOrder.Equals(other.FreeShippingAutoOrder)
                ) && 
                (
                    this.Steps == other.Steps ||
                    this.Steps != null &&
                    this.Steps.SequenceEqual(other.Steps)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AuthFutureAmount != null)
                    hash = hash * 59 + this.AuthFutureAmount.GetHashCode();
                if (this.AuthTestAmount != null)
                    hash = hash * 59 + this.AuthTestAmount.GetHashCode();
                if (this.AutoOrderCancelItemOid != null)
                    hash = hash * 59 + this.AutoOrderCancelItemOid.GetHashCode();
                if (this.AutoOrderDowngradeItems != null)
                    hash = hash * 59 + this.AutoOrderDowngradeItems.GetHashCode();
                if (this.AutoOrderPaused != null)
                    hash = hash * 59 + this.AutoOrderPaused.GetHashCode();
                if (this.AutoOrderSchedules != null)
                    hash = hash * 59 + this.AutoOrderSchedules.GetHashCode();
                if (this.AutoOrderUpgradeItems != null)
                    hash = hash * 59 + this.AutoOrderUpgradeItems.GetHashCode();
                if (this.AutoOrderUpsell != null)
                    hash = hash * 59 + this.AutoOrderUpsell.GetHashCode();
                if (this.AutoOrderUpsellDelay != null)
                    hash = hash * 59 + this.AutoOrderUpsellDelay.GetHashCode();
                if (this.AutoOrderUpsellMerchantItemOid != null)
                    hash = hash * 59 + this.AutoOrderUpsellMerchantItemOid.GetHashCode();
                if (this.AutoOrderUpsellNoEasyCancel != null)
                    hash = hash * 59 + this.AutoOrderUpsellNoEasyCancel.GetHashCode();
                if (this.AutoOrderUpsellOnePerCustomer != null)
                    hash = hash * 59 + this.AutoOrderUpsellOnePerCustomer.GetHashCode();
                if (this.AutoOrderUpsellRepeatCount != null)
                    hash = hash * 59 + this.AutoOrderUpsellRepeatCount.GetHashCode();
                if (this.AutoOrderUpsellSchedule != null)
                    hash = hash * 59 + this.AutoOrderUpsellSchedule.GetHashCode();
                if (this.AutoOrderable != null)
                    hash = hash * 59 + this.AutoOrderable.GetHashCode();
                if (this.CancelOtherAutoOrders != null)
                    hash = hash * 59 + this.CancelOtherAutoOrders.GetHashCode();
                if (this.FreeShippingAutoOrder != null)
                    hash = hash * 59 + this.FreeShippingAutoOrder.GetHashCode();
                if (this.Steps != null)
                    hash = hash * 59 + this.Steps.GetHashCode();
                return hash;
            }
        }
    }

}
