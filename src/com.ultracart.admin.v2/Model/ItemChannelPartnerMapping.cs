/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ItemChannelPartnerMapping
    /// </summary>
    [DataContract]
    public partial class ItemChannelPartnerMapping :  IEquatable<ItemChannelPartnerMapping>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemChannelPartnerMapping" /> class.
        /// </summary>
        /// <param name="BarcodeUa">BarcodeUa.</param>
        /// <param name="BarcodeUc">BarcodeUc.</param>
        /// <param name="BarcodeUi">BarcodeUi.</param>
        /// <param name="BarcodeUk">BarcodeUk.</param>
        /// <param name="BuyerDpci">BuyerDpci.</param>
        /// <param name="BuyerItemNumber">BuyerItemNumber.</param>
        /// <param name="ChannelPartnerCode">ChannelPartnerCode.</param>
        /// <param name="ChannelPartnerOid">ChannelPartnerOid.</param>
        /// <param name="FromItemId">FromItemId.</param>
        /// <param name="FromSku">FromSku.</param>
        /// <param name="MutuallyDefinedNumber">MutuallyDefinedNumber.</param>
        /// <param name="QuantityRatioCp">QuantityRatioCp.</param>
        /// <param name="QuantityRatioUc">QuantityRatioUc.</param>
        /// <param name="Sku">Sku.</param>
        /// <param name="UnitOfMeasure">UnitOfMeasure.</param>
        /// <param name="VendorNumber">VendorNumber.</param>
        /// <param name="VendorStyleNumber">VendorStyleNumber.</param>
        public ItemChannelPartnerMapping(string BarcodeUa = null, string BarcodeUc = null, string BarcodeUi = null, string BarcodeUk = null, string BuyerDpci = null, string BuyerItemNumber = null, string ChannelPartnerCode = null, int? ChannelPartnerOid = null, string FromItemId = null, string FromSku = null, string MutuallyDefinedNumber = null, int? QuantityRatioCp = null, int? QuantityRatioUc = null, string Sku = null, string UnitOfMeasure = null, string VendorNumber = null, string VendorStyleNumber = null)
        {
            this.BarcodeUa = BarcodeUa;
            this.BarcodeUc = BarcodeUc;
            this.BarcodeUi = BarcodeUi;
            this.BarcodeUk = BarcodeUk;
            this.BuyerDpci = BuyerDpci;
            this.BuyerItemNumber = BuyerItemNumber;
            this.ChannelPartnerCode = ChannelPartnerCode;
            this.ChannelPartnerOid = ChannelPartnerOid;
            this.FromItemId = FromItemId;
            this.FromSku = FromSku;
            this.MutuallyDefinedNumber = MutuallyDefinedNumber;
            this.QuantityRatioCp = QuantityRatioCp;
            this.QuantityRatioUc = QuantityRatioUc;
            this.Sku = Sku;
            this.UnitOfMeasure = UnitOfMeasure;
            this.VendorNumber = VendorNumber;
            this.VendorStyleNumber = VendorStyleNumber;
        }
        
        /// <summary>
        /// Gets or Sets BarcodeUa
        /// </summary>
        [DataMember(Name="barcode_ua", EmitDefaultValue=false)]
        public string BarcodeUa { get; set; }
        /// <summary>
        /// Gets or Sets BarcodeUc
        /// </summary>
        [DataMember(Name="barcode_uc", EmitDefaultValue=false)]
        public string BarcodeUc { get; set; }
        /// <summary>
        /// Gets or Sets BarcodeUi
        /// </summary>
        [DataMember(Name="barcode_ui", EmitDefaultValue=false)]
        public string BarcodeUi { get; set; }
        /// <summary>
        /// Gets or Sets BarcodeUk
        /// </summary>
        [DataMember(Name="barcode_uk", EmitDefaultValue=false)]
        public string BarcodeUk { get; set; }
        /// <summary>
        /// Gets or Sets BuyerDpci
        /// </summary>
        [DataMember(Name="buyer_dpci", EmitDefaultValue=false)]
        public string BuyerDpci { get; set; }
        /// <summary>
        /// Gets or Sets BuyerItemNumber
        /// </summary>
        [DataMember(Name="buyer_item_number", EmitDefaultValue=false)]
        public string BuyerItemNumber { get; set; }
        /// <summary>
        /// Gets or Sets ChannelPartnerCode
        /// </summary>
        [DataMember(Name="channel_partner_code", EmitDefaultValue=false)]
        public string ChannelPartnerCode { get; set; }
        /// <summary>
        /// Gets or Sets ChannelPartnerOid
        /// </summary>
        [DataMember(Name="channel_partner_oid", EmitDefaultValue=false)]
        public int? ChannelPartnerOid { get; set; }
        /// <summary>
        /// Gets or Sets FromItemId
        /// </summary>
        [DataMember(Name="from_item_id", EmitDefaultValue=false)]
        public string FromItemId { get; set; }
        /// <summary>
        /// Gets or Sets FromSku
        /// </summary>
        [DataMember(Name="from_sku", EmitDefaultValue=false)]
        public string FromSku { get; set; }
        /// <summary>
        /// Gets or Sets MutuallyDefinedNumber
        /// </summary>
        [DataMember(Name="mutually_defined_number", EmitDefaultValue=false)]
        public string MutuallyDefinedNumber { get; set; }
        /// <summary>
        /// Gets or Sets QuantityRatioCp
        /// </summary>
        [DataMember(Name="quantity_ratio_cp", EmitDefaultValue=false)]
        public int? QuantityRatioCp { get; set; }
        /// <summary>
        /// Gets or Sets QuantityRatioUc
        /// </summary>
        [DataMember(Name="quantity_ratio_uc", EmitDefaultValue=false)]
        public int? QuantityRatioUc { get; set; }
        /// <summary>
        /// Gets or Sets Sku
        /// </summary>
        [DataMember(Name="sku", EmitDefaultValue=false)]
        public string Sku { get; set; }
        /// <summary>
        /// Gets or Sets UnitOfMeasure
        /// </summary>
        [DataMember(Name="unit_of_measure", EmitDefaultValue=false)]
        public string UnitOfMeasure { get; set; }
        /// <summary>
        /// Gets or Sets VendorNumber
        /// </summary>
        [DataMember(Name="vendor_number", EmitDefaultValue=false)]
        public string VendorNumber { get; set; }
        /// <summary>
        /// Gets or Sets VendorStyleNumber
        /// </summary>
        [DataMember(Name="vendor_style_number", EmitDefaultValue=false)]
        public string VendorStyleNumber { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemChannelPartnerMapping {\n");
            sb.Append("  BarcodeUa: ").Append(BarcodeUa).Append("\n");
            sb.Append("  BarcodeUc: ").Append(BarcodeUc).Append("\n");
            sb.Append("  BarcodeUi: ").Append(BarcodeUi).Append("\n");
            sb.Append("  BarcodeUk: ").Append(BarcodeUk).Append("\n");
            sb.Append("  BuyerDpci: ").Append(BuyerDpci).Append("\n");
            sb.Append("  BuyerItemNumber: ").Append(BuyerItemNumber).Append("\n");
            sb.Append("  ChannelPartnerCode: ").Append(ChannelPartnerCode).Append("\n");
            sb.Append("  ChannelPartnerOid: ").Append(ChannelPartnerOid).Append("\n");
            sb.Append("  FromItemId: ").Append(FromItemId).Append("\n");
            sb.Append("  FromSku: ").Append(FromSku).Append("\n");
            sb.Append("  MutuallyDefinedNumber: ").Append(MutuallyDefinedNumber).Append("\n");
            sb.Append("  QuantityRatioCp: ").Append(QuantityRatioCp).Append("\n");
            sb.Append("  QuantityRatioUc: ").Append(QuantityRatioUc).Append("\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("  UnitOfMeasure: ").Append(UnitOfMeasure).Append("\n");
            sb.Append("  VendorNumber: ").Append(VendorNumber).Append("\n");
            sb.Append("  VendorStyleNumber: ").Append(VendorStyleNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ItemChannelPartnerMapping);
        }

        /// <summary>
        /// Returns true if ItemChannelPartnerMapping instances are equal
        /// </summary>
        /// <param name="other">Instance of ItemChannelPartnerMapping to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemChannelPartnerMapping other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.BarcodeUa == other.BarcodeUa ||
                    this.BarcodeUa != null &&
                    this.BarcodeUa.Equals(other.BarcodeUa)
                ) && 
                (
                    this.BarcodeUc == other.BarcodeUc ||
                    this.BarcodeUc != null &&
                    this.BarcodeUc.Equals(other.BarcodeUc)
                ) && 
                (
                    this.BarcodeUi == other.BarcodeUi ||
                    this.BarcodeUi != null &&
                    this.BarcodeUi.Equals(other.BarcodeUi)
                ) && 
                (
                    this.BarcodeUk == other.BarcodeUk ||
                    this.BarcodeUk != null &&
                    this.BarcodeUk.Equals(other.BarcodeUk)
                ) && 
                (
                    this.BuyerDpci == other.BuyerDpci ||
                    this.BuyerDpci != null &&
                    this.BuyerDpci.Equals(other.BuyerDpci)
                ) && 
                (
                    this.BuyerItemNumber == other.BuyerItemNumber ||
                    this.BuyerItemNumber != null &&
                    this.BuyerItemNumber.Equals(other.BuyerItemNumber)
                ) && 
                (
                    this.ChannelPartnerCode == other.ChannelPartnerCode ||
                    this.ChannelPartnerCode != null &&
                    this.ChannelPartnerCode.Equals(other.ChannelPartnerCode)
                ) && 
                (
                    this.ChannelPartnerOid == other.ChannelPartnerOid ||
                    this.ChannelPartnerOid != null &&
                    this.ChannelPartnerOid.Equals(other.ChannelPartnerOid)
                ) && 
                (
                    this.FromItemId == other.FromItemId ||
                    this.FromItemId != null &&
                    this.FromItemId.Equals(other.FromItemId)
                ) && 
                (
                    this.FromSku == other.FromSku ||
                    this.FromSku != null &&
                    this.FromSku.Equals(other.FromSku)
                ) && 
                (
                    this.MutuallyDefinedNumber == other.MutuallyDefinedNumber ||
                    this.MutuallyDefinedNumber != null &&
                    this.MutuallyDefinedNumber.Equals(other.MutuallyDefinedNumber)
                ) && 
                (
                    this.QuantityRatioCp == other.QuantityRatioCp ||
                    this.QuantityRatioCp != null &&
                    this.QuantityRatioCp.Equals(other.QuantityRatioCp)
                ) && 
                (
                    this.QuantityRatioUc == other.QuantityRatioUc ||
                    this.QuantityRatioUc != null &&
                    this.QuantityRatioUc.Equals(other.QuantityRatioUc)
                ) && 
                (
                    this.Sku == other.Sku ||
                    this.Sku != null &&
                    this.Sku.Equals(other.Sku)
                ) && 
                (
                    this.UnitOfMeasure == other.UnitOfMeasure ||
                    this.UnitOfMeasure != null &&
                    this.UnitOfMeasure.Equals(other.UnitOfMeasure)
                ) && 
                (
                    this.VendorNumber == other.VendorNumber ||
                    this.VendorNumber != null &&
                    this.VendorNumber.Equals(other.VendorNumber)
                ) && 
                (
                    this.VendorStyleNumber == other.VendorStyleNumber ||
                    this.VendorStyleNumber != null &&
                    this.VendorStyleNumber.Equals(other.VendorStyleNumber)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.BarcodeUa != null)
                    hash = hash * 59 + this.BarcodeUa.GetHashCode();
                if (this.BarcodeUc != null)
                    hash = hash * 59 + this.BarcodeUc.GetHashCode();
                if (this.BarcodeUi != null)
                    hash = hash * 59 + this.BarcodeUi.GetHashCode();
                if (this.BarcodeUk != null)
                    hash = hash * 59 + this.BarcodeUk.GetHashCode();
                if (this.BuyerDpci != null)
                    hash = hash * 59 + this.BuyerDpci.GetHashCode();
                if (this.BuyerItemNumber != null)
                    hash = hash * 59 + this.BuyerItemNumber.GetHashCode();
                if (this.ChannelPartnerCode != null)
                    hash = hash * 59 + this.ChannelPartnerCode.GetHashCode();
                if (this.ChannelPartnerOid != null)
                    hash = hash * 59 + this.ChannelPartnerOid.GetHashCode();
                if (this.FromItemId != null)
                    hash = hash * 59 + this.FromItemId.GetHashCode();
                if (this.FromSku != null)
                    hash = hash * 59 + this.FromSku.GetHashCode();
                if (this.MutuallyDefinedNumber != null)
                    hash = hash * 59 + this.MutuallyDefinedNumber.GetHashCode();
                if (this.QuantityRatioCp != null)
                    hash = hash * 59 + this.QuantityRatioCp.GetHashCode();
                if (this.QuantityRatioUc != null)
                    hash = hash * 59 + this.QuantityRatioUc.GetHashCode();
                if (this.Sku != null)
                    hash = hash * 59 + this.Sku.GetHashCode();
                if (this.UnitOfMeasure != null)
                    hash = hash * 59 + this.UnitOfMeasure.GetHashCode();
                if (this.VendorNumber != null)
                    hash = hash * 59 + this.VendorNumber.GetHashCode();
                if (this.VendorStyleNumber != null)
                    hash = hash * 59 + this.VendorStyleNumber.GetHashCode();
                return hash;
            }
        }
    }

}
