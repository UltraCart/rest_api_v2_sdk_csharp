/*
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.ultracart.admin.v2.Client.OpenAPIDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ItemChargebackAddendum
    /// </summary>
    [DataContract]
    public partial class ItemChargebackAddendum :  IEquatable<ItemChargebackAddendum>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemChargebackAddendum" /> class.
        /// </summary>
        /// <param name="chargebackAddendumOid">Chargeback addendum object identifier.</param>
        /// <param name="description">Description.</param>
        /// <param name="fileSize">Size of the file.</param>
        /// <param name="pages">Number of pages.</param>
        public ItemChargebackAddendum(int chargebackAddendumOid = default(int), string description = default(string), int fileSize = default(int), int pages = default(int))
        {
            this.ChargebackAddendumOid = chargebackAddendumOid;
            this.Description = description;
            this.FileSize = fileSize;
            this.Pages = pages;
        }

        /// <summary>
        /// Chargeback addendum object identifier
        /// </summary>
        /// <value>Chargeback addendum object identifier</value>
        [DataMember(Name="chargeback_addendum_oid", EmitDefaultValue=false)]
        public int ChargebackAddendumOid { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        /// <value>Description</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Size of the file
        /// </summary>
        /// <value>Size of the file</value>
        [DataMember(Name="file_size", EmitDefaultValue=false)]
        public int FileSize { get; set; }

        /// <summary>
        /// Number of pages
        /// </summary>
        /// <value>Number of pages</value>
        [DataMember(Name="pages", EmitDefaultValue=false)]
        public int Pages { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemChargebackAddendum {\n");
            sb.Append("  ChargebackAddendumOid: ").Append(ChargebackAddendumOid).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  FileSize: ").Append(FileSize).Append("\n");
            sb.Append("  Pages: ").Append(Pages).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ItemChargebackAddendum);
        }

        /// <summary>
        /// Returns true if ItemChargebackAddendum instances are equal
        /// </summary>
        /// <param name="input">Instance of ItemChargebackAddendum to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemChargebackAddendum input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ChargebackAddendumOid == input.ChargebackAddendumOid ||
                    (this.ChargebackAddendumOid != null &&
                    this.ChargebackAddendumOid.Equals(input.ChargebackAddendumOid))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.FileSize == input.FileSize ||
                    (this.FileSize != null &&
                    this.FileSize.Equals(input.FileSize))
                ) && 
                (
                    this.Pages == input.Pages ||
                    (this.Pages != null &&
                    this.Pages.Equals(input.Pages))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ChargebackAddendumOid != null)
                    hashCode = hashCode * 59 + this.ChargebackAddendumOid.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.FileSize != null)
                    hashCode = hashCode * 59 + this.FileSize.GetHashCode();
                if (this.Pages != null)
                    hashCode = hashCode * 59 + this.Pages.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
