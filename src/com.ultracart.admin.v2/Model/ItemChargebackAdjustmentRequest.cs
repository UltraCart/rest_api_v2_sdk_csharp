/*
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.ultracart.admin.v2.Client.OpenAPIDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ItemChargebackAdjustmentRequest
    /// </summary>
    [DataContract]
    public partial class ItemChargebackAdjustmentRequest :  IEquatable<ItemChargebackAdjustmentRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemChargebackAdjustmentRequest" /> class.
        /// </summary>
        /// <param name="chargebackAdjustmentRequestOid">Chargeback adjustment request object identifier.</param>
        /// <param name="description">Description.</param>
        /// <param name="reasonCode">Reason code.</param>
        public ItemChargebackAdjustmentRequest(int chargebackAdjustmentRequestOid = default(int), string description = default(string), string reasonCode = default(string))
        {
            this.ChargebackAdjustmentRequestOid = chargebackAdjustmentRequestOid;
            this.Description = description;
            this.ReasonCode = reasonCode;
        }

        /// <summary>
        /// Chargeback adjustment request object identifier
        /// </summary>
        /// <value>Chargeback adjustment request object identifier</value>
        [DataMember(Name="chargeback_adjustment_request_oid", EmitDefaultValue=false)]
        public int ChargebackAdjustmentRequestOid { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        /// <value>Description</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Reason code
        /// </summary>
        /// <value>Reason code</value>
        [DataMember(Name="reason_code", EmitDefaultValue=false)]
        public string ReasonCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemChargebackAdjustmentRequest {\n");
            sb.Append("  ChargebackAdjustmentRequestOid: ").Append(ChargebackAdjustmentRequestOid).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ReasonCode: ").Append(ReasonCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ItemChargebackAdjustmentRequest);
        }

        /// <summary>
        /// Returns true if ItemChargebackAdjustmentRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of ItemChargebackAdjustmentRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemChargebackAdjustmentRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ChargebackAdjustmentRequestOid == input.ChargebackAdjustmentRequestOid ||
                    (this.ChargebackAdjustmentRequestOid != null &&
                    this.ChargebackAdjustmentRequestOid.Equals(input.ChargebackAdjustmentRequestOid))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ReasonCode == input.ReasonCode ||
                    (this.ReasonCode != null &&
                    this.ReasonCode.Equals(input.ReasonCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ChargebackAdjustmentRequestOid != null)
                    hashCode = hashCode * 59 + this.ChargebackAdjustmentRequestOid.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.ReasonCode != null)
                    hashCode = hashCode * 59 + this.ReasonCode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
