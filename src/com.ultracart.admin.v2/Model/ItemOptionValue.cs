/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ItemOptionValue
    /// </summary>
    [DataContract]
    public partial class ItemOptionValue :  IEquatable<ItemOptionValue>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemOptionValue" /> class.
        /// </summary>
        /// <param name="AdditionalDimensionApplication">AdditionalDimensionApplication.</param>
        /// <param name="AdditionalItems">AdditionalItems.</param>
        /// <param name="CostChange">CostChange.</param>
        /// <param name="DefaultValue">DefaultValue.</param>
        /// <param name="DigitalItems">DigitalItems.</param>
        /// <param name="Height">Height.</param>
        /// <param name="Length">Length.</param>
        /// <param name="MerchantItemMultimediaOid">MerchantItemMultimediaOid.</param>
        /// <param name="OptionValueOid">OptionValueOid.</param>
        /// <param name="PercentCostChange">PercentCostChange.</param>
        /// <param name="TranslatedTextInstanceOid">TranslatedTextInstanceOid.</param>
        /// <param name="Value">Value.</param>
        /// <param name="WeightChange">WeightChange.</param>
        /// <param name="WeightChangePercent">WeightChangePercent.</param>
        /// <param name="Width">Width.</param>
        public ItemOptionValue(string AdditionalDimensionApplication = null, List<ItemOptionValueAdditionalItem> AdditionalItems = null, double? CostChange = null, bool? DefaultValue = null, List<ItemOptionValueDigitalItem> DigitalItems = null, Distance Height = null, Distance Length = null, int? MerchantItemMultimediaOid = null, int? OptionValueOid = null, double? PercentCostChange = null, int? TranslatedTextInstanceOid = null, string Value = null, Weight WeightChange = null, double? WeightChangePercent = null, Distance Width = null)
        {
            this.AdditionalDimensionApplication = AdditionalDimensionApplication;
            this.AdditionalItems = AdditionalItems;
            this.CostChange = CostChange;
            this.DefaultValue = DefaultValue;
            this.DigitalItems = DigitalItems;
            this.Height = Height;
            this.Length = Length;
            this.MerchantItemMultimediaOid = MerchantItemMultimediaOid;
            this.OptionValueOid = OptionValueOid;
            this.PercentCostChange = PercentCostChange;
            this.TranslatedTextInstanceOid = TranslatedTextInstanceOid;
            this.Value = Value;
            this.WeightChange = WeightChange;
            this.WeightChangePercent = WeightChangePercent;
            this.Width = Width;
        }
        
        /// <summary>
        /// Gets or Sets AdditionalDimensionApplication
        /// </summary>
        [DataMember(Name="additional_dimension_application", EmitDefaultValue=false)]
        public string AdditionalDimensionApplication { get; set; }
        /// <summary>
        /// Gets or Sets AdditionalItems
        /// </summary>
        [DataMember(Name="additional_items", EmitDefaultValue=false)]
        public List<ItemOptionValueAdditionalItem> AdditionalItems { get; set; }
        /// <summary>
        /// Gets or Sets CostChange
        /// </summary>
        [DataMember(Name="cost_change", EmitDefaultValue=false)]
        public double? CostChange { get; set; }
        /// <summary>
        /// Gets or Sets DefaultValue
        /// </summary>
        [DataMember(Name="default_value", EmitDefaultValue=false)]
        public bool? DefaultValue { get; set; }
        /// <summary>
        /// Gets or Sets DigitalItems
        /// </summary>
        [DataMember(Name="digital_items", EmitDefaultValue=false)]
        public List<ItemOptionValueDigitalItem> DigitalItems { get; set; }
        /// <summary>
        /// Gets or Sets Height
        /// </summary>
        [DataMember(Name="height", EmitDefaultValue=false)]
        public Distance Height { get; set; }
        /// <summary>
        /// Gets or Sets Length
        /// </summary>
        [DataMember(Name="length", EmitDefaultValue=false)]
        public Distance Length { get; set; }
        /// <summary>
        /// Gets or Sets MerchantItemMultimediaOid
        /// </summary>
        [DataMember(Name="merchant_item_multimedia_oid", EmitDefaultValue=false)]
        public int? MerchantItemMultimediaOid { get; set; }
        /// <summary>
        /// Gets or Sets OptionValueOid
        /// </summary>
        [DataMember(Name="option_value_oid", EmitDefaultValue=false)]
        public int? OptionValueOid { get; set; }
        /// <summary>
        /// Gets or Sets PercentCostChange
        /// </summary>
        [DataMember(Name="percent_cost_change", EmitDefaultValue=false)]
        public double? PercentCostChange { get; set; }
        /// <summary>
        /// Gets or Sets TranslatedTextInstanceOid
        /// </summary>
        [DataMember(Name="translated_text_instance_oid", EmitDefaultValue=false)]
        public int? TranslatedTextInstanceOid { get; set; }
        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name="value", EmitDefaultValue=false)]
        public string Value { get; set; }
        /// <summary>
        /// Gets or Sets WeightChange
        /// </summary>
        [DataMember(Name="weight_change", EmitDefaultValue=false)]
        public Weight WeightChange { get; set; }
        /// <summary>
        /// Gets or Sets WeightChangePercent
        /// </summary>
        [DataMember(Name="weight_change_percent", EmitDefaultValue=false)]
        public double? WeightChangePercent { get; set; }
        /// <summary>
        /// Gets or Sets Width
        /// </summary>
        [DataMember(Name="width", EmitDefaultValue=false)]
        public Distance Width { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemOptionValue {\n");
            sb.Append("  AdditionalDimensionApplication: ").Append(AdditionalDimensionApplication).Append("\n");
            sb.Append("  AdditionalItems: ").Append(AdditionalItems).Append("\n");
            sb.Append("  CostChange: ").Append(CostChange).Append("\n");
            sb.Append("  DefaultValue: ").Append(DefaultValue).Append("\n");
            sb.Append("  DigitalItems: ").Append(DigitalItems).Append("\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  Length: ").Append(Length).Append("\n");
            sb.Append("  MerchantItemMultimediaOid: ").Append(MerchantItemMultimediaOid).Append("\n");
            sb.Append("  OptionValueOid: ").Append(OptionValueOid).Append("\n");
            sb.Append("  PercentCostChange: ").Append(PercentCostChange).Append("\n");
            sb.Append("  TranslatedTextInstanceOid: ").Append(TranslatedTextInstanceOid).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  WeightChange: ").Append(WeightChange).Append("\n");
            sb.Append("  WeightChangePercent: ").Append(WeightChangePercent).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ItemOptionValue);
        }

        /// <summary>
        /// Returns true if ItemOptionValue instances are equal
        /// </summary>
        /// <param name="other">Instance of ItemOptionValue to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemOptionValue other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AdditionalDimensionApplication == other.AdditionalDimensionApplication ||
                    this.AdditionalDimensionApplication != null &&
                    this.AdditionalDimensionApplication.Equals(other.AdditionalDimensionApplication)
                ) && 
                (
                    this.AdditionalItems == other.AdditionalItems ||
                    this.AdditionalItems != null &&
                    this.AdditionalItems.SequenceEqual(other.AdditionalItems)
                ) && 
                (
                    this.CostChange == other.CostChange ||
                    this.CostChange != null &&
                    this.CostChange.Equals(other.CostChange)
                ) && 
                (
                    this.DefaultValue == other.DefaultValue ||
                    this.DefaultValue != null &&
                    this.DefaultValue.Equals(other.DefaultValue)
                ) && 
                (
                    this.DigitalItems == other.DigitalItems ||
                    this.DigitalItems != null &&
                    this.DigitalItems.SequenceEqual(other.DigitalItems)
                ) && 
                (
                    this.Height == other.Height ||
                    this.Height != null &&
                    this.Height.Equals(other.Height)
                ) && 
                (
                    this.Length == other.Length ||
                    this.Length != null &&
                    this.Length.Equals(other.Length)
                ) && 
                (
                    this.MerchantItemMultimediaOid == other.MerchantItemMultimediaOid ||
                    this.MerchantItemMultimediaOid != null &&
                    this.MerchantItemMultimediaOid.Equals(other.MerchantItemMultimediaOid)
                ) && 
                (
                    this.OptionValueOid == other.OptionValueOid ||
                    this.OptionValueOid != null &&
                    this.OptionValueOid.Equals(other.OptionValueOid)
                ) && 
                (
                    this.PercentCostChange == other.PercentCostChange ||
                    this.PercentCostChange != null &&
                    this.PercentCostChange.Equals(other.PercentCostChange)
                ) && 
                (
                    this.TranslatedTextInstanceOid == other.TranslatedTextInstanceOid ||
                    this.TranslatedTextInstanceOid != null &&
                    this.TranslatedTextInstanceOid.Equals(other.TranslatedTextInstanceOid)
                ) && 
                (
                    this.Value == other.Value ||
                    this.Value != null &&
                    this.Value.Equals(other.Value)
                ) && 
                (
                    this.WeightChange == other.WeightChange ||
                    this.WeightChange != null &&
                    this.WeightChange.Equals(other.WeightChange)
                ) && 
                (
                    this.WeightChangePercent == other.WeightChangePercent ||
                    this.WeightChangePercent != null &&
                    this.WeightChangePercent.Equals(other.WeightChangePercent)
                ) && 
                (
                    this.Width == other.Width ||
                    this.Width != null &&
                    this.Width.Equals(other.Width)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AdditionalDimensionApplication != null)
                    hash = hash * 59 + this.AdditionalDimensionApplication.GetHashCode();
                if (this.AdditionalItems != null)
                    hash = hash * 59 + this.AdditionalItems.GetHashCode();
                if (this.CostChange != null)
                    hash = hash * 59 + this.CostChange.GetHashCode();
                if (this.DefaultValue != null)
                    hash = hash * 59 + this.DefaultValue.GetHashCode();
                if (this.DigitalItems != null)
                    hash = hash * 59 + this.DigitalItems.GetHashCode();
                if (this.Height != null)
                    hash = hash * 59 + this.Height.GetHashCode();
                if (this.Length != null)
                    hash = hash * 59 + this.Length.GetHashCode();
                if (this.MerchantItemMultimediaOid != null)
                    hash = hash * 59 + this.MerchantItemMultimediaOid.GetHashCode();
                if (this.OptionValueOid != null)
                    hash = hash * 59 + this.OptionValueOid.GetHashCode();
                if (this.PercentCostChange != null)
                    hash = hash * 59 + this.PercentCostChange.GetHashCode();
                if (this.TranslatedTextInstanceOid != null)
                    hash = hash * 59 + this.TranslatedTextInstanceOid.GetHashCode();
                if (this.Value != null)
                    hash = hash * 59 + this.Value.GetHashCode();
                if (this.WeightChange != null)
                    hash = hash * 59 + this.WeightChange.GetHashCode();
                if (this.WeightChangePercent != null)
                    hash = hash * 59 + this.WeightChangePercent.GetHashCode();
                if (this.Width != null)
                    hash = hash * 59 + this.Width.GetHashCode();
                return hash;
            }
        }
    }

}
