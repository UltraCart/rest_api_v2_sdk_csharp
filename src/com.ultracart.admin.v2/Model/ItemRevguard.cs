/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ItemRevguard
    /// </summary>
    [DataContract]
    public partial class ItemRevguard :  IEquatable<ItemRevguard>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemRevguard" /> class.
        /// </summary>
        /// <param name="RevguardCanceledCsrPromptGroup">RevguardCanceledCsrPromptGroup.</param>
        /// <param name="RevguardCanceledIvrPromptGroup">RevguardCanceledIvrPromptGroup.</param>
        /// <param name="RevguardCanceledWebPromptGroup">RevguardCanceledWebPromptGroup.</param>
        /// <param name="RevguardClientBrand">RevguardClientBrand.</param>
        /// <param name="RevguardCsrPromptGroup">RevguardCsrPromptGroup.</param>
        /// <param name="RevguardIvrPromptGroup">RevguardIvrPromptGroup.</param>
        /// <param name="RevguardWebPromptGroup">RevguardWebPromptGroup.</param>
        public ItemRevguard(long? RevguardCanceledCsrPromptGroup = null, long? RevguardCanceledIvrPromptGroup = null, long? RevguardCanceledWebPromptGroup = null, long? RevguardClientBrand = null, long? RevguardCsrPromptGroup = null, long? RevguardIvrPromptGroup = null, long? RevguardWebPromptGroup = null)
        {
            this.RevguardCanceledCsrPromptGroup = RevguardCanceledCsrPromptGroup;
            this.RevguardCanceledIvrPromptGroup = RevguardCanceledIvrPromptGroup;
            this.RevguardCanceledWebPromptGroup = RevguardCanceledWebPromptGroup;
            this.RevguardClientBrand = RevguardClientBrand;
            this.RevguardCsrPromptGroup = RevguardCsrPromptGroup;
            this.RevguardIvrPromptGroup = RevguardIvrPromptGroup;
            this.RevguardWebPromptGroup = RevguardWebPromptGroup;
        }
        
        /// <summary>
        /// Gets or Sets RevguardCanceledCsrPromptGroup
        /// </summary>
        [DataMember(Name="revguard_canceled_csr_prompt_group", EmitDefaultValue=false)]
        public long? RevguardCanceledCsrPromptGroup { get; set; }
        /// <summary>
        /// Gets or Sets RevguardCanceledIvrPromptGroup
        /// </summary>
        [DataMember(Name="revguard_canceled_ivr_prompt_group", EmitDefaultValue=false)]
        public long? RevguardCanceledIvrPromptGroup { get; set; }
        /// <summary>
        /// Gets or Sets RevguardCanceledWebPromptGroup
        /// </summary>
        [DataMember(Name="revguard_canceled_web_prompt_group", EmitDefaultValue=false)]
        public long? RevguardCanceledWebPromptGroup { get; set; }
        /// <summary>
        /// Gets or Sets RevguardClientBrand
        /// </summary>
        [DataMember(Name="revguard_client_brand", EmitDefaultValue=false)]
        public long? RevguardClientBrand { get; set; }
        /// <summary>
        /// Gets or Sets RevguardCsrPromptGroup
        /// </summary>
        [DataMember(Name="revguard_csr_prompt_group", EmitDefaultValue=false)]
        public long? RevguardCsrPromptGroup { get; set; }
        /// <summary>
        /// Gets or Sets RevguardIvrPromptGroup
        /// </summary>
        [DataMember(Name="revguard_ivr_prompt_group", EmitDefaultValue=false)]
        public long? RevguardIvrPromptGroup { get; set; }
        /// <summary>
        /// Gets or Sets RevguardWebPromptGroup
        /// </summary>
        [DataMember(Name="revguard_web_prompt_group", EmitDefaultValue=false)]
        public long? RevguardWebPromptGroup { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemRevguard {\n");
            sb.Append("  RevguardCanceledCsrPromptGroup: ").Append(RevguardCanceledCsrPromptGroup).Append("\n");
            sb.Append("  RevguardCanceledIvrPromptGroup: ").Append(RevguardCanceledIvrPromptGroup).Append("\n");
            sb.Append("  RevguardCanceledWebPromptGroup: ").Append(RevguardCanceledWebPromptGroup).Append("\n");
            sb.Append("  RevguardClientBrand: ").Append(RevguardClientBrand).Append("\n");
            sb.Append("  RevguardCsrPromptGroup: ").Append(RevguardCsrPromptGroup).Append("\n");
            sb.Append("  RevguardIvrPromptGroup: ").Append(RevguardIvrPromptGroup).Append("\n");
            sb.Append("  RevguardWebPromptGroup: ").Append(RevguardWebPromptGroup).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ItemRevguard);
        }

        /// <summary>
        /// Returns true if ItemRevguard instances are equal
        /// </summary>
        /// <param name="other">Instance of ItemRevguard to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemRevguard other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.RevguardCanceledCsrPromptGroup == other.RevguardCanceledCsrPromptGroup ||
                    this.RevguardCanceledCsrPromptGroup != null &&
                    this.RevguardCanceledCsrPromptGroup.Equals(other.RevguardCanceledCsrPromptGroup)
                ) && 
                (
                    this.RevguardCanceledIvrPromptGroup == other.RevguardCanceledIvrPromptGroup ||
                    this.RevguardCanceledIvrPromptGroup != null &&
                    this.RevguardCanceledIvrPromptGroup.Equals(other.RevguardCanceledIvrPromptGroup)
                ) && 
                (
                    this.RevguardCanceledWebPromptGroup == other.RevguardCanceledWebPromptGroup ||
                    this.RevguardCanceledWebPromptGroup != null &&
                    this.RevguardCanceledWebPromptGroup.Equals(other.RevguardCanceledWebPromptGroup)
                ) && 
                (
                    this.RevguardClientBrand == other.RevguardClientBrand ||
                    this.RevguardClientBrand != null &&
                    this.RevguardClientBrand.Equals(other.RevguardClientBrand)
                ) && 
                (
                    this.RevguardCsrPromptGroup == other.RevguardCsrPromptGroup ||
                    this.RevguardCsrPromptGroup != null &&
                    this.RevguardCsrPromptGroup.Equals(other.RevguardCsrPromptGroup)
                ) && 
                (
                    this.RevguardIvrPromptGroup == other.RevguardIvrPromptGroup ||
                    this.RevguardIvrPromptGroup != null &&
                    this.RevguardIvrPromptGroup.Equals(other.RevguardIvrPromptGroup)
                ) && 
                (
                    this.RevguardWebPromptGroup == other.RevguardWebPromptGroup ||
                    this.RevguardWebPromptGroup != null &&
                    this.RevguardWebPromptGroup.Equals(other.RevguardWebPromptGroup)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.RevguardCanceledCsrPromptGroup != null)
                    hash = hash * 59 + this.RevguardCanceledCsrPromptGroup.GetHashCode();
                if (this.RevguardCanceledIvrPromptGroup != null)
                    hash = hash * 59 + this.RevguardCanceledIvrPromptGroup.GetHashCode();
                if (this.RevguardCanceledWebPromptGroup != null)
                    hash = hash * 59 + this.RevguardCanceledWebPromptGroup.GetHashCode();
                if (this.RevguardClientBrand != null)
                    hash = hash * 59 + this.RevguardClientBrand.GetHashCode();
                if (this.RevguardCsrPromptGroup != null)
                    hash = hash * 59 + this.RevguardCsrPromptGroup.GetHashCode();
                if (this.RevguardIvrPromptGroup != null)
                    hash = hash * 59 + this.RevguardIvrPromptGroup.GetHashCode();
                if (this.RevguardWebPromptGroup != null)
                    hash = hash * 59 + this.RevguardWebPromptGroup.GetHashCode();
                return hash;
            }
        }
    }

}
