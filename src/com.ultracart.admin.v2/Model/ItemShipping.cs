/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ItemShipping
    /// </summary>
    [DataContract]
    public partial class ItemShipping :  IEquatable<ItemShipping>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemShipping" /> class.
        /// </summary>
        /// <param name="AllowBackOrder">AllowBackOrder.</param>
        /// <param name="AmazonFba">AmazonFba.</param>
        /// <param name="CaseInnerPacks">CaseInnerPacks.</param>
        /// <param name="CaseUnits">CaseUnits.</param>
        /// <param name="Cases">Cases.</param>
        /// <param name="CountryOfOrigin">CountryOfOrigin.</param>
        /// <param name="CustomsDescription">CustomsDescription.</param>
        /// <param name="CustomsValue">CustomsValue.</param>
        /// <param name="DeliveryOnFriday">DeliveryOnFriday.</param>
        /// <param name="DeliveryOnMonday">DeliveryOnMonday.</param>
        /// <param name="DeliveryOnSaturday">DeliveryOnSaturday.</param>
        /// <param name="DeliveryOnSunday">DeliveryOnSunday.</param>
        /// <param name="DeliveryOnThursday">DeliveryOnThursday.</param>
        /// <param name="DeliveryOnTuesday">DeliveryOnTuesday.</param>
        /// <param name="DeliveryOnWednesday">DeliveryOnWednesday.</param>
        /// <param name="DestinationMarkups">DestinationMarkups.</param>
        /// <param name="DestinationRestrictions">DestinationRestrictions.</param>
        /// <param name="DistributionCenters">DistributionCenters.</param>
        /// <param name="Eta">Eta.</param>
        /// <param name="FreeShipping">FreeShipping.</param>
        /// <param name="FreightClass">FreightClass.</param>
        /// <param name="Hazmat">Hazmat.</param>
        /// <param name="MadeToOrder">MadeToOrder.</param>
        /// <param name="MadeToOrderLeadTime">MadeToOrderLeadTime.</param>
        /// <param name="MaxDaysTimeInTransit">MaxDaysTimeInTransit.</param>
        /// <param name="Methods">Methods.</param>
        /// <param name="NoShippingDiscount">NoShippingDiscount.</param>
        /// <param name="PackageRequirements">PackageRequirements.</param>
        /// <param name="PerishableClassOid">PerishableClassOid.</param>
        /// <param name="Preorder">Preorder.</param>
        /// <param name="RequireDeliveryDate">RequireDeliveryDate.</param>
        /// <param name="RestrictShipmentOnFriday">RestrictShipmentOnFriday.</param>
        /// <param name="RestrictShipmentOnMonday">RestrictShipmentOnMonday.</param>
        /// <param name="RestrictShipmentOnSaturday">RestrictShipmentOnSaturday.</param>
        /// <param name="RestrictShipmentOnSunday">RestrictShipmentOnSunday.</param>
        /// <param name="RestrictShipmentOnThursday">RestrictShipmentOnThursday.</param>
        /// <param name="RestrictShipmentOnTuesday">RestrictShipmentOnTuesday.</param>
        /// <param name="RestrictShipmentOnWednesday">RestrictShipmentOnWednesday.</param>
        /// <param name="ShipSeparately">ShipSeparately.</param>
        /// <param name="ShipSeparatelyAdditionalWeight">ShipSeparatelyAdditionalWeight.</param>
        /// <param name="ShipSeparatelyHeight">ShipSeparatelyHeight.</param>
        /// <param name="ShipSeparatelyLength">ShipSeparatelyLength.</param>
        /// <param name="ShipSeparatelyPackageSpecialType">ShipSeparatelyPackageSpecialType.</param>
        /// <param name="ShipSeparatelyWidth">ShipSeparatelyWidth.</param>
        /// <param name="SpecialProductType">SpecialProductType.</param>
        /// <param name="TrackInventory">TrackInventory.</param>
        public ItemShipping(bool? AllowBackOrder = null, bool? AmazonFba = null, int? CaseInnerPacks = null, int? CaseUnits = null, List<ItemShippingCase> Cases = null, string CountryOfOrigin = null, string CustomsDescription = null, double? CustomsValue = null, bool? DeliveryOnFriday = null, bool? DeliveryOnMonday = null, bool? DeliveryOnSaturday = null, bool? DeliveryOnSunday = null, bool? DeliveryOnThursday = null, bool? DeliveryOnTuesday = null, bool? DeliveryOnWednesday = null, List<ItemShippingDestinationMarkup> DestinationMarkups = null, List<ItemShippingDestinationRestriction> DestinationRestrictions = null, List<ItemShippingDistributionCenter> DistributionCenters = null, string Eta = null, bool? FreeShipping = null, string FreightClass = null, bool? Hazmat = null, bool? MadeToOrder = null, int? MadeToOrderLeadTime = null, int? MaxDaysTimeInTransit = null, List<ItemShippingMethod> Methods = null, bool? NoShippingDiscount = null, List<ItemShippingPackageRequirement> PackageRequirements = null, int? PerishableClassOid = null, bool? Preorder = null, bool? RequireDeliveryDate = null, bool? RestrictShipmentOnFriday = null, bool? RestrictShipmentOnMonday = null, bool? RestrictShipmentOnSaturday = null, bool? RestrictShipmentOnSunday = null, bool? RestrictShipmentOnThursday = null, bool? RestrictShipmentOnTuesday = null, bool? RestrictShipmentOnWednesday = null, bool? ShipSeparately = null, Weight ShipSeparatelyAdditionalWeight = null, Distance ShipSeparatelyHeight = null, Distance ShipSeparatelyLength = null, string ShipSeparatelyPackageSpecialType = null, Distance ShipSeparatelyWidth = null, string SpecialProductType = null, bool? TrackInventory = null)
        {
            this.AllowBackOrder = AllowBackOrder;
            this.AmazonFba = AmazonFba;
            this.CaseInnerPacks = CaseInnerPacks;
            this.CaseUnits = CaseUnits;
            this.Cases = Cases;
            this.CountryOfOrigin = CountryOfOrigin;
            this.CustomsDescription = CustomsDescription;
            this.CustomsValue = CustomsValue;
            this.DeliveryOnFriday = DeliveryOnFriday;
            this.DeliveryOnMonday = DeliveryOnMonday;
            this.DeliveryOnSaturday = DeliveryOnSaturday;
            this.DeliveryOnSunday = DeliveryOnSunday;
            this.DeliveryOnThursday = DeliveryOnThursday;
            this.DeliveryOnTuesday = DeliveryOnTuesday;
            this.DeliveryOnWednesday = DeliveryOnWednesday;
            this.DestinationMarkups = DestinationMarkups;
            this.DestinationRestrictions = DestinationRestrictions;
            this.DistributionCenters = DistributionCenters;
            this.Eta = Eta;
            this.FreeShipping = FreeShipping;
            this.FreightClass = FreightClass;
            this.Hazmat = Hazmat;
            this.MadeToOrder = MadeToOrder;
            this.MadeToOrderLeadTime = MadeToOrderLeadTime;
            this.MaxDaysTimeInTransit = MaxDaysTimeInTransit;
            this.Methods = Methods;
            this.NoShippingDiscount = NoShippingDiscount;
            this.PackageRequirements = PackageRequirements;
            this.PerishableClassOid = PerishableClassOid;
            this.Preorder = Preorder;
            this.RequireDeliveryDate = RequireDeliveryDate;
            this.RestrictShipmentOnFriday = RestrictShipmentOnFriday;
            this.RestrictShipmentOnMonday = RestrictShipmentOnMonday;
            this.RestrictShipmentOnSaturday = RestrictShipmentOnSaturday;
            this.RestrictShipmentOnSunday = RestrictShipmentOnSunday;
            this.RestrictShipmentOnThursday = RestrictShipmentOnThursday;
            this.RestrictShipmentOnTuesday = RestrictShipmentOnTuesday;
            this.RestrictShipmentOnWednesday = RestrictShipmentOnWednesday;
            this.ShipSeparately = ShipSeparately;
            this.ShipSeparatelyAdditionalWeight = ShipSeparatelyAdditionalWeight;
            this.ShipSeparatelyHeight = ShipSeparatelyHeight;
            this.ShipSeparatelyLength = ShipSeparatelyLength;
            this.ShipSeparatelyPackageSpecialType = ShipSeparatelyPackageSpecialType;
            this.ShipSeparatelyWidth = ShipSeparatelyWidth;
            this.SpecialProductType = SpecialProductType;
            this.TrackInventory = TrackInventory;
        }
        
        /// <summary>
        /// Gets or Sets AllowBackOrder
        /// </summary>
        [DataMember(Name="allow_back_order", EmitDefaultValue=false)]
        public bool? AllowBackOrder { get; set; }
        /// <summary>
        /// Gets or Sets AmazonFba
        /// </summary>
        [DataMember(Name="amazon_fba", EmitDefaultValue=false)]
        public bool? AmazonFba { get; set; }
        /// <summary>
        /// Gets or Sets CaseInnerPacks
        /// </summary>
        [DataMember(Name="case_inner_packs", EmitDefaultValue=false)]
        public int? CaseInnerPacks { get; set; }
        /// <summary>
        /// Gets or Sets CaseUnits
        /// </summary>
        [DataMember(Name="case_units", EmitDefaultValue=false)]
        public int? CaseUnits { get; set; }
        /// <summary>
        /// Gets or Sets Cases
        /// </summary>
        [DataMember(Name="cases", EmitDefaultValue=false)]
        public List<ItemShippingCase> Cases { get; set; }
        /// <summary>
        /// Gets or Sets CountryOfOrigin
        /// </summary>
        [DataMember(Name="country_of_origin", EmitDefaultValue=false)]
        public string CountryOfOrigin { get; set; }
        /// <summary>
        /// Gets or Sets CustomsDescription
        /// </summary>
        [DataMember(Name="customs_description", EmitDefaultValue=false)]
        public string CustomsDescription { get; set; }
        /// <summary>
        /// Gets or Sets CustomsValue
        /// </summary>
        [DataMember(Name="customs_value", EmitDefaultValue=false)]
        public double? CustomsValue { get; set; }
        /// <summary>
        /// Gets or Sets DeliveryOnFriday
        /// </summary>
        [DataMember(Name="delivery_on_friday", EmitDefaultValue=false)]
        public bool? DeliveryOnFriday { get; set; }
        /// <summary>
        /// Gets or Sets DeliveryOnMonday
        /// </summary>
        [DataMember(Name="delivery_on_monday", EmitDefaultValue=false)]
        public bool? DeliveryOnMonday { get; set; }
        /// <summary>
        /// Gets or Sets DeliveryOnSaturday
        /// </summary>
        [DataMember(Name="delivery_on_saturday", EmitDefaultValue=false)]
        public bool? DeliveryOnSaturday { get; set; }
        /// <summary>
        /// Gets or Sets DeliveryOnSunday
        /// </summary>
        [DataMember(Name="delivery_on_sunday", EmitDefaultValue=false)]
        public bool? DeliveryOnSunday { get; set; }
        /// <summary>
        /// Gets or Sets DeliveryOnThursday
        /// </summary>
        [DataMember(Name="delivery_on_thursday", EmitDefaultValue=false)]
        public bool? DeliveryOnThursday { get; set; }
        /// <summary>
        /// Gets or Sets DeliveryOnTuesday
        /// </summary>
        [DataMember(Name="delivery_on_tuesday", EmitDefaultValue=false)]
        public bool? DeliveryOnTuesday { get; set; }
        /// <summary>
        /// Gets or Sets DeliveryOnWednesday
        /// </summary>
        [DataMember(Name="delivery_on_wednesday", EmitDefaultValue=false)]
        public bool? DeliveryOnWednesday { get; set; }
        /// <summary>
        /// Gets or Sets DestinationMarkups
        /// </summary>
        [DataMember(Name="destination_markups", EmitDefaultValue=false)]
        public List<ItemShippingDestinationMarkup> DestinationMarkups { get; set; }
        /// <summary>
        /// Gets or Sets DestinationRestrictions
        /// </summary>
        [DataMember(Name="destination_restrictions", EmitDefaultValue=false)]
        public List<ItemShippingDestinationRestriction> DestinationRestrictions { get; set; }
        /// <summary>
        /// Gets or Sets DistributionCenters
        /// </summary>
        [DataMember(Name="distribution_centers", EmitDefaultValue=false)]
        public List<ItemShippingDistributionCenter> DistributionCenters { get; set; }
        /// <summary>
        /// Gets or Sets Eta
        /// </summary>
        [DataMember(Name="eta", EmitDefaultValue=false)]
        public string Eta { get; set; }
        /// <summary>
        /// Gets or Sets FreeShipping
        /// </summary>
        [DataMember(Name="free_shipping", EmitDefaultValue=false)]
        public bool? FreeShipping { get; set; }
        /// <summary>
        /// Gets or Sets FreightClass
        /// </summary>
        [DataMember(Name="freight_class", EmitDefaultValue=false)]
        public string FreightClass { get; set; }
        /// <summary>
        /// Gets or Sets Hazmat
        /// </summary>
        [DataMember(Name="hazmat", EmitDefaultValue=false)]
        public bool? Hazmat { get; set; }
        /// <summary>
        /// Gets or Sets MadeToOrder
        /// </summary>
        [DataMember(Name="made_to_order", EmitDefaultValue=false)]
        public bool? MadeToOrder { get; set; }
        /// <summary>
        /// Gets or Sets MadeToOrderLeadTime
        /// </summary>
        [DataMember(Name="made_to_order_lead_time", EmitDefaultValue=false)]
        public int? MadeToOrderLeadTime { get; set; }
        /// <summary>
        /// Gets or Sets MaxDaysTimeInTransit
        /// </summary>
        [DataMember(Name="max_days_time_in_transit", EmitDefaultValue=false)]
        public int? MaxDaysTimeInTransit { get; set; }
        /// <summary>
        /// Gets or Sets Methods
        /// </summary>
        [DataMember(Name="methods", EmitDefaultValue=false)]
        public List<ItemShippingMethod> Methods { get; set; }
        /// <summary>
        /// Gets or Sets NoShippingDiscount
        /// </summary>
        [DataMember(Name="no_shipping_discount", EmitDefaultValue=false)]
        public bool? NoShippingDiscount { get; set; }
        /// <summary>
        /// Gets or Sets PackageRequirements
        /// </summary>
        [DataMember(Name="package_requirements", EmitDefaultValue=false)]
        public List<ItemShippingPackageRequirement> PackageRequirements { get; set; }
        /// <summary>
        /// Gets or Sets PerishableClassOid
        /// </summary>
        [DataMember(Name="perishable_class_oid", EmitDefaultValue=false)]
        public int? PerishableClassOid { get; set; }
        /// <summary>
        /// Gets or Sets Preorder
        /// </summary>
        [DataMember(Name="preorder", EmitDefaultValue=false)]
        public bool? Preorder { get; set; }
        /// <summary>
        /// Gets or Sets RequireDeliveryDate
        /// </summary>
        [DataMember(Name="require_delivery_date", EmitDefaultValue=false)]
        public bool? RequireDeliveryDate { get; set; }
        /// <summary>
        /// Gets or Sets RestrictShipmentOnFriday
        /// </summary>
        [DataMember(Name="restrict_shipment_on_friday", EmitDefaultValue=false)]
        public bool? RestrictShipmentOnFriday { get; set; }
        /// <summary>
        /// Gets or Sets RestrictShipmentOnMonday
        /// </summary>
        [DataMember(Name="restrict_shipment_on_monday", EmitDefaultValue=false)]
        public bool? RestrictShipmentOnMonday { get; set; }
        /// <summary>
        /// Gets or Sets RestrictShipmentOnSaturday
        /// </summary>
        [DataMember(Name="restrict_shipment_on_saturday", EmitDefaultValue=false)]
        public bool? RestrictShipmentOnSaturday { get; set; }
        /// <summary>
        /// Gets or Sets RestrictShipmentOnSunday
        /// </summary>
        [DataMember(Name="restrict_shipment_on_sunday", EmitDefaultValue=false)]
        public bool? RestrictShipmentOnSunday { get; set; }
        /// <summary>
        /// Gets or Sets RestrictShipmentOnThursday
        /// </summary>
        [DataMember(Name="restrict_shipment_on_thursday", EmitDefaultValue=false)]
        public bool? RestrictShipmentOnThursday { get; set; }
        /// <summary>
        /// Gets or Sets RestrictShipmentOnTuesday
        /// </summary>
        [DataMember(Name="restrict_shipment_on_tuesday", EmitDefaultValue=false)]
        public bool? RestrictShipmentOnTuesday { get; set; }
        /// <summary>
        /// Gets or Sets RestrictShipmentOnWednesday
        /// </summary>
        [DataMember(Name="restrict_shipment_on_wednesday", EmitDefaultValue=false)]
        public bool? RestrictShipmentOnWednesday { get; set; }
        /// <summary>
        /// Gets or Sets ShipSeparately
        /// </summary>
        [DataMember(Name="ship_separately", EmitDefaultValue=false)]
        public bool? ShipSeparately { get; set; }
        /// <summary>
        /// Gets or Sets ShipSeparatelyAdditionalWeight
        /// </summary>
        [DataMember(Name="ship_separately_additional_weight", EmitDefaultValue=false)]
        public Weight ShipSeparatelyAdditionalWeight { get; set; }
        /// <summary>
        /// Gets or Sets ShipSeparatelyHeight
        /// </summary>
        [DataMember(Name="ship_separately_height", EmitDefaultValue=false)]
        public Distance ShipSeparatelyHeight { get; set; }
        /// <summary>
        /// Gets or Sets ShipSeparatelyLength
        /// </summary>
        [DataMember(Name="ship_separately_length", EmitDefaultValue=false)]
        public Distance ShipSeparatelyLength { get; set; }
        /// <summary>
        /// Gets or Sets ShipSeparatelyPackageSpecialType
        /// </summary>
        [DataMember(Name="ship_separately_package_special_type", EmitDefaultValue=false)]
        public string ShipSeparatelyPackageSpecialType { get; set; }
        /// <summary>
        /// Gets or Sets ShipSeparatelyWidth
        /// </summary>
        [DataMember(Name="ship_separately_width", EmitDefaultValue=false)]
        public Distance ShipSeparatelyWidth { get; set; }
        /// <summary>
        /// Gets or Sets SpecialProductType
        /// </summary>
        [DataMember(Name="special_product_type", EmitDefaultValue=false)]
        public string SpecialProductType { get; set; }
        /// <summary>
        /// Gets or Sets TrackInventory
        /// </summary>
        [DataMember(Name="track_inventory", EmitDefaultValue=false)]
        public bool? TrackInventory { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemShipping {\n");
            sb.Append("  AllowBackOrder: ").Append(AllowBackOrder).Append("\n");
            sb.Append("  AmazonFba: ").Append(AmazonFba).Append("\n");
            sb.Append("  CaseInnerPacks: ").Append(CaseInnerPacks).Append("\n");
            sb.Append("  CaseUnits: ").Append(CaseUnits).Append("\n");
            sb.Append("  Cases: ").Append(Cases).Append("\n");
            sb.Append("  CountryOfOrigin: ").Append(CountryOfOrigin).Append("\n");
            sb.Append("  CustomsDescription: ").Append(CustomsDescription).Append("\n");
            sb.Append("  CustomsValue: ").Append(CustomsValue).Append("\n");
            sb.Append("  DeliveryOnFriday: ").Append(DeliveryOnFriday).Append("\n");
            sb.Append("  DeliveryOnMonday: ").Append(DeliveryOnMonday).Append("\n");
            sb.Append("  DeliveryOnSaturday: ").Append(DeliveryOnSaturday).Append("\n");
            sb.Append("  DeliveryOnSunday: ").Append(DeliveryOnSunday).Append("\n");
            sb.Append("  DeliveryOnThursday: ").Append(DeliveryOnThursday).Append("\n");
            sb.Append("  DeliveryOnTuesday: ").Append(DeliveryOnTuesday).Append("\n");
            sb.Append("  DeliveryOnWednesday: ").Append(DeliveryOnWednesday).Append("\n");
            sb.Append("  DestinationMarkups: ").Append(DestinationMarkups).Append("\n");
            sb.Append("  DestinationRestrictions: ").Append(DestinationRestrictions).Append("\n");
            sb.Append("  DistributionCenters: ").Append(DistributionCenters).Append("\n");
            sb.Append("  Eta: ").Append(Eta).Append("\n");
            sb.Append("  FreeShipping: ").Append(FreeShipping).Append("\n");
            sb.Append("  FreightClass: ").Append(FreightClass).Append("\n");
            sb.Append("  Hazmat: ").Append(Hazmat).Append("\n");
            sb.Append("  MadeToOrder: ").Append(MadeToOrder).Append("\n");
            sb.Append("  MadeToOrderLeadTime: ").Append(MadeToOrderLeadTime).Append("\n");
            sb.Append("  MaxDaysTimeInTransit: ").Append(MaxDaysTimeInTransit).Append("\n");
            sb.Append("  Methods: ").Append(Methods).Append("\n");
            sb.Append("  NoShippingDiscount: ").Append(NoShippingDiscount).Append("\n");
            sb.Append("  PackageRequirements: ").Append(PackageRequirements).Append("\n");
            sb.Append("  PerishableClassOid: ").Append(PerishableClassOid).Append("\n");
            sb.Append("  Preorder: ").Append(Preorder).Append("\n");
            sb.Append("  RequireDeliveryDate: ").Append(RequireDeliveryDate).Append("\n");
            sb.Append("  RestrictShipmentOnFriday: ").Append(RestrictShipmentOnFriday).Append("\n");
            sb.Append("  RestrictShipmentOnMonday: ").Append(RestrictShipmentOnMonday).Append("\n");
            sb.Append("  RestrictShipmentOnSaturday: ").Append(RestrictShipmentOnSaturday).Append("\n");
            sb.Append("  RestrictShipmentOnSunday: ").Append(RestrictShipmentOnSunday).Append("\n");
            sb.Append("  RestrictShipmentOnThursday: ").Append(RestrictShipmentOnThursday).Append("\n");
            sb.Append("  RestrictShipmentOnTuesday: ").Append(RestrictShipmentOnTuesday).Append("\n");
            sb.Append("  RestrictShipmentOnWednesday: ").Append(RestrictShipmentOnWednesday).Append("\n");
            sb.Append("  ShipSeparately: ").Append(ShipSeparately).Append("\n");
            sb.Append("  ShipSeparatelyAdditionalWeight: ").Append(ShipSeparatelyAdditionalWeight).Append("\n");
            sb.Append("  ShipSeparatelyHeight: ").Append(ShipSeparatelyHeight).Append("\n");
            sb.Append("  ShipSeparatelyLength: ").Append(ShipSeparatelyLength).Append("\n");
            sb.Append("  ShipSeparatelyPackageSpecialType: ").Append(ShipSeparatelyPackageSpecialType).Append("\n");
            sb.Append("  ShipSeparatelyWidth: ").Append(ShipSeparatelyWidth).Append("\n");
            sb.Append("  SpecialProductType: ").Append(SpecialProductType).Append("\n");
            sb.Append("  TrackInventory: ").Append(TrackInventory).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ItemShipping);
        }

        /// <summary>
        /// Returns true if ItemShipping instances are equal
        /// </summary>
        /// <param name="other">Instance of ItemShipping to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemShipping other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AllowBackOrder == other.AllowBackOrder ||
                    this.AllowBackOrder != null &&
                    this.AllowBackOrder.Equals(other.AllowBackOrder)
                ) && 
                (
                    this.AmazonFba == other.AmazonFba ||
                    this.AmazonFba != null &&
                    this.AmazonFba.Equals(other.AmazonFba)
                ) && 
                (
                    this.CaseInnerPacks == other.CaseInnerPacks ||
                    this.CaseInnerPacks != null &&
                    this.CaseInnerPacks.Equals(other.CaseInnerPacks)
                ) && 
                (
                    this.CaseUnits == other.CaseUnits ||
                    this.CaseUnits != null &&
                    this.CaseUnits.Equals(other.CaseUnits)
                ) && 
                (
                    this.Cases == other.Cases ||
                    this.Cases != null &&
                    this.Cases.SequenceEqual(other.Cases)
                ) && 
                (
                    this.CountryOfOrigin == other.CountryOfOrigin ||
                    this.CountryOfOrigin != null &&
                    this.CountryOfOrigin.Equals(other.CountryOfOrigin)
                ) && 
                (
                    this.CustomsDescription == other.CustomsDescription ||
                    this.CustomsDescription != null &&
                    this.CustomsDescription.Equals(other.CustomsDescription)
                ) && 
                (
                    this.CustomsValue == other.CustomsValue ||
                    this.CustomsValue != null &&
                    this.CustomsValue.Equals(other.CustomsValue)
                ) && 
                (
                    this.DeliveryOnFriday == other.DeliveryOnFriday ||
                    this.DeliveryOnFriday != null &&
                    this.DeliveryOnFriday.Equals(other.DeliveryOnFriday)
                ) && 
                (
                    this.DeliveryOnMonday == other.DeliveryOnMonday ||
                    this.DeliveryOnMonday != null &&
                    this.DeliveryOnMonday.Equals(other.DeliveryOnMonday)
                ) && 
                (
                    this.DeliveryOnSaturday == other.DeliveryOnSaturday ||
                    this.DeliveryOnSaturday != null &&
                    this.DeliveryOnSaturday.Equals(other.DeliveryOnSaturday)
                ) && 
                (
                    this.DeliveryOnSunday == other.DeliveryOnSunday ||
                    this.DeliveryOnSunday != null &&
                    this.DeliveryOnSunday.Equals(other.DeliveryOnSunday)
                ) && 
                (
                    this.DeliveryOnThursday == other.DeliveryOnThursday ||
                    this.DeliveryOnThursday != null &&
                    this.DeliveryOnThursday.Equals(other.DeliveryOnThursday)
                ) && 
                (
                    this.DeliveryOnTuesday == other.DeliveryOnTuesday ||
                    this.DeliveryOnTuesday != null &&
                    this.DeliveryOnTuesday.Equals(other.DeliveryOnTuesday)
                ) && 
                (
                    this.DeliveryOnWednesday == other.DeliveryOnWednesday ||
                    this.DeliveryOnWednesday != null &&
                    this.DeliveryOnWednesday.Equals(other.DeliveryOnWednesday)
                ) && 
                (
                    this.DestinationMarkups == other.DestinationMarkups ||
                    this.DestinationMarkups != null &&
                    this.DestinationMarkups.SequenceEqual(other.DestinationMarkups)
                ) && 
                (
                    this.DestinationRestrictions == other.DestinationRestrictions ||
                    this.DestinationRestrictions != null &&
                    this.DestinationRestrictions.SequenceEqual(other.DestinationRestrictions)
                ) && 
                (
                    this.DistributionCenters == other.DistributionCenters ||
                    this.DistributionCenters != null &&
                    this.DistributionCenters.SequenceEqual(other.DistributionCenters)
                ) && 
                (
                    this.Eta == other.Eta ||
                    this.Eta != null &&
                    this.Eta.Equals(other.Eta)
                ) && 
                (
                    this.FreeShipping == other.FreeShipping ||
                    this.FreeShipping != null &&
                    this.FreeShipping.Equals(other.FreeShipping)
                ) && 
                (
                    this.FreightClass == other.FreightClass ||
                    this.FreightClass != null &&
                    this.FreightClass.Equals(other.FreightClass)
                ) && 
                (
                    this.Hazmat == other.Hazmat ||
                    this.Hazmat != null &&
                    this.Hazmat.Equals(other.Hazmat)
                ) && 
                (
                    this.MadeToOrder == other.MadeToOrder ||
                    this.MadeToOrder != null &&
                    this.MadeToOrder.Equals(other.MadeToOrder)
                ) && 
                (
                    this.MadeToOrderLeadTime == other.MadeToOrderLeadTime ||
                    this.MadeToOrderLeadTime != null &&
                    this.MadeToOrderLeadTime.Equals(other.MadeToOrderLeadTime)
                ) && 
                (
                    this.MaxDaysTimeInTransit == other.MaxDaysTimeInTransit ||
                    this.MaxDaysTimeInTransit != null &&
                    this.MaxDaysTimeInTransit.Equals(other.MaxDaysTimeInTransit)
                ) && 
                (
                    this.Methods == other.Methods ||
                    this.Methods != null &&
                    this.Methods.SequenceEqual(other.Methods)
                ) && 
                (
                    this.NoShippingDiscount == other.NoShippingDiscount ||
                    this.NoShippingDiscount != null &&
                    this.NoShippingDiscount.Equals(other.NoShippingDiscount)
                ) && 
                (
                    this.PackageRequirements == other.PackageRequirements ||
                    this.PackageRequirements != null &&
                    this.PackageRequirements.SequenceEqual(other.PackageRequirements)
                ) && 
                (
                    this.PerishableClassOid == other.PerishableClassOid ||
                    this.PerishableClassOid != null &&
                    this.PerishableClassOid.Equals(other.PerishableClassOid)
                ) && 
                (
                    this.Preorder == other.Preorder ||
                    this.Preorder != null &&
                    this.Preorder.Equals(other.Preorder)
                ) && 
                (
                    this.RequireDeliveryDate == other.RequireDeliveryDate ||
                    this.RequireDeliveryDate != null &&
                    this.RequireDeliveryDate.Equals(other.RequireDeliveryDate)
                ) && 
                (
                    this.RestrictShipmentOnFriday == other.RestrictShipmentOnFriday ||
                    this.RestrictShipmentOnFriday != null &&
                    this.RestrictShipmentOnFriday.Equals(other.RestrictShipmentOnFriday)
                ) && 
                (
                    this.RestrictShipmentOnMonday == other.RestrictShipmentOnMonday ||
                    this.RestrictShipmentOnMonday != null &&
                    this.RestrictShipmentOnMonday.Equals(other.RestrictShipmentOnMonday)
                ) && 
                (
                    this.RestrictShipmentOnSaturday == other.RestrictShipmentOnSaturday ||
                    this.RestrictShipmentOnSaturday != null &&
                    this.RestrictShipmentOnSaturday.Equals(other.RestrictShipmentOnSaturday)
                ) && 
                (
                    this.RestrictShipmentOnSunday == other.RestrictShipmentOnSunday ||
                    this.RestrictShipmentOnSunday != null &&
                    this.RestrictShipmentOnSunday.Equals(other.RestrictShipmentOnSunday)
                ) && 
                (
                    this.RestrictShipmentOnThursday == other.RestrictShipmentOnThursday ||
                    this.RestrictShipmentOnThursday != null &&
                    this.RestrictShipmentOnThursday.Equals(other.RestrictShipmentOnThursday)
                ) && 
                (
                    this.RestrictShipmentOnTuesday == other.RestrictShipmentOnTuesday ||
                    this.RestrictShipmentOnTuesday != null &&
                    this.RestrictShipmentOnTuesday.Equals(other.RestrictShipmentOnTuesday)
                ) && 
                (
                    this.RestrictShipmentOnWednesday == other.RestrictShipmentOnWednesday ||
                    this.RestrictShipmentOnWednesday != null &&
                    this.RestrictShipmentOnWednesday.Equals(other.RestrictShipmentOnWednesday)
                ) && 
                (
                    this.ShipSeparately == other.ShipSeparately ||
                    this.ShipSeparately != null &&
                    this.ShipSeparately.Equals(other.ShipSeparately)
                ) && 
                (
                    this.ShipSeparatelyAdditionalWeight == other.ShipSeparatelyAdditionalWeight ||
                    this.ShipSeparatelyAdditionalWeight != null &&
                    this.ShipSeparatelyAdditionalWeight.Equals(other.ShipSeparatelyAdditionalWeight)
                ) && 
                (
                    this.ShipSeparatelyHeight == other.ShipSeparatelyHeight ||
                    this.ShipSeparatelyHeight != null &&
                    this.ShipSeparatelyHeight.Equals(other.ShipSeparatelyHeight)
                ) && 
                (
                    this.ShipSeparatelyLength == other.ShipSeparatelyLength ||
                    this.ShipSeparatelyLength != null &&
                    this.ShipSeparatelyLength.Equals(other.ShipSeparatelyLength)
                ) && 
                (
                    this.ShipSeparatelyPackageSpecialType == other.ShipSeparatelyPackageSpecialType ||
                    this.ShipSeparatelyPackageSpecialType != null &&
                    this.ShipSeparatelyPackageSpecialType.Equals(other.ShipSeparatelyPackageSpecialType)
                ) && 
                (
                    this.ShipSeparatelyWidth == other.ShipSeparatelyWidth ||
                    this.ShipSeparatelyWidth != null &&
                    this.ShipSeparatelyWidth.Equals(other.ShipSeparatelyWidth)
                ) && 
                (
                    this.SpecialProductType == other.SpecialProductType ||
                    this.SpecialProductType != null &&
                    this.SpecialProductType.Equals(other.SpecialProductType)
                ) && 
                (
                    this.TrackInventory == other.TrackInventory ||
                    this.TrackInventory != null &&
                    this.TrackInventory.Equals(other.TrackInventory)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AllowBackOrder != null)
                    hash = hash * 59 + this.AllowBackOrder.GetHashCode();
                if (this.AmazonFba != null)
                    hash = hash * 59 + this.AmazonFba.GetHashCode();
                if (this.CaseInnerPacks != null)
                    hash = hash * 59 + this.CaseInnerPacks.GetHashCode();
                if (this.CaseUnits != null)
                    hash = hash * 59 + this.CaseUnits.GetHashCode();
                if (this.Cases != null)
                    hash = hash * 59 + this.Cases.GetHashCode();
                if (this.CountryOfOrigin != null)
                    hash = hash * 59 + this.CountryOfOrigin.GetHashCode();
                if (this.CustomsDescription != null)
                    hash = hash * 59 + this.CustomsDescription.GetHashCode();
                if (this.CustomsValue != null)
                    hash = hash * 59 + this.CustomsValue.GetHashCode();
                if (this.DeliveryOnFriday != null)
                    hash = hash * 59 + this.DeliveryOnFriday.GetHashCode();
                if (this.DeliveryOnMonday != null)
                    hash = hash * 59 + this.DeliveryOnMonday.GetHashCode();
                if (this.DeliveryOnSaturday != null)
                    hash = hash * 59 + this.DeliveryOnSaturday.GetHashCode();
                if (this.DeliveryOnSunday != null)
                    hash = hash * 59 + this.DeliveryOnSunday.GetHashCode();
                if (this.DeliveryOnThursday != null)
                    hash = hash * 59 + this.DeliveryOnThursday.GetHashCode();
                if (this.DeliveryOnTuesday != null)
                    hash = hash * 59 + this.DeliveryOnTuesday.GetHashCode();
                if (this.DeliveryOnWednesday != null)
                    hash = hash * 59 + this.DeliveryOnWednesday.GetHashCode();
                if (this.DestinationMarkups != null)
                    hash = hash * 59 + this.DestinationMarkups.GetHashCode();
                if (this.DestinationRestrictions != null)
                    hash = hash * 59 + this.DestinationRestrictions.GetHashCode();
                if (this.DistributionCenters != null)
                    hash = hash * 59 + this.DistributionCenters.GetHashCode();
                if (this.Eta != null)
                    hash = hash * 59 + this.Eta.GetHashCode();
                if (this.FreeShipping != null)
                    hash = hash * 59 + this.FreeShipping.GetHashCode();
                if (this.FreightClass != null)
                    hash = hash * 59 + this.FreightClass.GetHashCode();
                if (this.Hazmat != null)
                    hash = hash * 59 + this.Hazmat.GetHashCode();
                if (this.MadeToOrder != null)
                    hash = hash * 59 + this.MadeToOrder.GetHashCode();
                if (this.MadeToOrderLeadTime != null)
                    hash = hash * 59 + this.MadeToOrderLeadTime.GetHashCode();
                if (this.MaxDaysTimeInTransit != null)
                    hash = hash * 59 + this.MaxDaysTimeInTransit.GetHashCode();
                if (this.Methods != null)
                    hash = hash * 59 + this.Methods.GetHashCode();
                if (this.NoShippingDiscount != null)
                    hash = hash * 59 + this.NoShippingDiscount.GetHashCode();
                if (this.PackageRequirements != null)
                    hash = hash * 59 + this.PackageRequirements.GetHashCode();
                if (this.PerishableClassOid != null)
                    hash = hash * 59 + this.PerishableClassOid.GetHashCode();
                if (this.Preorder != null)
                    hash = hash * 59 + this.Preorder.GetHashCode();
                if (this.RequireDeliveryDate != null)
                    hash = hash * 59 + this.RequireDeliveryDate.GetHashCode();
                if (this.RestrictShipmentOnFriday != null)
                    hash = hash * 59 + this.RestrictShipmentOnFriday.GetHashCode();
                if (this.RestrictShipmentOnMonday != null)
                    hash = hash * 59 + this.RestrictShipmentOnMonday.GetHashCode();
                if (this.RestrictShipmentOnSaturday != null)
                    hash = hash * 59 + this.RestrictShipmentOnSaturday.GetHashCode();
                if (this.RestrictShipmentOnSunday != null)
                    hash = hash * 59 + this.RestrictShipmentOnSunday.GetHashCode();
                if (this.RestrictShipmentOnThursday != null)
                    hash = hash * 59 + this.RestrictShipmentOnThursday.GetHashCode();
                if (this.RestrictShipmentOnTuesday != null)
                    hash = hash * 59 + this.RestrictShipmentOnTuesday.GetHashCode();
                if (this.RestrictShipmentOnWednesday != null)
                    hash = hash * 59 + this.RestrictShipmentOnWednesday.GetHashCode();
                if (this.ShipSeparately != null)
                    hash = hash * 59 + this.ShipSeparately.GetHashCode();
                if (this.ShipSeparatelyAdditionalWeight != null)
                    hash = hash * 59 + this.ShipSeparatelyAdditionalWeight.GetHashCode();
                if (this.ShipSeparatelyHeight != null)
                    hash = hash * 59 + this.ShipSeparatelyHeight.GetHashCode();
                if (this.ShipSeparatelyLength != null)
                    hash = hash * 59 + this.ShipSeparatelyLength.GetHashCode();
                if (this.ShipSeparatelyPackageSpecialType != null)
                    hash = hash * 59 + this.ShipSeparatelyPackageSpecialType.GetHashCode();
                if (this.ShipSeparatelyWidth != null)
                    hash = hash * 59 + this.ShipSeparatelyWidth.GetHashCode();
                if (this.SpecialProductType != null)
                    hash = hash * 59 + this.SpecialProductType.GetHashCode();
                if (this.TrackInventory != null)
                    hash = hash * 59 + this.TrackInventory.GetHashCode();
                return hash;
            }
        }
    }

}
