/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// OrderTrackingNumberDetails
    /// </summary>
    [DataContract]
    public partial class OrderTrackingNumberDetails :  IEquatable<OrderTrackingNumberDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderTrackingNumberDetails" /> class.
        /// </summary>
        /// <param name="actualDeliveryDate">actualDeliveryDate.</param>
        /// <param name="actualDeliveryDateFormatted">actualDeliveryDateFormatted.</param>
        /// <param name="details">details.</param>
        /// <param name="easypostTrackerId">easypostTrackerId.</param>
        /// <param name="expectedDeliveryDate">expectedDeliveryDate.</param>
        /// <param name="expectedDeliveryDateFormatted">expectedDeliveryDateFormatted.</param>
        /// <param name="mapUrl">mapUrl.</param>
        /// <param name="orderPlacedDate">orderPlacedDate.</param>
        /// <param name="orderPlacedDateFormatted">orderPlacedDateFormatted.</param>
        /// <param name="paymentProcessedDate">paymentProcessedDate.</param>
        /// <param name="paymentProcessedDateFormatted">paymentProcessedDateFormatted.</param>
        /// <param name="shippedDate">shippedDate.</param>
        /// <param name="shippedDateFormatted">shippedDateFormatted.</param>
        /// <param name="shippingMethod">shippingMethod.</param>
        /// <param name="status">status.</param>
        /// <param name="statusDescription">statusDescription.</param>
        /// <param name="trackingNumber">trackingNumber.</param>
        /// <param name="trackingUrl">trackingUrl.</param>
        public OrderTrackingNumberDetails(string actualDeliveryDate = default(string), string actualDeliveryDateFormatted = default(string), List<OrderTrackingNumberDetail> details = default(List<OrderTrackingNumberDetail>), string easypostTrackerId = default(string), string expectedDeliveryDate = default(string), string expectedDeliveryDateFormatted = default(string), string mapUrl = default(string), string orderPlacedDate = default(string), string orderPlacedDateFormatted = default(string), string paymentProcessedDate = default(string), string paymentProcessedDateFormatted = default(string), string shippedDate = default(string), string shippedDateFormatted = default(string), string shippingMethod = default(string), string status = default(string), string statusDescription = default(string), string trackingNumber = default(string), string trackingUrl = default(string))
        {
            this.ActualDeliveryDate = actualDeliveryDate;
            this.ActualDeliveryDateFormatted = actualDeliveryDateFormatted;
            this.Details = details;
            this.EasypostTrackerId = easypostTrackerId;
            this.ExpectedDeliveryDate = expectedDeliveryDate;
            this.ExpectedDeliveryDateFormatted = expectedDeliveryDateFormatted;
            this.MapUrl = mapUrl;
            this.OrderPlacedDate = orderPlacedDate;
            this.OrderPlacedDateFormatted = orderPlacedDateFormatted;
            this.PaymentProcessedDate = paymentProcessedDate;
            this.PaymentProcessedDateFormatted = paymentProcessedDateFormatted;
            this.ShippedDate = shippedDate;
            this.ShippedDateFormatted = shippedDateFormatted;
            this.ShippingMethod = shippingMethod;
            this.Status = status;
            this.StatusDescription = statusDescription;
            this.TrackingNumber = trackingNumber;
            this.TrackingUrl = trackingUrl;
        }
        
        /// <summary>
        /// Gets or Sets ActualDeliveryDate
        /// </summary>
        [DataMember(Name="actual_delivery_date", EmitDefaultValue=false)]
        public string ActualDeliveryDate { get; set; }

        /// <summary>
        /// Gets or Sets ActualDeliveryDateFormatted
        /// </summary>
        [DataMember(Name="actual_delivery_date_formatted", EmitDefaultValue=false)]
        public string ActualDeliveryDateFormatted { get; set; }

        /// <summary>
        /// Gets or Sets Details
        /// </summary>
        [DataMember(Name="details", EmitDefaultValue=false)]
        public List<OrderTrackingNumberDetail> Details { get; set; }

        /// <summary>
        /// Gets or Sets EasypostTrackerId
        /// </summary>
        [DataMember(Name="easypost_tracker_id", EmitDefaultValue=false)]
        public string EasypostTrackerId { get; set; }

        /// <summary>
        /// Gets or Sets ExpectedDeliveryDate
        /// </summary>
        [DataMember(Name="expected_delivery_date", EmitDefaultValue=false)]
        public string ExpectedDeliveryDate { get; set; }

        /// <summary>
        /// Gets or Sets ExpectedDeliveryDateFormatted
        /// </summary>
        [DataMember(Name="expected_delivery_date_formatted", EmitDefaultValue=false)]
        public string ExpectedDeliveryDateFormatted { get; set; }

        /// <summary>
        /// Gets or Sets MapUrl
        /// </summary>
        [DataMember(Name="map_url", EmitDefaultValue=false)]
        public string MapUrl { get; set; }

        /// <summary>
        /// Gets or Sets OrderPlacedDate
        /// </summary>
        [DataMember(Name="order_placed_date", EmitDefaultValue=false)]
        public string OrderPlacedDate { get; set; }

        /// <summary>
        /// Gets or Sets OrderPlacedDateFormatted
        /// </summary>
        [DataMember(Name="order_placed_date_formatted", EmitDefaultValue=false)]
        public string OrderPlacedDateFormatted { get; set; }

        /// <summary>
        /// Gets or Sets PaymentProcessedDate
        /// </summary>
        [DataMember(Name="payment_processed_date", EmitDefaultValue=false)]
        public string PaymentProcessedDate { get; set; }

        /// <summary>
        /// Gets or Sets PaymentProcessedDateFormatted
        /// </summary>
        [DataMember(Name="payment_processed_date_formatted", EmitDefaultValue=false)]
        public string PaymentProcessedDateFormatted { get; set; }

        /// <summary>
        /// Gets or Sets ShippedDate
        /// </summary>
        [DataMember(Name="shipped_date", EmitDefaultValue=false)]
        public string ShippedDate { get; set; }

        /// <summary>
        /// Gets or Sets ShippedDateFormatted
        /// </summary>
        [DataMember(Name="shipped_date_formatted", EmitDefaultValue=false)]
        public string ShippedDateFormatted { get; set; }

        /// <summary>
        /// Gets or Sets ShippingMethod
        /// </summary>
        [DataMember(Name="shipping_method", EmitDefaultValue=false)]
        public string ShippingMethod { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets StatusDescription
        /// </summary>
        [DataMember(Name="status_description", EmitDefaultValue=false)]
        public string StatusDescription { get; set; }

        /// <summary>
        /// Gets or Sets TrackingNumber
        /// </summary>
        [DataMember(Name="tracking_number", EmitDefaultValue=false)]
        public string TrackingNumber { get; set; }

        /// <summary>
        /// Gets or Sets TrackingUrl
        /// </summary>
        [DataMember(Name="tracking_url", EmitDefaultValue=false)]
        public string TrackingUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderTrackingNumberDetails {\n");
            sb.Append("  ActualDeliveryDate: ").Append(ActualDeliveryDate).Append("\n");
            sb.Append("  ActualDeliveryDateFormatted: ").Append(ActualDeliveryDateFormatted).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  EasypostTrackerId: ").Append(EasypostTrackerId).Append("\n");
            sb.Append("  ExpectedDeliveryDate: ").Append(ExpectedDeliveryDate).Append("\n");
            sb.Append("  ExpectedDeliveryDateFormatted: ").Append(ExpectedDeliveryDateFormatted).Append("\n");
            sb.Append("  MapUrl: ").Append(MapUrl).Append("\n");
            sb.Append("  OrderPlacedDate: ").Append(OrderPlacedDate).Append("\n");
            sb.Append("  OrderPlacedDateFormatted: ").Append(OrderPlacedDateFormatted).Append("\n");
            sb.Append("  PaymentProcessedDate: ").Append(PaymentProcessedDate).Append("\n");
            sb.Append("  PaymentProcessedDateFormatted: ").Append(PaymentProcessedDateFormatted).Append("\n");
            sb.Append("  ShippedDate: ").Append(ShippedDate).Append("\n");
            sb.Append("  ShippedDateFormatted: ").Append(ShippedDateFormatted).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusDescription: ").Append(StatusDescription).Append("\n");
            sb.Append("  TrackingNumber: ").Append(TrackingNumber).Append("\n");
            sb.Append("  TrackingUrl: ").Append(TrackingUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderTrackingNumberDetails);
        }

        /// <summary>
        /// Returns true if OrderTrackingNumberDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderTrackingNumberDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderTrackingNumberDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ActualDeliveryDate == input.ActualDeliveryDate ||
                    (this.ActualDeliveryDate != null &&
                    this.ActualDeliveryDate.Equals(input.ActualDeliveryDate))
                ) && 
                (
                    this.ActualDeliveryDateFormatted == input.ActualDeliveryDateFormatted ||
                    (this.ActualDeliveryDateFormatted != null &&
                    this.ActualDeliveryDateFormatted.Equals(input.ActualDeliveryDateFormatted))
                ) && 
                (
                    this.Details == input.Details ||
                    this.Details != null &&
                    this.Details.SequenceEqual(input.Details)
                ) && 
                (
                    this.EasypostTrackerId == input.EasypostTrackerId ||
                    (this.EasypostTrackerId != null &&
                    this.EasypostTrackerId.Equals(input.EasypostTrackerId))
                ) && 
                (
                    this.ExpectedDeliveryDate == input.ExpectedDeliveryDate ||
                    (this.ExpectedDeliveryDate != null &&
                    this.ExpectedDeliveryDate.Equals(input.ExpectedDeliveryDate))
                ) && 
                (
                    this.ExpectedDeliveryDateFormatted == input.ExpectedDeliveryDateFormatted ||
                    (this.ExpectedDeliveryDateFormatted != null &&
                    this.ExpectedDeliveryDateFormatted.Equals(input.ExpectedDeliveryDateFormatted))
                ) && 
                (
                    this.MapUrl == input.MapUrl ||
                    (this.MapUrl != null &&
                    this.MapUrl.Equals(input.MapUrl))
                ) && 
                (
                    this.OrderPlacedDate == input.OrderPlacedDate ||
                    (this.OrderPlacedDate != null &&
                    this.OrderPlacedDate.Equals(input.OrderPlacedDate))
                ) && 
                (
                    this.OrderPlacedDateFormatted == input.OrderPlacedDateFormatted ||
                    (this.OrderPlacedDateFormatted != null &&
                    this.OrderPlacedDateFormatted.Equals(input.OrderPlacedDateFormatted))
                ) && 
                (
                    this.PaymentProcessedDate == input.PaymentProcessedDate ||
                    (this.PaymentProcessedDate != null &&
                    this.PaymentProcessedDate.Equals(input.PaymentProcessedDate))
                ) && 
                (
                    this.PaymentProcessedDateFormatted == input.PaymentProcessedDateFormatted ||
                    (this.PaymentProcessedDateFormatted != null &&
                    this.PaymentProcessedDateFormatted.Equals(input.PaymentProcessedDateFormatted))
                ) && 
                (
                    this.ShippedDate == input.ShippedDate ||
                    (this.ShippedDate != null &&
                    this.ShippedDate.Equals(input.ShippedDate))
                ) && 
                (
                    this.ShippedDateFormatted == input.ShippedDateFormatted ||
                    (this.ShippedDateFormatted != null &&
                    this.ShippedDateFormatted.Equals(input.ShippedDateFormatted))
                ) && 
                (
                    this.ShippingMethod == input.ShippingMethod ||
                    (this.ShippingMethod != null &&
                    this.ShippingMethod.Equals(input.ShippingMethod))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.StatusDescription == input.StatusDescription ||
                    (this.StatusDescription != null &&
                    this.StatusDescription.Equals(input.StatusDescription))
                ) && 
                (
                    this.TrackingNumber == input.TrackingNumber ||
                    (this.TrackingNumber != null &&
                    this.TrackingNumber.Equals(input.TrackingNumber))
                ) && 
                (
                    this.TrackingUrl == input.TrackingUrl ||
                    (this.TrackingUrl != null &&
                    this.TrackingUrl.Equals(input.TrackingUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActualDeliveryDate != null)
                    hashCode = hashCode * 59 + this.ActualDeliveryDate.GetHashCode();
                if (this.ActualDeliveryDateFormatted != null)
                    hashCode = hashCode * 59 + this.ActualDeliveryDateFormatted.GetHashCode();
                if (this.Details != null)
                    hashCode = hashCode * 59 + this.Details.GetHashCode();
                if (this.EasypostTrackerId != null)
                    hashCode = hashCode * 59 + this.EasypostTrackerId.GetHashCode();
                if (this.ExpectedDeliveryDate != null)
                    hashCode = hashCode * 59 + this.ExpectedDeliveryDate.GetHashCode();
                if (this.ExpectedDeliveryDateFormatted != null)
                    hashCode = hashCode * 59 + this.ExpectedDeliveryDateFormatted.GetHashCode();
                if (this.MapUrl != null)
                    hashCode = hashCode * 59 + this.MapUrl.GetHashCode();
                if (this.OrderPlacedDate != null)
                    hashCode = hashCode * 59 + this.OrderPlacedDate.GetHashCode();
                if (this.OrderPlacedDateFormatted != null)
                    hashCode = hashCode * 59 + this.OrderPlacedDateFormatted.GetHashCode();
                if (this.PaymentProcessedDate != null)
                    hashCode = hashCode * 59 + this.PaymentProcessedDate.GetHashCode();
                if (this.PaymentProcessedDateFormatted != null)
                    hashCode = hashCode * 59 + this.PaymentProcessedDateFormatted.GetHashCode();
                if (this.ShippedDate != null)
                    hashCode = hashCode * 59 + this.ShippedDate.GetHashCode();
                if (this.ShippedDateFormatted != null)
                    hashCode = hashCode * 59 + this.ShippedDateFormatted.GetHashCode();
                if (this.ShippingMethod != null)
                    hashCode = hashCode * 59 + this.ShippingMethod.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StatusDescription != null)
                    hashCode = hashCode * 59 + this.StatusDescription.GetHashCode();
                if (this.TrackingNumber != null)
                    hashCode = hashCode * 59 + this.TrackingNumber.GetHashCode();
                if (this.TrackingUrl != null)
                    hashCode = hashCode * 59 + this.TrackingUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
