/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// PaymentsConfigurationAmazon
    /// </summary>
    [DataContract]
    public partial class PaymentsConfigurationAmazon :  IEquatable<PaymentsConfigurationAmazon>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentsConfigurationAmazon" /> class.
        /// </summary>
        /// <param name="acceptAmazon">acceptAmazon.</param>
        /// <param name="amazonAccessKeyId">amazonAccessKeyId.</param>
        /// <param name="amazonAccountingCode">amazonAccountingCode.</param>
        /// <param name="amazonDepositToAccount">amazonDepositToAccount.</param>
        /// <param name="amazonMerchantId">amazonMerchantId.</param>
        /// <param name="amazonSandbox">amazonSandbox.</param>
        /// <param name="amazonSecretAccessKey">amazonSecretAccessKey.</param>
        /// <param name="restrictions">restrictions.</param>
        public PaymentsConfigurationAmazon(bool? acceptAmazon = default(bool?), string amazonAccessKeyId = default(string), string amazonAccountingCode = default(string), string amazonDepositToAccount = default(string), string amazonMerchantId = default(string), bool? amazonSandbox = default(bool?), string amazonSecretAccessKey = default(string), PaymentsConfigurationRestrictions restrictions = default(PaymentsConfigurationRestrictions))
        {
            this.AcceptAmazon = acceptAmazon;
            this.AmazonAccessKeyId = amazonAccessKeyId;
            this.AmazonAccountingCode = amazonAccountingCode;
            this.AmazonDepositToAccount = amazonDepositToAccount;
            this.AmazonMerchantId = amazonMerchantId;
            this.AmazonSandbox = amazonSandbox;
            this.AmazonSecretAccessKey = amazonSecretAccessKey;
            this.Restrictions = restrictions;
        }
        
        /// <summary>
        /// Gets or Sets AcceptAmazon
        /// </summary>
        [DataMember(Name="acceptAmazon", EmitDefaultValue=false)]
        public bool? AcceptAmazon { get; set; }

        /// <summary>
        /// Gets or Sets AmazonAccessKeyId
        /// </summary>
        [DataMember(Name="amazonAccessKeyId", EmitDefaultValue=false)]
        public string AmazonAccessKeyId { get; set; }

        /// <summary>
        /// Gets or Sets AmazonAccountingCode
        /// </summary>
        [DataMember(Name="amazonAccountingCode", EmitDefaultValue=false)]
        public string AmazonAccountingCode { get; set; }

        /// <summary>
        /// Gets or Sets AmazonDepositToAccount
        /// </summary>
        [DataMember(Name="amazonDepositToAccount", EmitDefaultValue=false)]
        public string AmazonDepositToAccount { get; set; }

        /// <summary>
        /// Gets or Sets AmazonMerchantId
        /// </summary>
        [DataMember(Name="amazonMerchantId", EmitDefaultValue=false)]
        public string AmazonMerchantId { get; set; }

        /// <summary>
        /// Gets or Sets AmazonSandbox
        /// </summary>
        [DataMember(Name="amazonSandbox", EmitDefaultValue=false)]
        public bool? AmazonSandbox { get; set; }

        /// <summary>
        /// Gets or Sets AmazonSecretAccessKey
        /// </summary>
        [DataMember(Name="amazonSecretAccessKey", EmitDefaultValue=false)]
        public string AmazonSecretAccessKey { get; set; }

        /// <summary>
        /// Gets or Sets Restrictions
        /// </summary>
        [DataMember(Name="restrictions", EmitDefaultValue=false)]
        public PaymentsConfigurationRestrictions Restrictions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentsConfigurationAmazon {\n");
            sb.Append("  AcceptAmazon: ").Append(AcceptAmazon).Append("\n");
            sb.Append("  AmazonAccessKeyId: ").Append(AmazonAccessKeyId).Append("\n");
            sb.Append("  AmazonAccountingCode: ").Append(AmazonAccountingCode).Append("\n");
            sb.Append("  AmazonDepositToAccount: ").Append(AmazonDepositToAccount).Append("\n");
            sb.Append("  AmazonMerchantId: ").Append(AmazonMerchantId).Append("\n");
            sb.Append("  AmazonSandbox: ").Append(AmazonSandbox).Append("\n");
            sb.Append("  AmazonSecretAccessKey: ").Append(AmazonSecretAccessKey).Append("\n");
            sb.Append("  Restrictions: ").Append(Restrictions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentsConfigurationAmazon);
        }

        /// <summary>
        /// Returns true if PaymentsConfigurationAmazon instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentsConfigurationAmazon to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentsConfigurationAmazon input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AcceptAmazon == input.AcceptAmazon ||
                    (this.AcceptAmazon != null &&
                    this.AcceptAmazon.Equals(input.AcceptAmazon))
                ) && 
                (
                    this.AmazonAccessKeyId == input.AmazonAccessKeyId ||
                    (this.AmazonAccessKeyId != null &&
                    this.AmazonAccessKeyId.Equals(input.AmazonAccessKeyId))
                ) && 
                (
                    this.AmazonAccountingCode == input.AmazonAccountingCode ||
                    (this.AmazonAccountingCode != null &&
                    this.AmazonAccountingCode.Equals(input.AmazonAccountingCode))
                ) && 
                (
                    this.AmazonDepositToAccount == input.AmazonDepositToAccount ||
                    (this.AmazonDepositToAccount != null &&
                    this.AmazonDepositToAccount.Equals(input.AmazonDepositToAccount))
                ) && 
                (
                    this.AmazonMerchantId == input.AmazonMerchantId ||
                    (this.AmazonMerchantId != null &&
                    this.AmazonMerchantId.Equals(input.AmazonMerchantId))
                ) && 
                (
                    this.AmazonSandbox == input.AmazonSandbox ||
                    (this.AmazonSandbox != null &&
                    this.AmazonSandbox.Equals(input.AmazonSandbox))
                ) && 
                (
                    this.AmazonSecretAccessKey == input.AmazonSecretAccessKey ||
                    (this.AmazonSecretAccessKey != null &&
                    this.AmazonSecretAccessKey.Equals(input.AmazonSecretAccessKey))
                ) && 
                (
                    this.Restrictions == input.Restrictions ||
                    (this.Restrictions != null &&
                    this.Restrictions.Equals(input.Restrictions))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AcceptAmazon != null)
                    hashCode = hashCode * 59 + this.AcceptAmazon.GetHashCode();
                if (this.AmazonAccessKeyId != null)
                    hashCode = hashCode * 59 + this.AmazonAccessKeyId.GetHashCode();
                if (this.AmazonAccountingCode != null)
                    hashCode = hashCode * 59 + this.AmazonAccountingCode.GetHashCode();
                if (this.AmazonDepositToAccount != null)
                    hashCode = hashCode * 59 + this.AmazonDepositToAccount.GetHashCode();
                if (this.AmazonMerchantId != null)
                    hashCode = hashCode * 59 + this.AmazonMerchantId.GetHashCode();
                if (this.AmazonSandbox != null)
                    hashCode = hashCode * 59 + this.AmazonSandbox.GetHashCode();
                if (this.AmazonSecretAccessKey != null)
                    hashCode = hashCode * 59 + this.AmazonSecretAccessKey.GetHashCode();
                if (this.Restrictions != null)
                    hashCode = hashCode * 59 + this.Restrictions.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
