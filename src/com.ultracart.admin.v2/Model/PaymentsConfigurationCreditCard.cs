/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// PaymentsConfigurationCreditCard
    /// </summary>
    [DataContract]
    public partial class PaymentsConfigurationCreditCard :  IEquatable<PaymentsConfigurationCreditCard>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentsConfigurationCreditCard" /> class.
        /// </summary>
        /// <param name="acceptCreditCards">acceptCreditCards.</param>
        /// <param name="billedBy">billedBy.</param>
        /// <param name="chargeDuringCheckout">chargeDuringCheckout.</param>
        /// <param name="collectCvv2">collectCvv2.</param>
        /// <param name="configuredGatewaysDetails">configuredGatewaysDetails.</param>
        /// <param name="failedAttempts">failedAttempts.</param>
        /// <param name="hideConnectSingleGateway">hideConnectSingleGateway.</param>
        /// <param name="immediateFinalizeDomains">immediateFinalizeDomains.</param>
        /// <param name="sendCustomerBillingUpdateOnDecline">sendCustomerBillingUpdateOnDecline.</param>
        public PaymentsConfigurationCreditCard(bool? acceptCreditCards = default(bool?), string billedBy = default(string), bool? chargeDuringCheckout = default(bool?), bool? collectCvv2 = default(bool?), string configuredGatewaysDetails = default(string), string failedAttempts = default(string), bool? hideConnectSingleGateway = default(bool?), string immediateFinalizeDomains = default(string), bool? sendCustomerBillingUpdateOnDecline = default(bool?))
        {
            this.AcceptCreditCards = acceptCreditCards;
            this.BilledBy = billedBy;
            this.ChargeDuringCheckout = chargeDuringCheckout;
            this.CollectCvv2 = collectCvv2;
            this.ConfiguredGatewaysDetails = configuredGatewaysDetails;
            this.FailedAttempts = failedAttempts;
            this.HideConnectSingleGateway = hideConnectSingleGateway;
            this.ImmediateFinalizeDomains = immediateFinalizeDomains;
            this.SendCustomerBillingUpdateOnDecline = sendCustomerBillingUpdateOnDecline;
        }
        
        /// <summary>
        /// Gets or Sets AcceptCreditCards
        /// </summary>
        [DataMember(Name="acceptCreditCards", EmitDefaultValue=false)]
        public bool? AcceptCreditCards { get; set; }

        /// <summary>
        /// Gets or Sets BilledBy
        /// </summary>
        [DataMember(Name="billedBy", EmitDefaultValue=false)]
        public string BilledBy { get; set; }

        /// <summary>
        /// Gets or Sets ChargeDuringCheckout
        /// </summary>
        [DataMember(Name="chargeDuringCheckout", EmitDefaultValue=false)]
        public bool? ChargeDuringCheckout { get; set; }

        /// <summary>
        /// Gets or Sets CollectCvv2
        /// </summary>
        [DataMember(Name="collectCvv2", EmitDefaultValue=false)]
        public bool? CollectCvv2 { get; set; }

        /// <summary>
        /// Gets or Sets ConfiguredGatewaysDetails
        /// </summary>
        [DataMember(Name="configuredGatewaysDetails", EmitDefaultValue=false)]
        public string ConfiguredGatewaysDetails { get; set; }

        /// <summary>
        /// Gets or Sets FailedAttempts
        /// </summary>
        [DataMember(Name="failedAttempts", EmitDefaultValue=false)]
        public string FailedAttempts { get; set; }

        /// <summary>
        /// Gets or Sets HideConnectSingleGateway
        /// </summary>
        [DataMember(Name="hideConnectSingleGateway", EmitDefaultValue=false)]
        public bool? HideConnectSingleGateway { get; set; }

        /// <summary>
        /// Gets or Sets ImmediateFinalizeDomains
        /// </summary>
        [DataMember(Name="immediateFinalizeDomains", EmitDefaultValue=false)]
        public string ImmediateFinalizeDomains { get; set; }

        /// <summary>
        /// Gets or Sets SendCustomerBillingUpdateOnDecline
        /// </summary>
        [DataMember(Name="sendCustomerBillingUpdateOnDecline", EmitDefaultValue=false)]
        public bool? SendCustomerBillingUpdateOnDecline { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentsConfigurationCreditCard {\n");
            sb.Append("  AcceptCreditCards: ").Append(AcceptCreditCards).Append("\n");
            sb.Append("  BilledBy: ").Append(BilledBy).Append("\n");
            sb.Append("  ChargeDuringCheckout: ").Append(ChargeDuringCheckout).Append("\n");
            sb.Append("  CollectCvv2: ").Append(CollectCvv2).Append("\n");
            sb.Append("  ConfiguredGatewaysDetails: ").Append(ConfiguredGatewaysDetails).Append("\n");
            sb.Append("  FailedAttempts: ").Append(FailedAttempts).Append("\n");
            sb.Append("  HideConnectSingleGateway: ").Append(HideConnectSingleGateway).Append("\n");
            sb.Append("  ImmediateFinalizeDomains: ").Append(ImmediateFinalizeDomains).Append("\n");
            sb.Append("  SendCustomerBillingUpdateOnDecline: ").Append(SendCustomerBillingUpdateOnDecline).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentsConfigurationCreditCard);
        }

        /// <summary>
        /// Returns true if PaymentsConfigurationCreditCard instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentsConfigurationCreditCard to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentsConfigurationCreditCard input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AcceptCreditCards == input.AcceptCreditCards ||
                    (this.AcceptCreditCards != null &&
                    this.AcceptCreditCards.Equals(input.AcceptCreditCards))
                ) && 
                (
                    this.BilledBy == input.BilledBy ||
                    (this.BilledBy != null &&
                    this.BilledBy.Equals(input.BilledBy))
                ) && 
                (
                    this.ChargeDuringCheckout == input.ChargeDuringCheckout ||
                    (this.ChargeDuringCheckout != null &&
                    this.ChargeDuringCheckout.Equals(input.ChargeDuringCheckout))
                ) && 
                (
                    this.CollectCvv2 == input.CollectCvv2 ||
                    (this.CollectCvv2 != null &&
                    this.CollectCvv2.Equals(input.CollectCvv2))
                ) && 
                (
                    this.ConfiguredGatewaysDetails == input.ConfiguredGatewaysDetails ||
                    (this.ConfiguredGatewaysDetails != null &&
                    this.ConfiguredGatewaysDetails.Equals(input.ConfiguredGatewaysDetails))
                ) && 
                (
                    this.FailedAttempts == input.FailedAttempts ||
                    (this.FailedAttempts != null &&
                    this.FailedAttempts.Equals(input.FailedAttempts))
                ) && 
                (
                    this.HideConnectSingleGateway == input.HideConnectSingleGateway ||
                    (this.HideConnectSingleGateway != null &&
                    this.HideConnectSingleGateway.Equals(input.HideConnectSingleGateway))
                ) && 
                (
                    this.ImmediateFinalizeDomains == input.ImmediateFinalizeDomains ||
                    (this.ImmediateFinalizeDomains != null &&
                    this.ImmediateFinalizeDomains.Equals(input.ImmediateFinalizeDomains))
                ) && 
                (
                    this.SendCustomerBillingUpdateOnDecline == input.SendCustomerBillingUpdateOnDecline ||
                    (this.SendCustomerBillingUpdateOnDecline != null &&
                    this.SendCustomerBillingUpdateOnDecline.Equals(input.SendCustomerBillingUpdateOnDecline))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AcceptCreditCards != null)
                    hashCode = hashCode * 59 + this.AcceptCreditCards.GetHashCode();
                if (this.BilledBy != null)
                    hashCode = hashCode * 59 + this.BilledBy.GetHashCode();
                if (this.ChargeDuringCheckout != null)
                    hashCode = hashCode * 59 + this.ChargeDuringCheckout.GetHashCode();
                if (this.CollectCvv2 != null)
                    hashCode = hashCode * 59 + this.CollectCvv2.GetHashCode();
                if (this.ConfiguredGatewaysDetails != null)
                    hashCode = hashCode * 59 + this.ConfiguredGatewaysDetails.GetHashCode();
                if (this.FailedAttempts != null)
                    hashCode = hashCode * 59 + this.FailedAttempts.GetHashCode();
                if (this.HideConnectSingleGateway != null)
                    hashCode = hashCode * 59 + this.HideConnectSingleGateway.GetHashCode();
                if (this.ImmediateFinalizeDomains != null)
                    hashCode = hashCode * 59 + this.ImmediateFinalizeDomains.GetHashCode();
                if (this.SendCustomerBillingUpdateOnDecline != null)
                    hashCode = hashCode * 59 + this.SendCustomerBillingUpdateOnDecline.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
