/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// PaymentsConfigurationLoanHero
    /// </summary>
    [DataContract]
    public partial class PaymentsConfigurationLoanHero :  IEquatable<PaymentsConfigurationLoanHero>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentsConfigurationLoanHero" /> class.
        /// </summary>
        /// <param name="acceptLoanHero">acceptLoanHero.</param>
        /// <param name="loanHeroAccountingCode">loanHeroAccountingCode.</param>
        /// <param name="loanHeroDepositToAccount">loanHeroDepositToAccount.</param>
        /// <param name="restrictions">restrictions.</param>
        /// <param name="showLoanHero">showLoanHero.</param>
        public PaymentsConfigurationLoanHero(bool? acceptLoanHero = default(bool?), string loanHeroAccountingCode = default(string), string loanHeroDepositToAccount = default(string), PaymentsConfigurationRestrictions restrictions = default(PaymentsConfigurationRestrictions), bool? showLoanHero = default(bool?))
        {
            this.AcceptLoanHero = acceptLoanHero;
            this.LoanHeroAccountingCode = loanHeroAccountingCode;
            this.LoanHeroDepositToAccount = loanHeroDepositToAccount;
            this.Restrictions = restrictions;
            this.ShowLoanHero = showLoanHero;
        }
        
        /// <summary>
        /// Gets or Sets AcceptLoanHero
        /// </summary>
        [DataMember(Name="acceptLoanHero", EmitDefaultValue=false)]
        public bool? AcceptLoanHero { get; set; }

        /// <summary>
        /// Gets or Sets LoanHeroAccountingCode
        /// </summary>
        [DataMember(Name="loanHeroAccountingCode", EmitDefaultValue=false)]
        public string LoanHeroAccountingCode { get; set; }

        /// <summary>
        /// Gets or Sets LoanHeroDepositToAccount
        /// </summary>
        [DataMember(Name="loanHeroDepositToAccount", EmitDefaultValue=false)]
        public string LoanHeroDepositToAccount { get; set; }

        /// <summary>
        /// Gets or Sets Restrictions
        /// </summary>
        [DataMember(Name="restrictions", EmitDefaultValue=false)]
        public PaymentsConfigurationRestrictions Restrictions { get; set; }

        /// <summary>
        /// Gets or Sets ShowLoanHero
        /// </summary>
        [DataMember(Name="showLoanHero", EmitDefaultValue=false)]
        public bool? ShowLoanHero { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentsConfigurationLoanHero {\n");
            sb.Append("  AcceptLoanHero: ").Append(AcceptLoanHero).Append("\n");
            sb.Append("  LoanHeroAccountingCode: ").Append(LoanHeroAccountingCode).Append("\n");
            sb.Append("  LoanHeroDepositToAccount: ").Append(LoanHeroDepositToAccount).Append("\n");
            sb.Append("  Restrictions: ").Append(Restrictions).Append("\n");
            sb.Append("  ShowLoanHero: ").Append(ShowLoanHero).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentsConfigurationLoanHero);
        }

        /// <summary>
        /// Returns true if PaymentsConfigurationLoanHero instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentsConfigurationLoanHero to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentsConfigurationLoanHero input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AcceptLoanHero == input.AcceptLoanHero ||
                    (this.AcceptLoanHero != null &&
                    this.AcceptLoanHero.Equals(input.AcceptLoanHero))
                ) && 
                (
                    this.LoanHeroAccountingCode == input.LoanHeroAccountingCode ||
                    (this.LoanHeroAccountingCode != null &&
                    this.LoanHeroAccountingCode.Equals(input.LoanHeroAccountingCode))
                ) && 
                (
                    this.LoanHeroDepositToAccount == input.LoanHeroDepositToAccount ||
                    (this.LoanHeroDepositToAccount != null &&
                    this.LoanHeroDepositToAccount.Equals(input.LoanHeroDepositToAccount))
                ) && 
                (
                    this.Restrictions == input.Restrictions ||
                    (this.Restrictions != null &&
                    this.Restrictions.Equals(input.Restrictions))
                ) && 
                (
                    this.ShowLoanHero == input.ShowLoanHero ||
                    (this.ShowLoanHero != null &&
                    this.ShowLoanHero.Equals(input.ShowLoanHero))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AcceptLoanHero != null)
                    hashCode = hashCode * 59 + this.AcceptLoanHero.GetHashCode();
                if (this.LoanHeroAccountingCode != null)
                    hashCode = hashCode * 59 + this.LoanHeroAccountingCode.GetHashCode();
                if (this.LoanHeroDepositToAccount != null)
                    hashCode = hashCode * 59 + this.LoanHeroDepositToAccount.GetHashCode();
                if (this.Restrictions != null)
                    hashCode = hashCode * 59 + this.Restrictions.GetHashCode();
                if (this.ShowLoanHero != null)
                    hashCode = hashCode * 59 + this.ShowLoanHero.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
