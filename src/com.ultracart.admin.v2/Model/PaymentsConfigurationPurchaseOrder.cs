/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// PaymentsConfigurationPurchaseOrder
    /// </summary>
    [DataContract]
    public partial class PaymentsConfigurationPurchaseOrder :  IEquatable<PaymentsConfigurationPurchaseOrder>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentsConfigurationPurchaseOrder" /> class.
        /// </summary>
        /// <param name="acceptPurchaseOrders">acceptPurchaseOrders.</param>
        /// <param name="purchaseOrderApprovedCustomersOnly">purchaseOrderApprovedCustomersOnly.</param>
        /// <param name="purchaseOrderPreventDuplicateNumber">purchaseOrderPreventDuplicateNumber.</param>
        /// <param name="restrictions">restrictions.</param>
        public PaymentsConfigurationPurchaseOrder(bool? acceptPurchaseOrders = default(bool?), bool? purchaseOrderApprovedCustomersOnly = default(bool?), bool? purchaseOrderPreventDuplicateNumber = default(bool?), PaymentsConfigurationRestrictions restrictions = default(PaymentsConfigurationRestrictions))
        {
            this.AcceptPurchaseOrders = acceptPurchaseOrders;
            this.PurchaseOrderApprovedCustomersOnly = purchaseOrderApprovedCustomersOnly;
            this.PurchaseOrderPreventDuplicateNumber = purchaseOrderPreventDuplicateNumber;
            this.Restrictions = restrictions;
        }
        
        /// <summary>
        /// Gets or Sets AcceptPurchaseOrders
        /// </summary>
        [DataMember(Name="acceptPurchaseOrders", EmitDefaultValue=false)]
        public bool? AcceptPurchaseOrders { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderApprovedCustomersOnly
        /// </summary>
        [DataMember(Name="purchaseOrderApprovedCustomersOnly", EmitDefaultValue=false)]
        public bool? PurchaseOrderApprovedCustomersOnly { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderPreventDuplicateNumber
        /// </summary>
        [DataMember(Name="purchaseOrderPreventDuplicateNumber", EmitDefaultValue=false)]
        public bool? PurchaseOrderPreventDuplicateNumber { get; set; }

        /// <summary>
        /// Gets or Sets Restrictions
        /// </summary>
        [DataMember(Name="restrictions", EmitDefaultValue=false)]
        public PaymentsConfigurationRestrictions Restrictions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentsConfigurationPurchaseOrder {\n");
            sb.Append("  AcceptPurchaseOrders: ").Append(AcceptPurchaseOrders).Append("\n");
            sb.Append("  PurchaseOrderApprovedCustomersOnly: ").Append(PurchaseOrderApprovedCustomersOnly).Append("\n");
            sb.Append("  PurchaseOrderPreventDuplicateNumber: ").Append(PurchaseOrderPreventDuplicateNumber).Append("\n");
            sb.Append("  Restrictions: ").Append(Restrictions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentsConfigurationPurchaseOrder);
        }

        /// <summary>
        /// Returns true if PaymentsConfigurationPurchaseOrder instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentsConfigurationPurchaseOrder to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentsConfigurationPurchaseOrder input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AcceptPurchaseOrders == input.AcceptPurchaseOrders ||
                    (this.AcceptPurchaseOrders != null &&
                    this.AcceptPurchaseOrders.Equals(input.AcceptPurchaseOrders))
                ) && 
                (
                    this.PurchaseOrderApprovedCustomersOnly == input.PurchaseOrderApprovedCustomersOnly ||
                    (this.PurchaseOrderApprovedCustomersOnly != null &&
                    this.PurchaseOrderApprovedCustomersOnly.Equals(input.PurchaseOrderApprovedCustomersOnly))
                ) && 
                (
                    this.PurchaseOrderPreventDuplicateNumber == input.PurchaseOrderPreventDuplicateNumber ||
                    (this.PurchaseOrderPreventDuplicateNumber != null &&
                    this.PurchaseOrderPreventDuplicateNumber.Equals(input.PurchaseOrderPreventDuplicateNumber))
                ) && 
                (
                    this.Restrictions == input.Restrictions ||
                    (this.Restrictions != null &&
                    this.Restrictions.Equals(input.Restrictions))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AcceptPurchaseOrders != null)
                    hashCode = hashCode * 59 + this.AcceptPurchaseOrders.GetHashCode();
                if (this.PurchaseOrderApprovedCustomersOnly != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderApprovedCustomersOnly.GetHashCode();
                if (this.PurchaseOrderPreventDuplicateNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderPreventDuplicateNumber.GetHashCode();
                if (this.Restrictions != null)
                    hashCode = hashCode * 59 + this.Restrictions.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
