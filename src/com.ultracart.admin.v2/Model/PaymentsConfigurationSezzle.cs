/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// PaymentsConfigurationSezzle
    /// </summary>
    [DataContract]
    public partial class PaymentsConfigurationSezzle :  IEquatable<PaymentsConfigurationSezzle>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentsConfigurationSezzle" /> class.
        /// </summary>
        /// <param name="acceptSezzle">acceptSezzle.</param>
        /// <param name="restrictions">restrictions.</param>
        /// <param name="sezzleAccountingCode">sezzleAccountingCode.</param>
        /// <param name="sezzleBusinessId">sezzleBusinessId.</param>
        /// <param name="sezzleDepositToAccount">sezzleDepositToAccount.</param>
        /// <param name="sezzleEnvironment">sezzleEnvironment.</param>
        /// <param name="sezzlePrivateApiKey">sezzlePrivateApiKey.</param>
        /// <param name="sezzlePublicApiKey">sezzlePublicApiKey.</param>
        public PaymentsConfigurationSezzle(bool? acceptSezzle = default(bool?), PaymentsConfigurationRestrictions restrictions = default(PaymentsConfigurationRestrictions), string sezzleAccountingCode = default(string), string sezzleBusinessId = default(string), string sezzleDepositToAccount = default(string), string sezzleEnvironment = default(string), string sezzlePrivateApiKey = default(string), string sezzlePublicApiKey = default(string))
        {
            this.AcceptSezzle = acceptSezzle;
            this.Restrictions = restrictions;
            this.SezzleAccountingCode = sezzleAccountingCode;
            this.SezzleBusinessId = sezzleBusinessId;
            this.SezzleDepositToAccount = sezzleDepositToAccount;
            this.SezzleEnvironment = sezzleEnvironment;
            this.SezzlePrivateApiKey = sezzlePrivateApiKey;
            this.SezzlePublicApiKey = sezzlePublicApiKey;
        }
        
        /// <summary>
        /// Gets or Sets AcceptSezzle
        /// </summary>
        [DataMember(Name="acceptSezzle", EmitDefaultValue=false)]
        public bool? AcceptSezzle { get; set; }

        /// <summary>
        /// Gets or Sets Restrictions
        /// </summary>
        [DataMember(Name="restrictions", EmitDefaultValue=false)]
        public PaymentsConfigurationRestrictions Restrictions { get; set; }

        /// <summary>
        /// Gets or Sets SezzleAccountingCode
        /// </summary>
        [DataMember(Name="sezzleAccountingCode", EmitDefaultValue=false)]
        public string SezzleAccountingCode { get; set; }

        /// <summary>
        /// Gets or Sets SezzleBusinessId
        /// </summary>
        [DataMember(Name="sezzleBusinessId", EmitDefaultValue=false)]
        public string SezzleBusinessId { get; set; }

        /// <summary>
        /// Gets or Sets SezzleDepositToAccount
        /// </summary>
        [DataMember(Name="sezzleDepositToAccount", EmitDefaultValue=false)]
        public string SezzleDepositToAccount { get; set; }

        /// <summary>
        /// Gets or Sets SezzleEnvironment
        /// </summary>
        [DataMember(Name="sezzleEnvironment", EmitDefaultValue=false)]
        public string SezzleEnvironment { get; set; }

        /// <summary>
        /// Gets or Sets SezzlePrivateApiKey
        /// </summary>
        [DataMember(Name="sezzlePrivateApiKey", EmitDefaultValue=false)]
        public string SezzlePrivateApiKey { get; set; }

        /// <summary>
        /// Gets or Sets SezzlePublicApiKey
        /// </summary>
        [DataMember(Name="sezzlePublicApiKey", EmitDefaultValue=false)]
        public string SezzlePublicApiKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentsConfigurationSezzle {\n");
            sb.Append("  AcceptSezzle: ").Append(AcceptSezzle).Append("\n");
            sb.Append("  Restrictions: ").Append(Restrictions).Append("\n");
            sb.Append("  SezzleAccountingCode: ").Append(SezzleAccountingCode).Append("\n");
            sb.Append("  SezzleBusinessId: ").Append(SezzleBusinessId).Append("\n");
            sb.Append("  SezzleDepositToAccount: ").Append(SezzleDepositToAccount).Append("\n");
            sb.Append("  SezzleEnvironment: ").Append(SezzleEnvironment).Append("\n");
            sb.Append("  SezzlePrivateApiKey: ").Append(SezzlePrivateApiKey).Append("\n");
            sb.Append("  SezzlePublicApiKey: ").Append(SezzlePublicApiKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentsConfigurationSezzle);
        }

        /// <summary>
        /// Returns true if PaymentsConfigurationSezzle instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentsConfigurationSezzle to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentsConfigurationSezzle input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AcceptSezzle == input.AcceptSezzle ||
                    (this.AcceptSezzle != null &&
                    this.AcceptSezzle.Equals(input.AcceptSezzle))
                ) && 
                (
                    this.Restrictions == input.Restrictions ||
                    (this.Restrictions != null &&
                    this.Restrictions.Equals(input.Restrictions))
                ) && 
                (
                    this.SezzleAccountingCode == input.SezzleAccountingCode ||
                    (this.SezzleAccountingCode != null &&
                    this.SezzleAccountingCode.Equals(input.SezzleAccountingCode))
                ) && 
                (
                    this.SezzleBusinessId == input.SezzleBusinessId ||
                    (this.SezzleBusinessId != null &&
                    this.SezzleBusinessId.Equals(input.SezzleBusinessId))
                ) && 
                (
                    this.SezzleDepositToAccount == input.SezzleDepositToAccount ||
                    (this.SezzleDepositToAccount != null &&
                    this.SezzleDepositToAccount.Equals(input.SezzleDepositToAccount))
                ) && 
                (
                    this.SezzleEnvironment == input.SezzleEnvironment ||
                    (this.SezzleEnvironment != null &&
                    this.SezzleEnvironment.Equals(input.SezzleEnvironment))
                ) && 
                (
                    this.SezzlePrivateApiKey == input.SezzlePrivateApiKey ||
                    (this.SezzlePrivateApiKey != null &&
                    this.SezzlePrivateApiKey.Equals(input.SezzlePrivateApiKey))
                ) && 
                (
                    this.SezzlePublicApiKey == input.SezzlePublicApiKey ||
                    (this.SezzlePublicApiKey != null &&
                    this.SezzlePublicApiKey.Equals(input.SezzlePublicApiKey))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AcceptSezzle != null)
                    hashCode = hashCode * 59 + this.AcceptSezzle.GetHashCode();
                if (this.Restrictions != null)
                    hashCode = hashCode * 59 + this.Restrictions.GetHashCode();
                if (this.SezzleAccountingCode != null)
                    hashCode = hashCode * 59 + this.SezzleAccountingCode.GetHashCode();
                if (this.SezzleBusinessId != null)
                    hashCode = hashCode * 59 + this.SezzleBusinessId.GetHashCode();
                if (this.SezzleDepositToAccount != null)
                    hashCode = hashCode * 59 + this.SezzleDepositToAccount.GetHashCode();
                if (this.SezzleEnvironment != null)
                    hashCode = hashCode * 59 + this.SezzleEnvironment.GetHashCode();
                if (this.SezzlePrivateApiKey != null)
                    hashCode = hashCode * 59 + this.SezzlePrivateApiKey.GetHashCode();
                if (this.SezzlePublicApiKey != null)
                    hashCode = hashCode * 59 + this.SezzlePublicApiKey.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
