/* 
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// PaymentsConfigurationWePay
    /// </summary>
    [DataContract]
    public partial class PaymentsConfigurationWePay :  IEquatable<PaymentsConfigurationWePay>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentsConfigurationWePay" /> class.
        /// </summary>
        /// <param name="acceptWepay">acceptWepay.</param>
        /// <param name="hideCreditCardsNonUltraCartPayments">hideCreditCardsNonUltraCartPayments.</param>
        /// <param name="hideSurchargeContent">hideSurchargeContent.</param>
        /// <param name="removePayPalPro">removePayPalPro.</param>
        /// <param name="restrictions">restrictions.</param>
        /// <param name="shortPayPalMarketingText">shortPayPalMarketingText.</param>
        /// <param name="showUltraCartPaymentsDisabled">showUltraCartPaymentsDisabled.</param>
        /// <param name="showUltraCartPaymentsIntro">showUltraCartPaymentsIntro.</param>
        /// <param name="showUltraCartPaymentsVerification">showUltraCartPaymentsVerification.</param>
        /// <param name="showUltraCartPaymentsVerified">showUltraCartPaymentsVerified.</param>
        /// <param name="wepayAccountUpdateUri">wepayAccountUpdateUri.</param>
        /// <param name="wepayAddress1">wepayAddress1.</param>
        /// <param name="wepayAddress2">wepayAddress2.</param>
        /// <param name="wepayCanadaAcceptDebitCards">wepayCanadaAcceptDebitCards.</param>
        /// <param name="wepayCity">wepayCity.</param>
        /// <param name="wepayCompany">wepayCompany.</param>
        /// <param name="wepayCompanyDescription">wepayCompanyDescription.</param>
        /// <param name="wepayConsoleHostname">wepayConsoleHostname.</param>
        /// <param name="wepayCountry">wepayCountry.</param>
        /// <param name="wepayCurrency">wepayCurrency.</param>
        /// <param name="wepayExpectedRevenue">wepayExpectedRevenue.</param>
        /// <param name="wepayIndustry">wepayIndustry.</param>
        /// <param name="wepayOwnerEmail">wepayOwnerEmail.</param>
        /// <param name="wepayOwnerName">wepayOwnerName.</param>
        /// <param name="wepayOwnerPhone">wepayOwnerPhone.</param>
        /// <param name="wepayState">wepayState.</param>
        /// <param name="wepayWebsiteUrl">wepayWebsiteUrl.</param>
        /// <param name="wepayZip">wepayZip.</param>
        public PaymentsConfigurationWePay(bool? acceptWepay = default(bool?), bool? hideCreditCardsNonUltraCartPayments = default(bool?), bool? hideSurchargeContent = default(bool?), bool? removePayPalPro = default(bool?), PaymentsConfigurationRestrictions restrictions = default(PaymentsConfigurationRestrictions), bool? shortPayPalMarketingText = default(bool?), bool? showUltraCartPaymentsDisabled = default(bool?), bool? showUltraCartPaymentsIntro = default(bool?), bool? showUltraCartPaymentsVerification = default(bool?), bool? showUltraCartPaymentsVerified = default(bool?), string wepayAccountUpdateUri = default(string), string wepayAddress1 = default(string), string wepayAddress2 = default(string), bool? wepayCanadaAcceptDebitCards = default(bool?), string wepayCity = default(string), string wepayCompany = default(string), string wepayCompanyDescription = default(string), string wepayConsoleHostname = default(string), string wepayCountry = default(string), string wepayCurrency = default(string), string wepayExpectedRevenue = default(string), string wepayIndustry = default(string), string wepayOwnerEmail = default(string), string wepayOwnerName = default(string), string wepayOwnerPhone = default(string), string wepayState = default(string), string wepayWebsiteUrl = default(string), string wepayZip = default(string))
        {
            this.AcceptWepay = acceptWepay;
            this.HideCreditCardsNonUltraCartPayments = hideCreditCardsNonUltraCartPayments;
            this.HideSurchargeContent = hideSurchargeContent;
            this.RemovePayPalPro = removePayPalPro;
            this.Restrictions = restrictions;
            this.ShortPayPalMarketingText = shortPayPalMarketingText;
            this.ShowUltraCartPaymentsDisabled = showUltraCartPaymentsDisabled;
            this.ShowUltraCartPaymentsIntro = showUltraCartPaymentsIntro;
            this.ShowUltraCartPaymentsVerification = showUltraCartPaymentsVerification;
            this.ShowUltraCartPaymentsVerified = showUltraCartPaymentsVerified;
            this.WepayAccountUpdateUri = wepayAccountUpdateUri;
            this.WepayAddress1 = wepayAddress1;
            this.WepayAddress2 = wepayAddress2;
            this.WepayCanadaAcceptDebitCards = wepayCanadaAcceptDebitCards;
            this.WepayCity = wepayCity;
            this.WepayCompany = wepayCompany;
            this.WepayCompanyDescription = wepayCompanyDescription;
            this.WepayConsoleHostname = wepayConsoleHostname;
            this.WepayCountry = wepayCountry;
            this.WepayCurrency = wepayCurrency;
            this.WepayExpectedRevenue = wepayExpectedRevenue;
            this.WepayIndustry = wepayIndustry;
            this.WepayOwnerEmail = wepayOwnerEmail;
            this.WepayOwnerName = wepayOwnerName;
            this.WepayOwnerPhone = wepayOwnerPhone;
            this.WepayState = wepayState;
            this.WepayWebsiteUrl = wepayWebsiteUrl;
            this.WepayZip = wepayZip;
        }
        
        /// <summary>
        /// Gets or Sets AcceptWepay
        /// </summary>
        [DataMember(Name="acceptWepay", EmitDefaultValue=false)]
        public bool? AcceptWepay { get; set; }

        /// <summary>
        /// Gets or Sets HideCreditCardsNonUltraCartPayments
        /// </summary>
        [DataMember(Name="hideCreditCardsNonUltraCartPayments", EmitDefaultValue=false)]
        public bool? HideCreditCardsNonUltraCartPayments { get; set; }

        /// <summary>
        /// Gets or Sets HideSurchargeContent
        /// </summary>
        [DataMember(Name="hideSurchargeContent", EmitDefaultValue=false)]
        public bool? HideSurchargeContent { get; set; }

        /// <summary>
        /// Gets or Sets RemovePayPalPro
        /// </summary>
        [DataMember(Name="removePayPalPro", EmitDefaultValue=false)]
        public bool? RemovePayPalPro { get; set; }

        /// <summary>
        /// Gets or Sets Restrictions
        /// </summary>
        [DataMember(Name="restrictions", EmitDefaultValue=false)]
        public PaymentsConfigurationRestrictions Restrictions { get; set; }

        /// <summary>
        /// Gets or Sets ShortPayPalMarketingText
        /// </summary>
        [DataMember(Name="shortPayPalMarketingText", EmitDefaultValue=false)]
        public bool? ShortPayPalMarketingText { get; set; }

        /// <summary>
        /// Gets or Sets ShowUltraCartPaymentsDisabled
        /// </summary>
        [DataMember(Name="showUltraCartPaymentsDisabled", EmitDefaultValue=false)]
        public bool? ShowUltraCartPaymentsDisabled { get; set; }

        /// <summary>
        /// Gets or Sets ShowUltraCartPaymentsIntro
        /// </summary>
        [DataMember(Name="showUltraCartPaymentsIntro", EmitDefaultValue=false)]
        public bool? ShowUltraCartPaymentsIntro { get; set; }

        /// <summary>
        /// Gets or Sets ShowUltraCartPaymentsVerification
        /// </summary>
        [DataMember(Name="showUltraCartPaymentsVerification", EmitDefaultValue=false)]
        public bool? ShowUltraCartPaymentsVerification { get; set; }

        /// <summary>
        /// Gets or Sets ShowUltraCartPaymentsVerified
        /// </summary>
        [DataMember(Name="showUltraCartPaymentsVerified", EmitDefaultValue=false)]
        public bool? ShowUltraCartPaymentsVerified { get; set; }

        /// <summary>
        /// Gets or Sets WepayAccountUpdateUri
        /// </summary>
        [DataMember(Name="wepayAccountUpdateUri", EmitDefaultValue=false)]
        public string WepayAccountUpdateUri { get; set; }

        /// <summary>
        /// Gets or Sets WepayAddress1
        /// </summary>
        [DataMember(Name="wepayAddress1", EmitDefaultValue=false)]
        public string WepayAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets WepayAddress2
        /// </summary>
        [DataMember(Name="wepayAddress2", EmitDefaultValue=false)]
        public string WepayAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets WepayCanadaAcceptDebitCards
        /// </summary>
        [DataMember(Name="wepayCanadaAcceptDebitCards", EmitDefaultValue=false)]
        public bool? WepayCanadaAcceptDebitCards { get; set; }

        /// <summary>
        /// Gets or Sets WepayCity
        /// </summary>
        [DataMember(Name="wepayCity", EmitDefaultValue=false)]
        public string WepayCity { get; set; }

        /// <summary>
        /// Gets or Sets WepayCompany
        /// </summary>
        [DataMember(Name="wepayCompany", EmitDefaultValue=false)]
        public string WepayCompany { get; set; }

        /// <summary>
        /// Gets or Sets WepayCompanyDescription
        /// </summary>
        [DataMember(Name="wepayCompanyDescription", EmitDefaultValue=false)]
        public string WepayCompanyDescription { get; set; }

        /// <summary>
        /// Gets or Sets WepayConsoleHostname
        /// </summary>
        [DataMember(Name="wepayConsoleHostname", EmitDefaultValue=false)]
        public string WepayConsoleHostname { get; set; }

        /// <summary>
        /// Gets or Sets WepayCountry
        /// </summary>
        [DataMember(Name="wepayCountry", EmitDefaultValue=false)]
        public string WepayCountry { get; set; }

        /// <summary>
        /// Gets or Sets WepayCurrency
        /// </summary>
        [DataMember(Name="wepayCurrency", EmitDefaultValue=false)]
        public string WepayCurrency { get; set; }

        /// <summary>
        /// Gets or Sets WepayExpectedRevenue
        /// </summary>
        [DataMember(Name="wepayExpectedRevenue", EmitDefaultValue=false)]
        public string WepayExpectedRevenue { get; set; }

        /// <summary>
        /// Gets or Sets WepayIndustry
        /// </summary>
        [DataMember(Name="wepayIndustry", EmitDefaultValue=false)]
        public string WepayIndustry { get; set; }

        /// <summary>
        /// Gets or Sets WepayOwnerEmail
        /// </summary>
        [DataMember(Name="wepayOwnerEmail", EmitDefaultValue=false)]
        public string WepayOwnerEmail { get; set; }

        /// <summary>
        /// Gets or Sets WepayOwnerName
        /// </summary>
        [DataMember(Name="wepayOwnerName", EmitDefaultValue=false)]
        public string WepayOwnerName { get; set; }

        /// <summary>
        /// Gets or Sets WepayOwnerPhone
        /// </summary>
        [DataMember(Name="wepayOwnerPhone", EmitDefaultValue=false)]
        public string WepayOwnerPhone { get; set; }

        /// <summary>
        /// Gets or Sets WepayState
        /// </summary>
        [DataMember(Name="wepayState", EmitDefaultValue=false)]
        public string WepayState { get; set; }

        /// <summary>
        /// Gets or Sets WepayWebsiteUrl
        /// </summary>
        [DataMember(Name="wepayWebsiteUrl", EmitDefaultValue=false)]
        public string WepayWebsiteUrl { get; set; }

        /// <summary>
        /// Gets or Sets WepayZip
        /// </summary>
        [DataMember(Name="wepayZip", EmitDefaultValue=false)]
        public string WepayZip { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentsConfigurationWePay {\n");
            sb.Append("  AcceptWepay: ").Append(AcceptWepay).Append("\n");
            sb.Append("  HideCreditCardsNonUltraCartPayments: ").Append(HideCreditCardsNonUltraCartPayments).Append("\n");
            sb.Append("  HideSurchargeContent: ").Append(HideSurchargeContent).Append("\n");
            sb.Append("  RemovePayPalPro: ").Append(RemovePayPalPro).Append("\n");
            sb.Append("  Restrictions: ").Append(Restrictions).Append("\n");
            sb.Append("  ShortPayPalMarketingText: ").Append(ShortPayPalMarketingText).Append("\n");
            sb.Append("  ShowUltraCartPaymentsDisabled: ").Append(ShowUltraCartPaymentsDisabled).Append("\n");
            sb.Append("  ShowUltraCartPaymentsIntro: ").Append(ShowUltraCartPaymentsIntro).Append("\n");
            sb.Append("  ShowUltraCartPaymentsVerification: ").Append(ShowUltraCartPaymentsVerification).Append("\n");
            sb.Append("  ShowUltraCartPaymentsVerified: ").Append(ShowUltraCartPaymentsVerified).Append("\n");
            sb.Append("  WepayAccountUpdateUri: ").Append(WepayAccountUpdateUri).Append("\n");
            sb.Append("  WepayAddress1: ").Append(WepayAddress1).Append("\n");
            sb.Append("  WepayAddress2: ").Append(WepayAddress2).Append("\n");
            sb.Append("  WepayCanadaAcceptDebitCards: ").Append(WepayCanadaAcceptDebitCards).Append("\n");
            sb.Append("  WepayCity: ").Append(WepayCity).Append("\n");
            sb.Append("  WepayCompany: ").Append(WepayCompany).Append("\n");
            sb.Append("  WepayCompanyDescription: ").Append(WepayCompanyDescription).Append("\n");
            sb.Append("  WepayConsoleHostname: ").Append(WepayConsoleHostname).Append("\n");
            sb.Append("  WepayCountry: ").Append(WepayCountry).Append("\n");
            sb.Append("  WepayCurrency: ").Append(WepayCurrency).Append("\n");
            sb.Append("  WepayExpectedRevenue: ").Append(WepayExpectedRevenue).Append("\n");
            sb.Append("  WepayIndustry: ").Append(WepayIndustry).Append("\n");
            sb.Append("  WepayOwnerEmail: ").Append(WepayOwnerEmail).Append("\n");
            sb.Append("  WepayOwnerName: ").Append(WepayOwnerName).Append("\n");
            sb.Append("  WepayOwnerPhone: ").Append(WepayOwnerPhone).Append("\n");
            sb.Append("  WepayState: ").Append(WepayState).Append("\n");
            sb.Append("  WepayWebsiteUrl: ").Append(WepayWebsiteUrl).Append("\n");
            sb.Append("  WepayZip: ").Append(WepayZip).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentsConfigurationWePay);
        }

        /// <summary>
        /// Returns true if PaymentsConfigurationWePay instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentsConfigurationWePay to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentsConfigurationWePay input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AcceptWepay == input.AcceptWepay ||
                    (this.AcceptWepay != null &&
                    this.AcceptWepay.Equals(input.AcceptWepay))
                ) && 
                (
                    this.HideCreditCardsNonUltraCartPayments == input.HideCreditCardsNonUltraCartPayments ||
                    (this.HideCreditCardsNonUltraCartPayments != null &&
                    this.HideCreditCardsNonUltraCartPayments.Equals(input.HideCreditCardsNonUltraCartPayments))
                ) && 
                (
                    this.HideSurchargeContent == input.HideSurchargeContent ||
                    (this.HideSurchargeContent != null &&
                    this.HideSurchargeContent.Equals(input.HideSurchargeContent))
                ) && 
                (
                    this.RemovePayPalPro == input.RemovePayPalPro ||
                    (this.RemovePayPalPro != null &&
                    this.RemovePayPalPro.Equals(input.RemovePayPalPro))
                ) && 
                (
                    this.Restrictions == input.Restrictions ||
                    (this.Restrictions != null &&
                    this.Restrictions.Equals(input.Restrictions))
                ) && 
                (
                    this.ShortPayPalMarketingText == input.ShortPayPalMarketingText ||
                    (this.ShortPayPalMarketingText != null &&
                    this.ShortPayPalMarketingText.Equals(input.ShortPayPalMarketingText))
                ) && 
                (
                    this.ShowUltraCartPaymentsDisabled == input.ShowUltraCartPaymentsDisabled ||
                    (this.ShowUltraCartPaymentsDisabled != null &&
                    this.ShowUltraCartPaymentsDisabled.Equals(input.ShowUltraCartPaymentsDisabled))
                ) && 
                (
                    this.ShowUltraCartPaymentsIntro == input.ShowUltraCartPaymentsIntro ||
                    (this.ShowUltraCartPaymentsIntro != null &&
                    this.ShowUltraCartPaymentsIntro.Equals(input.ShowUltraCartPaymentsIntro))
                ) && 
                (
                    this.ShowUltraCartPaymentsVerification == input.ShowUltraCartPaymentsVerification ||
                    (this.ShowUltraCartPaymentsVerification != null &&
                    this.ShowUltraCartPaymentsVerification.Equals(input.ShowUltraCartPaymentsVerification))
                ) && 
                (
                    this.ShowUltraCartPaymentsVerified == input.ShowUltraCartPaymentsVerified ||
                    (this.ShowUltraCartPaymentsVerified != null &&
                    this.ShowUltraCartPaymentsVerified.Equals(input.ShowUltraCartPaymentsVerified))
                ) && 
                (
                    this.WepayAccountUpdateUri == input.WepayAccountUpdateUri ||
                    (this.WepayAccountUpdateUri != null &&
                    this.WepayAccountUpdateUri.Equals(input.WepayAccountUpdateUri))
                ) && 
                (
                    this.WepayAddress1 == input.WepayAddress1 ||
                    (this.WepayAddress1 != null &&
                    this.WepayAddress1.Equals(input.WepayAddress1))
                ) && 
                (
                    this.WepayAddress2 == input.WepayAddress2 ||
                    (this.WepayAddress2 != null &&
                    this.WepayAddress2.Equals(input.WepayAddress2))
                ) && 
                (
                    this.WepayCanadaAcceptDebitCards == input.WepayCanadaAcceptDebitCards ||
                    (this.WepayCanadaAcceptDebitCards != null &&
                    this.WepayCanadaAcceptDebitCards.Equals(input.WepayCanadaAcceptDebitCards))
                ) && 
                (
                    this.WepayCity == input.WepayCity ||
                    (this.WepayCity != null &&
                    this.WepayCity.Equals(input.WepayCity))
                ) && 
                (
                    this.WepayCompany == input.WepayCompany ||
                    (this.WepayCompany != null &&
                    this.WepayCompany.Equals(input.WepayCompany))
                ) && 
                (
                    this.WepayCompanyDescription == input.WepayCompanyDescription ||
                    (this.WepayCompanyDescription != null &&
                    this.WepayCompanyDescription.Equals(input.WepayCompanyDescription))
                ) && 
                (
                    this.WepayConsoleHostname == input.WepayConsoleHostname ||
                    (this.WepayConsoleHostname != null &&
                    this.WepayConsoleHostname.Equals(input.WepayConsoleHostname))
                ) && 
                (
                    this.WepayCountry == input.WepayCountry ||
                    (this.WepayCountry != null &&
                    this.WepayCountry.Equals(input.WepayCountry))
                ) && 
                (
                    this.WepayCurrency == input.WepayCurrency ||
                    (this.WepayCurrency != null &&
                    this.WepayCurrency.Equals(input.WepayCurrency))
                ) && 
                (
                    this.WepayExpectedRevenue == input.WepayExpectedRevenue ||
                    (this.WepayExpectedRevenue != null &&
                    this.WepayExpectedRevenue.Equals(input.WepayExpectedRevenue))
                ) && 
                (
                    this.WepayIndustry == input.WepayIndustry ||
                    (this.WepayIndustry != null &&
                    this.WepayIndustry.Equals(input.WepayIndustry))
                ) && 
                (
                    this.WepayOwnerEmail == input.WepayOwnerEmail ||
                    (this.WepayOwnerEmail != null &&
                    this.WepayOwnerEmail.Equals(input.WepayOwnerEmail))
                ) && 
                (
                    this.WepayOwnerName == input.WepayOwnerName ||
                    (this.WepayOwnerName != null &&
                    this.WepayOwnerName.Equals(input.WepayOwnerName))
                ) && 
                (
                    this.WepayOwnerPhone == input.WepayOwnerPhone ||
                    (this.WepayOwnerPhone != null &&
                    this.WepayOwnerPhone.Equals(input.WepayOwnerPhone))
                ) && 
                (
                    this.WepayState == input.WepayState ||
                    (this.WepayState != null &&
                    this.WepayState.Equals(input.WepayState))
                ) && 
                (
                    this.WepayWebsiteUrl == input.WepayWebsiteUrl ||
                    (this.WepayWebsiteUrl != null &&
                    this.WepayWebsiteUrl.Equals(input.WepayWebsiteUrl))
                ) && 
                (
                    this.WepayZip == input.WepayZip ||
                    (this.WepayZip != null &&
                    this.WepayZip.Equals(input.WepayZip))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AcceptWepay != null)
                    hashCode = hashCode * 59 + this.AcceptWepay.GetHashCode();
                if (this.HideCreditCardsNonUltraCartPayments != null)
                    hashCode = hashCode * 59 + this.HideCreditCardsNonUltraCartPayments.GetHashCode();
                if (this.HideSurchargeContent != null)
                    hashCode = hashCode * 59 + this.HideSurchargeContent.GetHashCode();
                if (this.RemovePayPalPro != null)
                    hashCode = hashCode * 59 + this.RemovePayPalPro.GetHashCode();
                if (this.Restrictions != null)
                    hashCode = hashCode * 59 + this.Restrictions.GetHashCode();
                if (this.ShortPayPalMarketingText != null)
                    hashCode = hashCode * 59 + this.ShortPayPalMarketingText.GetHashCode();
                if (this.ShowUltraCartPaymentsDisabled != null)
                    hashCode = hashCode * 59 + this.ShowUltraCartPaymentsDisabled.GetHashCode();
                if (this.ShowUltraCartPaymentsIntro != null)
                    hashCode = hashCode * 59 + this.ShowUltraCartPaymentsIntro.GetHashCode();
                if (this.ShowUltraCartPaymentsVerification != null)
                    hashCode = hashCode * 59 + this.ShowUltraCartPaymentsVerification.GetHashCode();
                if (this.ShowUltraCartPaymentsVerified != null)
                    hashCode = hashCode * 59 + this.ShowUltraCartPaymentsVerified.GetHashCode();
                if (this.WepayAccountUpdateUri != null)
                    hashCode = hashCode * 59 + this.WepayAccountUpdateUri.GetHashCode();
                if (this.WepayAddress1 != null)
                    hashCode = hashCode * 59 + this.WepayAddress1.GetHashCode();
                if (this.WepayAddress2 != null)
                    hashCode = hashCode * 59 + this.WepayAddress2.GetHashCode();
                if (this.WepayCanadaAcceptDebitCards != null)
                    hashCode = hashCode * 59 + this.WepayCanadaAcceptDebitCards.GetHashCode();
                if (this.WepayCity != null)
                    hashCode = hashCode * 59 + this.WepayCity.GetHashCode();
                if (this.WepayCompany != null)
                    hashCode = hashCode * 59 + this.WepayCompany.GetHashCode();
                if (this.WepayCompanyDescription != null)
                    hashCode = hashCode * 59 + this.WepayCompanyDescription.GetHashCode();
                if (this.WepayConsoleHostname != null)
                    hashCode = hashCode * 59 + this.WepayConsoleHostname.GetHashCode();
                if (this.WepayCountry != null)
                    hashCode = hashCode * 59 + this.WepayCountry.GetHashCode();
                if (this.WepayCurrency != null)
                    hashCode = hashCode * 59 + this.WepayCurrency.GetHashCode();
                if (this.WepayExpectedRevenue != null)
                    hashCode = hashCode * 59 + this.WepayExpectedRevenue.GetHashCode();
                if (this.WepayIndustry != null)
                    hashCode = hashCode * 59 + this.WepayIndustry.GetHashCode();
                if (this.WepayOwnerEmail != null)
                    hashCode = hashCode * 59 + this.WepayOwnerEmail.GetHashCode();
                if (this.WepayOwnerName != null)
                    hashCode = hashCode * 59 + this.WepayOwnerName.GetHashCode();
                if (this.WepayOwnerPhone != null)
                    hashCode = hashCode * 59 + this.WepayOwnerPhone.GetHashCode();
                if (this.WepayState != null)
                    hashCode = hashCode * 59 + this.WepayState.GetHashCode();
                if (this.WepayWebsiteUrl != null)
                    hashCode = hashCode * 59 + this.WepayWebsiteUrl.GetHashCode();
                if (this.WepayZip != null)
                    hashCode = hashCode * 59 + this.WepayZip.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
